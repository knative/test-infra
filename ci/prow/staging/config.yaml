# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ############################################################
# ####                                                    ####
# #### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ####
# ####     USE "make config" TO REGENERATE THIS FILE.     ####
# ####                                                    ####
# ############################################################
# FROM COMMIT: ((COMMIT_HASH_TOKEN))
plank:
  job_url_template: 'https://prow-staging.knative.dev/view/gcs/knative-prow-staging/{{if or (eq .Spec.Type "presubmit") (eq .Spec.Type "batch")}}pr-logs/pull{{with .Spec.Refs}}/{{.Org}}_{{.Repo}}{{end}}{{else}}logs{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://gubernator.knative.dev/pr/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://gubernator.knative.dev/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).'
  job_url_prefix_config: 
    "*": "https://prow-staging.knative.dev/view/gcs/"
  pod_pending_timeout: 60m
  default_decoration_config:
    timeout: 7200000000000 # 2h
    grace_period: 15000000000 # 15s
    utility_images:
      # Update these versions when updating plank version in cluster.yaml
      clonerefs: "gcr.io/k8s-prow/clonerefs:v20200130-51abc4f96"
      initupload: "gcr.io/k8s-prow/initupload:v20200130-51abc4f96"
      entrypoint: "gcr.io/k8s-prow/entrypoint:v20200130-51abc4f96"
      sidecar: "gcr.io/k8s-prow/sidecar:v20200130-51abc4f96"
    gcs_configuration:
      bucket: "knative-prow-staging"
      path_strategy: "explicit"
    gcs_credentials_secret: "test-account"
deck:
  spyglass:
    size_limit: 500000000 # 500MB
    gcs_browser_prefix: https://console.cloud.google.com/storage/browser/
    testgrid_config: gs://knative-testgrid-staging/config
    testgrid_root: https://testgrid.knative.dev/
    announcement: "The old job viewer, Gubernator, has been deprecated in favour of this page, Spyglass.{{if .ArtifactPath}} For now, the old page is <a href='https://gubernator.knative.dev/build/{{.ArtifactPath}}'>still available</a>.{{end}} Please send feedback to Knative productivity."
    lenses:
    - lens:
        name: metadata
      required_files:
      - started.json|finished.json
    - lens:
        name: buildlog
        config:
          highlight_regexes:
          # regexes to match generic errors
          - timed out
          # regexes to match specific errors we can have
          # go test timeout
          - 'panic: test timed out after.*$'
          # test case failure
          - 'FAIL:'
          # boskos error
          - 'boskos failed to acquire project'
      required_files:
      - build-log.txt
    - lens:
        name: junit
      required_files:
      - artifacts/junit.*\.xml
  tide_update_period: 1s
prowjob_namespace: default
pod_namespace: test-pods
log_level: debug
branch-protection:
  orgs:
    knative:
      # Protect all branches in knative
      # This means all prow jobs with "always_run" set are required
      # to pass before tide can merge the PR.
      # Currently this is manually enabled by the knative org admins,
      # but it's stated here for documentation and reference purposes.
      protect: true
      # Admins can overrule checks
      enforce_admins: false
    google:
      protect: true
      enforce_admins: false
tide:
  queries:
  - repos:
    - "knative-prow-robot/serving"
    - "knative-prow-robot/test-infra"
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge/hold
    - do-not-merge/work-in-progress
    - do-not-merge/invalid-owners-file
  merge_method:
    knative: squash
    google/knative-gcp: squash
  target_url: https://prow-staging.knative.dev/tide
  pr_status_base_url: https://prow-staging.knative.dev/pr
  blocker_label: tide/merge-blocker
  squash_label: tide/merge-method-squash
  rebase_label: tide/merge-method-rebase
  merge_label: tide/merge-method-merge
presubmits:
  knative-prow-robot/serving:
  - name: pull-knative-prow-robot-serving-build-tests
    agent: kubernetes
    context: pull-knative-prow-robot-serving-build-tests
    always_run: true
    rerun_command: "/test pull-knative-prow-robot-serving-build-tests"
    trigger: "(?m)^/test (all|pull-knative-prow-robot-serving-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    branches:
    - "legacy"
    spec:
      containers:
      - image: gcr.io/knative-tests-staging/test-infra/prow-tests-go112:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-prow-robot-serving-build-tests
    agent: kubernetes
    context: pull-knative-prow-robot-serving-build-tests
    always_run: true
    rerun_command: "/test pull-knative-prow-robot-serving-build-tests"
    trigger: "(?m)^/test (all|pull-knative-prow-robot-serving-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    skip_branches:
    - "legacy"
    spec:
      containers:
      - image: gcr.io/knative-tests-staging/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-prow-robot-serving-unit-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-prow-robot-serving-unit-tests
    context: pull-knative-prow-robot-serving-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-prow-robot-serving-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-prow-robot-serving-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    branches:
    - "legacy"
    spec:
      containers:
      - image: gcr.io/knative-tests-staging/test-infra/prow-tests-go112:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-prow-robot-serving-unit-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-prow-robot-serving-unit-tests
    context: pull-knative-prow-robot-serving-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-prow-robot-serving-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-prow-robot-serving-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    skip_branches:
    - "legacy"
    spec:
      containers:
      - image: gcr.io/knative-tests-staging/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-prow-robot-serving-integration-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-prow-robot-serving-integration-tests
    context: pull-knative-prow-robot-serving-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-prow-robot-serving-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-prow-robot-serving-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    branches:
    - "legacy"
    spec:
      containers:
      - image: gcr.io/knative-tests-staging/test-infra/prow-tests-go112:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-prow-robot-serving-integration-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-prow-robot-serving-integration-tests
    context: pull-knative-prow-robot-serving-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-prow-robot-serving-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-prow-robot-serving-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    skip_branches:
    - "legacy"
    spec:
      containers:
      - image: gcr.io/knative-tests-staging/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  knative-prow-robot/test-infra:
  - name: pull-knative-prow-robot-test-infra-build-tests
    agent: kubernetes
    context: pull-knative-prow-robot-test-infra-build-tests
    always_run: true
    rerun_command: "/test pull-knative-prow-robot-test-infra-build-tests"
    trigger: "(?m)^/test (all|pull-knative-prow-robot-test-infra-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/test-infra
    spec:
      containers:
      - image: gcr.io/knative-tests-staging/test-infra/prow-tests-go112:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-prow-robot-test-infra-unit-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-prow-robot-test-infra-unit-tests
    context: pull-knative-prow-robot-test-infra-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-prow-robot-test-infra-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-prow-robot-test-infra-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/test-infra
    spec:
      containers:
      - image: gcr.io/knative-tests-staging/test-infra/prow-tests-go112:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-prow-robot-test-infra-integration-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-prow-robot-test-infra-integration-tests
    context: pull-knative-prow-robot-test-infra-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-prow-robot-test-infra-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-prow-robot-test-infra-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/test-infra
    spec:
      containers:
      - image: gcr.io/knative-tests-staging/test-infra/prow-tests-go112:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
