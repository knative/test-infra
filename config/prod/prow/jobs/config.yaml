# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# #######################################################################
# ####                                                               ####
# ####      THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.       ####
# ####   USE "./hack/generate-configs.sh" TO REGENERATE THIS FILE.   ####
# ####                                                               ####
# #######################################################################
presubmits:
  knative/serving:
  - name: pull-knative-serving-build-tests
    agent: kubernetes
    context: pull-knative-serving-build-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-build-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-unit-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-unit-tests
    context: pull-knative-serving-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-upgrade-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-upgrade-tests
    context: pull-knative-serving-upgrade-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-upgrade-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-upgrade-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-upgrade-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-istio-latest-mesh
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-istio-latest-mesh
    context: pull-knative-serving-istio-latest-mesh
    always_run: false
    rerun_command: "/test pull-knative-serving-istio-latest-mesh"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-latest-mesh),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --istio-version latest --mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-istio-latest-mesh-tls
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-istio-latest-mesh-tls
    context: pull-knative-serving-istio-latest-mesh-tls
    always_run: false
    rerun_command: "/test pull-knative-serving-istio-latest-mesh-tls"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-latest-mesh-tls),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --istio-version latest --mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-istio-latest-no-mesh
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-istio-latest-no-mesh
    context: pull-knative-serving-istio-latest-no-mesh
    always_run: false
    rerun_command: "/test pull-knative-serving-istio-latest-no-mesh"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-latest-no-mesh),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --istio-version latest --no-mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-istio-latest-no-mesh-tls
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-istio-latest-no-mesh-tls
    context: pull-knative-serving-istio-latest-no-mesh-tls
    always_run: false
    rerun_command: "/test pull-knative-serving-istio-latest-no-mesh-tls"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-latest-no-mesh-tls),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --istio-version latest --no-mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-istio-stable-mesh
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-istio-stable-mesh
    context: pull-knative-serving-istio-stable-mesh
    always_run: false
    run_if_changed: "^third_party/net-istio.yaml"
    rerun_command: "/test pull-knative-serving-istio-stable-mesh"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-stable-mesh),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --istio-version stable --mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-istio-stable-mesh-tls
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-istio-stable-mesh-tls
    context: pull-knative-serving-istio-stable-mesh-tls
    always_run: false
    run_if_changed: "^third_party/net-istio.yaml"
    rerun_command: "/test pull-knative-serving-istio-stable-mesh-tls"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-stable-mesh-tls),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --istio-version stable --mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-istio-stable-no-mesh
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-istio-stable-no-mesh
    context: pull-knative-serving-istio-stable-no-mesh
    always_run: true
    rerun_command: "/test pull-knative-serving-istio-stable-no-mesh"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-stable-no-mesh),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --istio-version stable --no-mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-istio-stable-no-mesh-tls
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-istio-stable-no-mesh-tls
    context: pull-knative-serving-istio-stable-no-mesh-tls
    always_run: true
    rerun_command: "/test pull-knative-serving-istio-stable-no-mesh-tls"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-stable-no-mesh-tls),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --istio-version stable --no-mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-gloo-0.17.1
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-gloo-0.17.1
    context: pull-knative-serving-gloo-0.17.1
    always_run: false
    run_if_changed: "^third_party/gloo-latest/*"
    rerun_command: "/test pull-knative-serving-gloo-0.17.1"
    trigger: "(?m)^/test (all|pull-knative-serving-gloo-0.17.1),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --gloo-version 0.17.1"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-gloo-0.17.1-tls
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-gloo-0.17.1-tls
    context: pull-knative-serving-gloo-0.17.1-tls
    always_run: false
    run_if_changed: "^third_party/gloo-latest/*"
    rerun_command: "/test pull-knative-serving-gloo-0.17.1-tls"
    trigger: "(?m)^/test (all|pull-knative-serving-gloo-0.17.1-tls),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --gloo-version 0.17.1"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-kourier-stable
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-kourier-stable
    context: pull-knative-serving-kourier-stable
    always_run: false
    run_if_changed: "^third_party/kourier-latest/*"
    rerun_command: "/test pull-knative-serving-kourier-stable"
    trigger: "(?m)^/test (all|pull-knative-serving-kourier-stable),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --kourier-version stable"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-kourier-stable-tls
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-kourier-stable-tls
    context: pull-knative-serving-kourier-stable-tls
    always_run: false
    run_if_changed: "^third_party/kourier-latest/*"
    rerun_command: "/test pull-knative-serving-kourier-stable-tls"
    trigger: "(?m)^/test (all|pull-knative-serving-kourier-stable-tls),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --kourier-version stable"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-contour-latest
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-contour-latest
    context: pull-knative-serving-contour-latest
    always_run: false
    run_if_changed: "^third_party/contour-latest/*"
    rerun_command: "/test pull-knative-serving-contour-latest"
    trigger: "(?m)^/test (all|pull-knative-serving-contour-latest),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --contour-version latest"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-contour-tls
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-contour-tls
    context: pull-knative-serving-contour-tls
    always_run: false
    run_if_changed: "^third_party/contour-latest/*"
    rerun_command: "/test pull-knative-serving-contour-tls"
    trigger: "(?m)^/test (all|pull-knative-serving-contour-tls),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --contour-version latest"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-ambassador-latest
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-ambassador-latest
    context: pull-knative-serving-ambassador-latest
    always_run: false
    run_if_changed: "^third_party/ambassador-latest/*"
    rerun_command: "/test pull-knative-serving-ambassador-latest"
    trigger: "(?m)^/test (all|pull-knative-serving-ambassador-latest),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --ambassador-version latest"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-ambassador-latest-tls
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-ambassador-latest-tls
    context: pull-knative-serving-ambassador-latest-tls
    always_run: false
    run_if_changed: "^third_party/ambassador-latest/*"
    rerun_command: "/test pull-knative-serving-ambassador-latest-tls"
    trigger: "(?m)^/test (all|pull-knative-serving-ambassador-latest-tls),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --ambassador-version latest"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-kong-latest
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-kong-latest
    context: pull-knative-serving-kong-latest
    always_run: false
    run_if_changed: "^third_party/kong-latest/*"
    rerun_command: "/test pull-knative-serving-kong-latest"
    trigger: "(?m)^/test (all|pull-knative-serving-kong-latest),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --kong-version latest"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-kong-latest-tls
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-kong-latest-tls
    context: pull-knative-serving-kong-latest-tls
    always_run: false
    run_if_changed: "^third_party/kong-latest/*"
    rerun_command: "/test pull-knative-serving-kong-latest-tls"
    trigger: "(?m)^/test (all|pull-knative-serving-kong-latest-tls),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --kong-version latest"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-https
    agent: kubernetes
    context: pull-knative-serving-https
    always_run: false
    rerun_command: "/test pull-knative-serving-https"
    trigger: "(?m)^/test (all|pull-knative-serving-https),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --https"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --https"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative/client:
  - name: pull-knative-client-build-tests
    agent: kubernetes
    context: pull-knative-client-build-tests
    always_run: true
    rerun_command: "/test pull-knative-client-build-tests"
    trigger: "(?m)^/test (all|pull-knative-client-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-unit-tests
    agent: kubernetes
    context: pull-knative-client-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-client-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-client-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-integration-tests
    agent: kubernetes
    context: pull-knative-client-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-client-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-client-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-go-coverage
    agent: kubernetes
    context: pull-knative-client-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-client-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-client-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/client
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-client-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-client-integration-tests-latest-release
    agent: kubernetes
    context: pull-knative-client-integration-tests-latest-release
    always_run: true
    rerun_command: "/test pull-knative-client-integration-tests-latest-release"
    trigger: "(?m)^/test (all|pull-knative-client-integration-tests-latest-release),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-integration-tests-latest-release.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative/client-contrib:
  - name: pull-knative-client-contrib-build-tests
    agent: kubernetes
    context: pull-knative-client-contrib-build-tests
    always_run: true
    rerun_command: "/test pull-knative-client-contrib-build-tests"
    trigger: "(?m)^/test (all|pull-knative-client-contrib-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client-contrib
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-contrib-unit-tests
    agent: kubernetes
    context: pull-knative-client-contrib-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-client-contrib-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-client-contrib-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client-contrib
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-contrib-integration-tests
    agent: kubernetes
    context: pull-knative-client-contrib-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-client-contrib-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-client-contrib-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client-contrib
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  knative/eventing:
  - name: pull-knative-eventing-build-tests
    agent: kubernetes
    context: pull-knative-eventing-build-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-build-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-unit-tests
    agent: kubernetes
    context: pull-knative-eventing-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-integration-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-eventing-integration-tests
    context: pull-knative-eventing-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-conformance-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-eventing-conformance-tests
    context: pull-knative-eventing-conformance-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-conformance-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-conformance-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-conformance-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-upgrade-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-eventing-upgrade-tests
    context: pull-knative-eventing-upgrade-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-upgrade-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-upgrade-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-upgrade-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-go-coverage
    agent: kubernetes
    context: pull-knative-eventing-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-eventing-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-eventing-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/eventing
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-eventing-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/eventing-contrib:
  - name: pull-knative-eventing-contrib-build-tests
    agent: kubernetes
    context: pull-knative-eventing-contrib-build-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-build-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-contrib
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-contrib-unit-tests
    agent: kubernetes
    context: pull-knative-eventing-contrib-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-contrib
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-contrib-integration-tests
    agent: kubernetes
    context: pull-knative-eventing-contrib-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-contrib
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-contrib-go-coverage
    agent: kubernetes
    context: pull-knative-eventing-contrib-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/eventing-contrib
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-eventing-contrib-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/docs:
  - name: pull-knative-docs-build-tests
    agent: kubernetes
    context: pull-knative-docs-build-tests
    always_run: true
    rerun_command: "/test pull-knative-docs-build-tests"
    trigger: "(?m)^/test (all|pull-knative-docs-build-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-docs-unit-tests
    agent: kubernetes
    context: pull-knative-docs-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-docs-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-docs-unit-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-docs-integration-tests
    agent: kubernetes
    context: pull-knative-docs-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-docs-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-docs-integration-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        securityContext:
          privileged: true
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: docker-graph
          mountPath: /docker-graph
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: docker-graph
        emptyDir: {}
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-docs-go-coverage
    agent: kubernetes
    context: pull-knative-docs-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-docs-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-docs-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-docs-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/pkg:
  - name: pull-knative-pkg-build-tests
    agent: kubernetes
    context: pull-knative-pkg-build-tests
    always_run: true
    rerun_command: "/test pull-knative-pkg-build-tests"
    trigger: "(?m)^/test (all|pull-knative-pkg-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/pkg
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-pkg-unit-tests
    agent: kubernetes
    context: pull-knative-pkg-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-pkg-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-pkg-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/pkg
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-pkg-integration-tests
    agent: kubernetes
    context: pull-knative-pkg-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-pkg-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-pkg-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/pkg
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  knative/test-infra:
  - name: pull-knative-test-infra-build-tests
    agent: kubernetes
    context: pull-knative-test-infra-build-tests
    always_run: true
    rerun_command: "/test pull-knative-test-infra-build-tests"
    trigger: "(?m)^/test (all|pull-knative-test-infra-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/test-infra
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-test-infra-unit-tests
    agent: kubernetes
    context: pull-knative-test-infra-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-test-infra-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-test-infra-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/test-infra
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-test-infra-integration-tests
    agent: kubernetes
    context: pull-knative-test-infra-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-test-infra-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-test-infra-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/test-infra
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-test-infra-go-coverage
    agent: kubernetes
    context: pull-knative-test-infra-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-test-infra-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-test-infra-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/test-infra
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-test-infra-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-test-infra-kind-tests
    agent: kubernetes
    context: pull-knative-test-infra-kind-tests
    always_run: false
    rerun_command: "/test pull-knative-test-infra-kind-tests"
    trigger: "(?m)^/test (all|pull-knative-test-infra-kind-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/test-infra
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-kind.sh"
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: docker-graph
        emptyDir: {}
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      - name: test-account
        secret:
          secretName: test-account
  knative/caching:
  - name: pull-knative-caching-build-tests
    agent: kubernetes
    context: pull-knative-caching-build-tests
    always_run: true
    rerun_command: "/test pull-knative-caching-build-tests"
    trigger: "(?m)^/test (all|pull-knative-caching-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/caching
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-caching-unit-tests
    agent: kubernetes
    context: pull-knative-caching-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-caching-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-caching-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/caching
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-caching-integration-tests
    agent: kubernetes
    context: pull-knative-caching-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-caching-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-caching-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/caching
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  knative-sandbox/sample-controller:
  - name: pull-knative-sandbox-sample-controller-build-tests
    agent: kubernetes
    context: pull-knative-sandbox-sample-controller-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-sample-controller-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-sample-controller-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/sample-controller
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-sample-controller-unit-tests
    agent: kubernetes
    context: pull-knative-sandbox-sample-controller-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-sample-controller-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-sample-controller-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/sample-controller
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  knative-sandbox/sample-source:
  - name: pull-knative-sandbox-sample-source-build-tests
    agent: kubernetes
    context: pull-knative-sandbox-sample-source-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-sample-source-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-sample-source-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/sample-source
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-sample-source-unit-tests
    agent: kubernetes
    context: pull-knative-sandbox-sample-source-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-sample-source-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-sample-source-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/sample-source
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  google/knative-gcp:
  - name: pull-google-knative-gcp-build-tests
    agent: kubernetes
    context: pull-google-knative-gcp-build-tests
    always_run: true
    rerun_command: "/test pull-google-knative-gcp-build-tests"
    trigger: "(?m)^/test (all|pull-google-knative-gcp-build-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-google-knative-gcp-unit-tests
    agent: kubernetes
    context: pull-google-knative-gcp-unit-tests
    always_run: true
    rerun_command: "/test pull-google-knative-gcp-unit-tests"
    trigger: "(?m)^/test (all|pull-google-knative-gcp-unit-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-google-knative-gcp-integration-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-google-knative-gcp-integration-tests
    context: pull-google-knative-gcp-integration-tests
    always_run: true
    rerun_command: "/test pull-google-knative-gcp-integration-tests"
    trigger: "(?m)^/test (all|pull-google-knative-gcp-integration-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-google-knative-gcp-wi-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-google-knative-gcp-wi-tests
    context: pull-google-knative-gcp-wi-tests
    always_run: true
    rerun_command: "/test pull-google-knative-gcp-wi-tests"
    trigger: "(?m)^/test (all|pull-google-knative-gcp-wi-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-wi-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-google-knative-gcp-go-coverage
    agent: kubernetes
    context: pull-google-knative-gcp-go-coverage
    always_run: true
    rerun_command: "/test pull-google-knative-gcp-go-coverage"
    trigger: "(?m)^/test (all|pull-google-knative-gcp-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-google-knative-gcp-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/networking:
  - name: pull-knative-networking-build-tests
    agent: kubernetes
    context: pull-knative-networking-build-tests
    always_run: true
    rerun_command: "/test pull-knative-networking-build-tests"
    trigger: "(?m)^/test (all|pull-knative-networking-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/networking
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-networking-unit-tests
    agent: kubernetes
    context: pull-knative-networking-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-networking-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-networking-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/networking
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-networking-integration-tests
    agent: kubernetes
    context: pull-knative-networking-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-networking-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-networking-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/networking
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  knative-sandbox/net-certmanager:
  - name: pull-knative-sandbox-net-certmanager-build-tests
    agent: kubernetes
    context: pull-knative-sandbox-net-certmanager-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-certmanager-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-certmanager-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-certmanager
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-net-certmanager-unit-tests
    agent: kubernetes
    context: pull-knative-sandbox-net-certmanager-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-certmanager-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-certmanager-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-certmanager
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-net-certmanager-integration-tests
    agent: kubernetes
    context: pull-knative-sandbox-net-certmanager-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-certmanager-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-certmanager-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-certmanager
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-net-certmanager-go-coverage
    agent: kubernetes
    context: pull-knative-sandbox-net-certmanager-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-certmanager-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-certmanager-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/net-certmanager
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-sandbox-net-certmanager-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative-sandbox/net-contour:
  - name: pull-knative-sandbox-net-contour-build-tests
    agent: kubernetes
    context: pull-knative-sandbox-net-contour-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-contour-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-contour-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-contour
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-net-contour-unit-tests
    agent: kubernetes
    context: pull-knative-sandbox-net-contour-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-contour-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-contour-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-contour
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-net-contour-integration-tests
    agent: kubernetes
    context: pull-knative-sandbox-net-contour-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-contour-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-contour-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-contour
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  knative-sandbox/net-http01:
  - name: pull-knative-sandbox-net-http01-build-tests
    agent: kubernetes
    context: pull-knative-sandbox-net-http01-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-http01-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-http01-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-http01
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-net-http01-unit-tests
    agent: kubernetes
    context: pull-knative-sandbox-net-http01-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-http01-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-http01-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-http01
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-net-http01-integration-tests
    agent: kubernetes
    context: pull-knative-sandbox-net-http01-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-http01-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-http01-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-http01
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  knative-sandbox/net-istio:
  - name: pull-knative-sandbox-net-istio-build-tests
    agent: kubernetes
    context: pull-knative-sandbox-net-istio-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-istio-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-istio-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-istio
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-net-istio-unit-tests
    agent: kubernetes
    context: pull-knative-sandbox-net-istio-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-istio-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-istio-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-istio
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-net-istio-integration-tests
    agent: kubernetes
    context: pull-knative-sandbox-net-istio-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-istio-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-istio-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-istio
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-net-istio-go-coverage
    agent: kubernetes
    context: pull-knative-sandbox-net-istio-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-istio-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-istio-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/net-istio
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-sandbox-net-istio-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-sandbox-net-istio-latest
    agent: kubernetes
    context: pull-knative-sandbox-net-istio-latest
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-istio-latest"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-istio-latest),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/net-istio
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --istio-version latest"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative-sandbox/net-kourier:
  - name: pull-knative-sandbox-net-kourier-build-tests
    agent: kubernetes
    context: pull-knative-sandbox-net-kourier-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-kourier-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-kourier-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-kourier
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-net-kourier-unit-tests
    agent: kubernetes
    context: pull-knative-sandbox-net-kourier-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-kourier-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-kourier-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-kourier
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-net-kourier-integration-tests
    agent: kubernetes
    context: pull-knative-sandbox-net-kourier-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-kourier-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-kourier-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-kourier
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-net-kourier-go-coverage
    agent: kubernetes
    context: pull-knative-sandbox-net-kourier-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-sandbox-net-kourier-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-sandbox-net-kourier-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/net-kourier
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-sandbox-net-kourier-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/operator:
  - name: pull-knative-operator-build-tests
    agent: kubernetes
    context: pull-knative-operator-build-tests
    always_run: true
    rerun_command: "/test pull-knative-operator-build-tests"
    trigger: "(?m)^/test (all|pull-knative-operator-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/operator
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-operator-unit-tests
    agent: kubernetes
    context: pull-knative-operator-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-operator-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-operator-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/operator
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-operator-integration-tests
    agent: kubernetes
    context: pull-knative-operator-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-operator-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-operator-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/operator
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-operator-go-coverage
    agent: kubernetes
    context: pull-knative-operator-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-operator-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-operator-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/operator
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-operator-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-operator-upgrade-tests
    agent: kubernetes
    context: pull-knative-operator-upgrade-tests
    always_run: true
    rerun_command: "/test pull-knative-operator-upgrade-tests"
    trigger: "(?m)^/test (all|pull-knative-operator-upgrade-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/operator
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-upgrade-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative-sandbox/async-component:
  - name: pull-knative-sandbox-async-component-build-tests
    agent: kubernetes
    context: pull-knative-sandbox-async-component-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-async-component-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-async-component-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/async-component
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-async-component-unit-tests
    agent: kubernetes
    context: pull-knative-sandbox-async-component-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-async-component-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-async-component-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/async-component
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-async-component-integration-tests
    agent: kubernetes
    context: pull-knative-sandbox-async-component-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-async-component-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-async-component-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/async-component
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-async-component-go-coverage
    agent: kubernetes
    context: pull-knative-sandbox-async-component-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-sandbox-async-component-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-sandbox-async-component-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/async-component
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-sandbox-async-component-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative-sandbox/discovery:
  - name: pull-knative-sandbox-discovery-build-tests
    agent: kubernetes
    context: pull-knative-sandbox-discovery-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-discovery-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-discovery-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/discovery
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-discovery-unit-tests
    agent: kubernetes
    context: pull-knative-sandbox-discovery-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-discovery-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-discovery-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/discovery
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-discovery-integration-tests
    agent: kubernetes
    context: pull-knative-sandbox-discovery-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-discovery-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-discovery-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/discovery
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  knative-sandbox/eventing-kafka:
  - name: pull-knative-sandbox-eventing-kafka-build-tests
    agent: kubernetes
    context: pull-knative-sandbox-eventing-kafka-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-eventing-kafka-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-eventing-kafka-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-kafka
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        securityContext:
          privileged: true
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: docker-graph
          mountPath: /docker-graph
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: docker-graph
        emptyDir: {}
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-eventing-kafka-unit-tests
    agent: kubernetes
    context: pull-knative-sandbox-eventing-kafka-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-eventing-kafka-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-eventing-kafka-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-kafka
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        securityContext:
          privileged: true
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: docker-graph
          mountPath: /docker-graph
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: docker-graph
        emptyDir: {}
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-eventing-kafka-integration-tests
    agent: kubernetes
    context: pull-knative-sandbox-eventing-kafka-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-eventing-kafka-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-eventing-kafka-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-kafka
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        securityContext:
          privileged: true
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: docker-graph
          mountPath: /docker-graph
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: docker-graph
        emptyDir: {}
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-eventing-kafka-go-coverage
    agent: kubernetes
    context: pull-knative-sandbox-eventing-kafka-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-sandbox-eventing-kafka-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-sandbox-eventing-kafka-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/eventing-kafka
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-sandbox-eventing-kafka-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        - name: docker-graph
          mountPath: /docker-graph
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
      - name: docker-graph
        emptyDir: {}
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
  knative-sandbox/eventing-kafka-broker:
  - name: pull-knative-sandbox-eventing-kafka-broker-build-tests
    agent: kubernetes
    context: pull-knative-sandbox-eventing-kafka-broker-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-eventing-kafka-broker-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-eventing-kafka-broker-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-kafka-broker
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        securityContext:
          privileged: true
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: docker-graph
          mountPath: /docker-graph
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: docker-graph
        emptyDir: {}
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-eventing-kafka-broker-unit-tests
    agent: kubernetes
    context: pull-knative-sandbox-eventing-kafka-broker-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-eventing-kafka-broker-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-eventing-kafka-broker-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-kafka-broker
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        securityContext:
          privileged: true
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: docker-graph
          mountPath: /docker-graph
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: docker-graph
        emptyDir: {}
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-eventing-kafka-broker-integration-tests
    agent: kubernetes
    context: pull-knative-sandbox-eventing-kafka-broker-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-eventing-kafka-broker-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-eventing-kafka-broker-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-kafka-broker
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        securityContext:
          privileged: true
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: docker-graph
          mountPath: /docker-graph
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: docker-graph
        emptyDir: {}
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-eventing-kafka-broker-go-coverage
    agent: kubernetes
    context: pull-knative-sandbox-eventing-kafka-broker-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-sandbox-eventing-kafka-broker-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-sandbox-eventing-kafka-broker-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/eventing-kafka-broker
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-sandbox-eventing-kafka-broker-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        - name: docker-graph
          mountPath: /docker-graph
        - name: modules
          mountPath: /lib/modules
        - name: cgroup
          mountPath: /sys/fs/cgroup
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
      - name: docker-graph
        emptyDir: {}
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
periodics:
- cron: "0 */2 * * *"
  name: ci-knative-serving-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "4 8,11,22 * * *"
  name: ci-knative-serving-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "43 8 * * *"
  name: ci-knative-serving-0.15-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "11 8,11 * * *"
  name: ci-knative-serving-0.15-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "52 8 * * *"
  name: ci-knative-serving-0.16-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "24 8,11 * * *"
  name: ci-knative-serving-0.16-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "21 8 * * *"
  name: ci-knative-serving-0.17-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "9 8,11 * * *"
  name: ci-knative-serving-0.17-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "34 8 * * *"
  name: ci-knative-serving-0.18-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: release-0.18
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.18
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "22 8,11 * * *"
  name: ci-knative-serving-0.18-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: release-0.18
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.18
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "5 */2 * * *"
  name: ci-knative-serving-istio-latest-mesh
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --istio-version latest --mesh"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --istio-version latest --mesh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "31 */2 * * *"
  name: ci-knative-serving-istio-latest-no-mesh
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --istio-version latest --no-mesh"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --istio-version latest --no-mesh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "57 */2 * * *"
  name: ci-knative-serving-istio-stable-mesh
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --istio-version stable --mesh"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --istio-version stable --mesh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "47 */2 * * *"
  name: ci-knative-serving-istio-stable-no-mesh
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --istio-version stable --no-mesh"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --istio-version stable --no-mesh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "12 */2 * * *"
  name: ci-knative-serving-gloo-0.17.1
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --gloo-version 0.17.1"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --gloo-version 0.17.1"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "24 */2 * * *"
  name: ci-knative-serving-kourier-stable
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --kourier-version stable"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --kourier-version stable"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "43 */2 * * *"
  name: ci-knative-serving-contour-latest
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --contour-version latest"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --contour-version latest"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "44 */2 * * *"
  name: ci-knative-serving-ambassador-latest
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --ambassador-version latest"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --ambassador-version latest"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "20 */2 * * *"
  name: ci-knative-serving-kong-latest
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --kong-version latest"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --kong-version latest"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "42 */2 * * *"
  name: ci-knative-serving-https
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --https"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --https"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "20 9 * * *"
  name: ci-knative-serving-nightly-release
  agent: kubernetes
  decorate: true
  reporter_config:
    slack:
      channel: serving-api
      report_template: "The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"
      job_states_to_report:
      - "failure"
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "23 9 * * 2"
  name: ci-knative-serving-0.15-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/serving"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.15"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "42 9 * * 2"
  name: ci-knative-serving-0.16-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/serving"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.16"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "13 9 * * 2"
  name: ci-knative-serving-0.17-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/serving"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.17"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "12 9 * * 2"
  name: ci-knative-serving-0.18-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: release-0.18
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/serving"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.18"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.18
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "20 */2 * * *"
  name: ci-knative-serving-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/serving"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "12 9 * * *"
  name: ci-knative-serving-webhook-apicoverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/apicoverage.sh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: SYSTEM_NAMESPACE
        value: knative-serving
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "53 * * * *"
  name: ci-knative-client-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "13 8,11,22 * * *"
  name: ci-knative-client-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "49 8 * * *"
  name: ci-knative-client-0.14-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: release-0.14
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "5 8,11 * * *"
  name: ci-knative-client-0.14-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: release-0.14
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "52 8 * * *"
  name: ci-knative-client-0.15-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "8 8,11 * * *"
  name: ci-knative-client-0.15-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "3 8 * * *"
  name: ci-knative-client-0.16-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "11 8,11 * * *"
  name: ci-knative-client-0.16-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "14 8 * * *"
  name: ci-knative-client-0.17-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "2 8,11 * * *"
  name: ci-knative-client-0.17-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "59 9 * * *"
  name: ci-knative-client-nightly-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "0 13 * * *"
  name: ci-knative-client-tekton
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/tekton-tests.sh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "5 9 * * 2"
  name: ci-knative-client-0.14-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: release-0.14
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/client"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.14"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "26 9 * * 2"
  name: ci-knative-client-0.15-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/client"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.15"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "47 9 * * 2"
  name: ci-knative-client-0.16-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/client"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.16"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "16 9 * * 2"
  name: ci-knative-client-0.17-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/client"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.17"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "29 */2 * * *"
  name: ci-knative-client-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/client"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-client-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-client-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "35 7 * * *"
  name: ci-knative-client-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-client-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    path_alias: knative.dev/client
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "49 * * * *"
  name: ci-knative-client-contrib-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client-contrib
    path_alias: knative.dev/client-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "21 8,11,22 * * *"
  name: ci-knative-client-contrib-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client-contrib
    path_alias: knative.dev/client-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "45 * * * *"
  name: ci-knative-docs-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: docs
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "33 8,11,22 * * *"
  name: ci-knative-docs-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: docs
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 1 * * *"
  name: ci-knative-docs-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-docs-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: docs
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "11 7 * * *"
  name: ci-knative-docs-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-docs-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: docs
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "52 */2 * * *"
  name: ci-knative-eventing-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "8 8,11,22 * * *"
  name: ci-knative-eventing-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "39 8 * * *"
  name: ci-knative-eventing-0.15-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "15 8,11 * * *"
  name: ci-knative-eventing-0.15-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "48 8 * * *"
  name: ci-knative-eventing-0.16-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "56 8,11 * * *"
  name: ci-knative-eventing-0.16-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "37 8 * * *"
  name: ci-knative-eventing-0.17-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "21 8,11 * * *"
  name: ci-knative-eventing-0.17-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "54 8 * * *"
  name: ci-knative-eventing-0.18-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: release-0.18
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.18
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "22 8,11 * * *"
  name: ci-knative-eventing-0.18-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: release-0.18
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.18
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "12 9 * * *"
  name: ci-knative-eventing-nightly-release
  agent: kubernetes
  decorate: true
  reporter_config:
    slack:
      channel: eventing
      report_template: "The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"
      job_states_to_report:
      - "failure"
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "23 9 * * 2"
  name: ci-knative-eventing-0.15-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.15"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "50 9 * * 2"
  name: ci-knative-eventing-0.16-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.16"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "29 9 * * 2"
  name: ci-knative-eventing-0.17-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.17"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "4 9 * * 2"
  name: ci-knative-eventing-0.18-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: release-0.18
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.18"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.18
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "52 */2 * * *"
  name: ci-knative-eventing-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-eventing-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-eventing-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "56 7 * * *"
  name: ci-knative-eventing-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-eventing-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "36 * * * *"
  name: ci-knative-eventing-contrib-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "52 8,11,22 * * *"
  name: ci-knative-eventing-contrib-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "19 8 * * *"
  name: ci-knative-eventing-contrib-0.15-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "11 8,11 * * *"
  name: ci-knative-eventing-contrib-0.15-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "28 8 * * *"
  name: ci-knative-eventing-contrib-0.16-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "8 8,11 * * *"
  name: ci-knative-eventing-contrib-0.16-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "17 8 * * *"
  name: ci-knative-eventing-contrib-0.17-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "33 8,11 * * *"
  name: ci-knative-eventing-contrib-0.17-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "34 8 * * *"
  name: ci-knative-eventing-contrib-0.18-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: release-0.18
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.18
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "18 8,11 * * *"
  name: ci-knative-eventing-contrib-0.18-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: release-0.18
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.18
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "40 9 * * *"
  name: ci-knative-eventing-contrib-nightly-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "11 9 * * 2"
  name: ci-knative-eventing-contrib-0.15-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-contrib"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.15"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "34 9 * * 2"
  name: ci-knative-eventing-contrib-0.16-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-contrib"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.16"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "9 9 * * 2"
  name: ci-knative-eventing-contrib-0.17-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-contrib"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.17"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "36 9 * * 2"
  name: ci-knative-eventing-contrib-0.18-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: release-0.18
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-contrib"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.18"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.18
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "32 */2 * * *"
  name: ci-knative-eventing-contrib-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-contrib"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-eventing-contrib-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "56 7 * * *"
  name: ci-knative-eventing-contrib-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    path_alias: knative.dev/eventing-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "21 * * * *"
  name: ci-knative-sandbox-eventing-awssqs-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-awssqs
    path_alias: knative.dev/eventing-awssqs
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "25 8,11,22 * * *"
  name: ci-knative-sandbox-eventing-awssqs-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-awssqs
    path_alias: knative.dev/eventing-awssqs
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "51 9 * * *"
  name: ci-knative-sandbox-eventing-awssqs-nightly-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-awssqs
    path_alias: knative.dev/eventing-awssqs
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "21 */2 * * *"
  name: ci-knative-sandbox-eventing-awssqs-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-awssqs
    path_alias: knative.dev/eventing-awssqs
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-awssqs"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "27 * * * *"
  name: ci-knative-sandbox-eventing-ceph-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-ceph
    path_alias: knative.dev/eventing-ceph
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "55 8,11,22 * * *"
  name: ci-knative-sandbox-eventing-ceph-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-ceph
    path_alias: knative.dev/eventing-ceph
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "5 9 * * *"
  name: ci-knative-sandbox-eventing-ceph-nightly-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-ceph
    path_alias: knative.dev/eventing-ceph
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "47 */2 * * *"
  name: ci-knative-sandbox-eventing-ceph-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-ceph
    path_alias: knative.dev/eventing-ceph
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-ceph"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "37 * * * *"
  name: ci-knative-sandbox-eventing-couchdb-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-couchdb
    path_alias: knative.dev/eventing-couchdb
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "29 8,11,22 * * *"
  name: ci-knative-sandbox-eventing-couchdb-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-couchdb
    path_alias: knative.dev/eventing-couchdb
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "11 9 * * *"
  name: ci-knative-sandbox-eventing-couchdb-nightly-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-couchdb
    path_alias: knative.dev/eventing-couchdb
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "33 */2 * * *"
  name: ci-knative-sandbox-eventing-couchdb-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-couchdb
    path_alias: knative.dev/eventing-couchdb
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-couchdb"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "46 * * * *"
  name: ci-knative-sandbox-eventing-github-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-github
    path_alias: knative.dev/eventing-github
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "30 8,11,22 * * *"
  name: ci-knative-sandbox-eventing-github-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-github
    path_alias: knative.dev/eventing-github
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "22 9 * * *"
  name: ci-knative-sandbox-eventing-github-nightly-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-github
    path_alias: knative.dev/eventing-github
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "42 */2 * * *"
  name: ci-knative-sandbox-eventing-github-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-github
    path_alias: knative.dev/eventing-github
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-github"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "38 * * * *"
  name: ci-knative-sandbox-eventing-gitlab-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-gitlab
    path_alias: knative.dev/eventing-gitlab
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "34 8,11,22 * * *"
  name: ci-knative-sandbox-eventing-gitlab-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-gitlab
    path_alias: knative.dev/eventing-gitlab
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "6 9 * * *"
  name: ci-knative-sandbox-eventing-gitlab-nightly-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-gitlab
    path_alias: knative.dev/eventing-gitlab
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "6 */2 * * *"
  name: ci-knative-sandbox-eventing-gitlab-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-gitlab
    path_alias: knative.dev/eventing-gitlab
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-gitlab"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "7 * * * *"
  name: ci-knative-sandbox-eventing-prometheus-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-prometheus
    path_alias: knative.dev/eventing-prometheus
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "11 8,11,22 * * *"
  name: ci-knative-sandbox-eventing-prometheus-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-prometheus
    path_alias: knative.dev/eventing-prometheus
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "37 9 * * *"
  name: ci-knative-sandbox-eventing-prometheus-nightly-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-prometheus
    path_alias: knative.dev/eventing-prometheus
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "11 */2 * * *"
  name: ci-knative-sandbox-eventing-prometheus-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-prometheus
    path_alias: knative.dev/eventing-prometheus
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-prometheus"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "2 * * * *"
  name: ci-knative-pkg-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: pkg
    path_alias: knative.dev/pkg
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "18 8,11,22 * * *"
  name: ci-knative-pkg-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: pkg
    path_alias: knative.dev/pkg
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "47 * * * *"
  name: ci-knative-caching-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: caching
    path_alias: knative.dev/caching
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "43 8,11,22 * * *"
  name: ci-knative-caching-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: caching
    path_alias: knative.dev/caching
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "5 * * * *"
  name: ci-knative-sandbox-sample-controller-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: sample-controller
    path_alias: knative.dev/sample-controller
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "21 8,11,22 * * *"
  name: ci-knative-sandbox-sample-controller-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: sample-controller
    path_alias: knative.dev/sample-controller
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "50 * * * *"
  name: ci-knative-sandbox-sample-source-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: sample-source
    path_alias: knative.dev/sample-source
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "6 8,11,22 * * *"
  name: ci-knative-sandbox-sample-source-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: sample-source
    path_alias: knative.dev/sample-source
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "49 * * * *"
  name: ci-knative-test-infra-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    path_alias: knative.dev/test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "57 8,11,22 * * *"
  name: ci-knative-test-infra-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    path_alias: knative.dev/test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 1 * * *"
  name: ci-knative-test-infra-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-test-infra-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    path_alias: knative.dev/test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "43 7 * * *"
  name: ci-knative-test-infra-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-test-infra-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    path_alias: knative.dev/test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "18 * * * *"
  name: ci-google-knative-gcp-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "14 8,11,22 * * *"
  name: ci-google-knative-gcp-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "41 8 * * *"
  name: ci-google-knative-gcp-0.15-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "33 8,11 * * *"
  name: ci-google-knative-gcp-0.15-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "50 8 * * *"
  name: ci-google-knative-gcp-0.16-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "30 8,11 * * *"
  name: ci-google-knative-gcp-0.16-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "39 8 * * *"
  name: ci-google-knative-gcp-0.17-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "39 8,11 * * *"
  name: ci-google-knative-gcp-0.17-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "24 8 * * *"
  name: ci-google-knative-gcp-0.18-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.18
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.18
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 8,11 * * *"
  name: ci-google-knative-gcp-0.18-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.18
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.18
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "34 9 * * *"
  name: ci-google-knative-gcp-nightly-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "41 9 * * 2"
  name: ci-google-knative-gcp-0.15-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/knative-gcp"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.15"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: google
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "52 9 * * 2"
  name: ci-google-knative-gcp-0.16-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/knative-gcp"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.16"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: google
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "15 9 * * 2"
  name: ci-google-knative-gcp-0.17-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/knative-gcp"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.17"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: google
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "26 9 * * 2"
  name: ci-google-knative-gcp-0.18-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.18
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/knative-gcp"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.18"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: google
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.18
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "42 */2 * * *"
  name: ci-google-knative-gcp-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/knative-gcp"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: google
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-google-knative-gcp-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-google-knative-gcp-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "18 7 * * *"
  name: ci-google-knative-gcp-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-google-knative-gcp-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "59 * * * *"
  name: ci-knative-sandbox-net-certmanager-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-certmanager
    path_alias: knative.dev/net-certmanager
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "31 8,11,22 * * *"
  name: ci-knative-sandbox-net-certmanager-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-certmanager
    path_alias: knative.dev/net-certmanager
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "45 9 * * *"
  name: ci-knative-sandbox-net-certmanager-nightly-release
  agent: kubernetes
  decorate: true
  reporter_config:
    slack:
      channel: net-certmanager
      report_template: "The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"
      job_states_to_report:
      - "failure"
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-certmanager
    path_alias: knative.dev/net-certmanager
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "9 9 * * 2"
  name: ci-knative-sandbox-net-certmanager-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-certmanager
    path_alias: knative.dev/net-certmanager
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/net-certmanager"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "27 */2 * * *"
  name: ci-knative-sandbox-net-certmanager-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-certmanager
    path_alias: knative.dev/net-certmanager
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/net-certmanager"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-sandbox-net-certmanager-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-sandbox-net-certmanager-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-certmanager
    path_alias: knative.dev/net-certmanager
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "49 7 * * *"
  name: ci-knative-sandbox-net-certmanager-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-sandbox-net-certmanager-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-certmanager
    path_alias: knative.dev/net-certmanager
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "38 * * * *"
  name: ci-knative-sandbox-net-contour-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-contour
    path_alias: knative.dev/net-contour
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "38 8,11,22 * * *"
  name: ci-knative-sandbox-net-contour-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-contour
    path_alias: knative.dev/net-contour
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "42 9 * * *"
  name: ci-knative-sandbox-net-contour-nightly-release
  agent: kubernetes
  decorate: true
  reporter_config:
    slack:
      channel: net-contour
      report_template: "The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"
      job_states_to_report:
      - "failure"
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-contour
    path_alias: knative.dev/net-contour
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "58 9 * * 2"
  name: ci-knative-sandbox-net-contour-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-contour
    path_alias: knative.dev/net-contour
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/net-contour"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "42 */2 * * *"
  name: ci-knative-sandbox-net-contour-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-contour
    path_alias: knative.dev/net-contour
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/net-contour"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "9 * * * *"
  name: ci-knative-sandbox-net-http01-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-http01
    path_alias: knative.dev/net-http01
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "45 8,11,22 * * *"
  name: ci-knative-sandbox-net-http01-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-http01
    path_alias: knative.dev/net-http01
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "59 9 * * *"
  name: ci-knative-sandbox-net-http01-nightly-release
  agent: kubernetes
  decorate: true
  reporter_config:
    slack:
      channel: net-http01
      report_template: "The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"
      job_states_to_report:
      - "failure"
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-http01
    path_alias: knative.dev/net-http01
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "7 9 * * 2"
  name: ci-knative-sandbox-net-http01-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-http01
    path_alias: knative.dev/net-http01
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/net-http01"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "5 */2 * * *"
  name: ci-knative-sandbox-net-http01-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-http01
    path_alias: knative.dev/net-http01
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/net-http01"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "8 * * * *"
  name: ci-knative-sandbox-net-istio-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-istio
    path_alias: knative.dev/net-istio
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "48 8,11,22 * * *"
  name: ci-knative-sandbox-net-istio-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-istio
    path_alias: knative.dev/net-istio
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "8 9 * * *"
  name: ci-knative-sandbox-net-istio-nightly-release
  agent: kubernetes
  decorate: true
  reporter_config:
    slack:
      channel: net-istio
      report_template: "The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"
      job_states_to_report:
      - "failure"
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-istio
    path_alias: knative.dev/net-istio
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "34 */2 * * *"
  name: ci-knative-sandbox-net-istio-latest
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-istio
    path_alias: knative.dev/net-istio
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --istio-version latest"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "59 9 * * 2"
  name: ci-knative-sandbox-net-istio-0.15-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-istio
    path_alias: knative.dev/net-istio
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/net-istio"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.15"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "10 9 * * 2"
  name: ci-knative-sandbox-net-istio-0.16-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-istio
    path_alias: knative.dev/net-istio
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/net-istio"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.16"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "25 9 * * 2"
  name: ci-knative-sandbox-net-istio-0.17-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-istio
    path_alias: knative.dev/net-istio
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/net-istio"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.17"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "40 9 * * 2"
  name: ci-knative-sandbox-net-istio-0.18-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-istio
    path_alias: knative.dev/net-istio
    base_ref: release-0.18
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/net-istio"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.18"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.18
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "12 */2 * * *"
  name: ci-knative-sandbox-net-istio-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-istio
    path_alias: knative.dev/net-istio
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/net-istio"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-sandbox-net-istio-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-sandbox-net-istio-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-istio
    path_alias: knative.dev/net-istio
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "12 7 * * *"
  name: ci-knative-sandbox-net-istio-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-sandbox-net-istio-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-istio
    path_alias: knative.dev/net-istio
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "17 * * * *"
  name: ci-knative-sandbox-net-kourier-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-kourier
    path_alias: knative.dev/net-kourier
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "17 8,11,22 * * *"
  name: ci-knative-sandbox-net-kourier-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-kourier
    path_alias: knative.dev/net-kourier
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "3 9 * * *"
  name: ci-knative-sandbox-net-kourier-nightly-release
  agent: kubernetes
  decorate: true
  reporter_config:
    slack:
      channel: net-kourier
      report_template: "The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"
      job_states_to_report:
      - "failure"
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-kourier
    path_alias: knative.dev/net-kourier
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "27 9 * * 2"
  name: ci-knative-sandbox-net-kourier-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-kourier
    path_alias: knative.dev/net-kourier
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/net-kourier"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "53 */2 * * *"
  name: ci-knative-sandbox-net-kourier-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-kourier
    path_alias: knative.dev/net-kourier
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/net-kourier"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-sandbox-net-kourier-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-sandbox-net-kourier-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-kourier
    path_alias: knative.dev/net-kourier
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "3 7 * * *"
  name: ci-knative-sandbox-net-kourier-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-sandbox-net-kourier-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: net-kourier
    path_alias: knative.dev/net-kourier
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "0 * * * *"
  name: ci-knative-operator-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    path_alias: knative.dev/operator
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "40 8,11,22 * * *"
  name: ci-knative-operator-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    path_alias: knative.dev/operator
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "15 8 * * *"
  name: ci-knative-operator-0.15-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    path_alias: knative.dev/operator
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "35 8,11 * * *"
  name: ci-knative-operator-0.15-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    path_alias: knative.dev/operator
    base_ref: release-0.15
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.15
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "36 8 * * *"
  name: ci-knative-operator-0.16-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    path_alias: knative.dev/operator
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "12 8,11 * * *"
  name: ci-knative-operator-0.16-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    path_alias: knative.dev/operator
    base_ref: release-0.16
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.16
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "45 8 * * *"
  name: ci-knative-operator-0.17-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    path_alias: knative.dev/operator
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "9 8,11 * * *"
  name: ci-knative-operator-0.17-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    path_alias: knative.dev/operator
    base_ref: release-0.17
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.17
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "48 9 * * *"
  name: ci-knative-operator-nightly-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    path_alias: knative.dev/operator
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "4 9 * * 2"
  name: ci-knative-operator-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    path_alias: knative.dev/operator
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "32 */2 * * *"
  name: ci-knative-operator-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    path_alias: knative.dev/operator
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-operator-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-operator-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    path_alias: knative.dev/operator
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "40 7 * * *"
  name: ci-knative-operator-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-operator-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    path_alias: knative.dev/operator
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "36 * * * *"
  name: ci-knative-sandbox-async-component-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: async-component
    path_alias: knative.dev/async-component
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "16 8,11,22 * * *"
  name: ci-knative-sandbox-async-component-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: async-component
    path_alias: knative.dev/async-component
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 9 * * *"
  name: ci-knative-sandbox-async-component-nightly-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: async-component
    path_alias: knative.dev/async-component
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "8 9 * * 2"
  name: ci-knative-sandbox-async-component-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: async-component
    path_alias: knative.dev/async-component
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/async-component"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "24 */2 * * *"
  name: ci-knative-sandbox-async-component-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: async-component
    path_alias: knative.dev/async-component
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/async-component"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-sandbox-async-component-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-sandbox-async-component-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: async-component
    path_alias: knative.dev/async-component
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "36 7 * * *"
  name: ci-knative-sandbox-async-component-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-sandbox-async-component-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: async-component
    path_alias: knative.dev/async-component
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "32 * * * *"
  name: ci-knative-sandbox-discovery-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: discovery
    path_alias: knative.dev/discovery
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "8 8,11,22 * * *"
  name: ci-knative-sandbox-discovery-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: discovery
    path_alias: knative.dev/discovery
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "24 9 * * *"
  name: ci-knative-sandbox-discovery-nightly-release
  agent: kubernetes
  decorate: true
  reporter_config:
    slack:
      channel: eventing-sources
      report_template: "The nightly release job for discovery failed, check the log: <{{.Status.URL}}|View logs>"
      job_states_to_report:
      - "failure"
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: discovery
    path_alias: knative.dev/discovery
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "32 9 * * 2"
  name: ci-knative-sandbox-discovery-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: discovery
    path_alias: knative.dev/discovery
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/discovery"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "28 */2 * * *"
  name: ci-knative-sandbox-discovery-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: discovery
    path_alias: knative.dev/discovery
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/discovery"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "23 * * * *"
  name: ci-knative-sandbox-eventing-camel-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-camel
    path_alias: knative.dev/eventing-camel
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "27 8,11,22 * * *"
  name: ci-knative-sandbox-eventing-camel-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-camel
    path_alias: knative.dev/eventing-camel
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "17 9 * * *"
  name: ci-knative-sandbox-eventing-camel-nightly-release
  agent: kubernetes
  decorate: true
  reporter_config:
    slack:
      channel: eventing-sources
      report_template: "The nightly release job for camel failed, check the log: <{{.Status.URL}}|View logs>"
      job_states_to_report:
      - "failure"
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-camel
    path_alias: knative.dev/eventing-camel
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "25 9 * * 2"
  name: ci-knative-sandbox-eventing-camel-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-camel
    path_alias: knative.dev/eventing-camel
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-camel"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "55 */2 * * *"
  name: ci-knative-sandbox-eventing-camel-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-camel
    path_alias: knative.dev/eventing-camel
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-camel"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "31 * * * *"
  name: ci-knative-sandbox-eventing-kafka-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka
    path_alias: knative.dev/eventing-kafka
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "15 8,11,22 * * *"
  name: ci-knative-sandbox-eventing-kafka-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka
    path_alias: knative.dev/eventing-kafka
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "37 9 * * *"
  name: ci-knative-sandbox-eventing-kafka-nightly-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka
    path_alias: knative.dev/eventing-kafka
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "29 9 * * 2"
  name: ci-knative-sandbox-eventing-kafka-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka
    path_alias: knative.dev/eventing-kafka
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-kafka"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      securityContext:
        privileged: true
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: release-account
      secret:
        secretName: release-account
- cron: "31 */2 * * *"
  name: ci-knative-sandbox-eventing-kafka-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka
    path_alias: knative.dev/eventing-kafka
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-kafka"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      securityContext:
        privileged: true
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-sandbox-eventing-kafka-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-sandbox-eventing-kafka-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka
    path_alias: knative.dev/eventing-kafka
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "25 7 * * *"
  name: ci-knative-sandbox-eventing-kafka-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-sandbox-eventing-kafka-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka
    path_alias: knative.dev/eventing-kafka
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "59 * * * *"
  name: ci-knative-sandbox-eventing-kafka-broker-continuous
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka-broker
    path_alias: knative.dev/eventing-kafka-broker
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "19 8,11,22 * * *"
  name: ci-knative-sandbox-eventing-kafka-broker-continuous-beta-prow-tests
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka-broker
    path_alias: knative.dev/eventing-kafka-broker
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: test-account
      secret:
        secretName: test-account
- cron: "49 9 * * *"
  name: ci-knative-sandbox-eventing-kafka-broker-nightly-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka-broker
    path_alias: knative.dev/eventing-kafka-broker
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "45 9 * * 2"
  name: ci-knative-sandbox-eventing-kafka-broker-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka-broker
    path_alias: knative.dev/eventing-kafka-broker
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-kafka-broker"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      securityContext:
        privileged: true
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: release-account
      secret:
        secretName: release-account
- cron: "11 */2 * * *"
  name: ci-knative-sandbox-eventing-kafka-broker-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka-broker
    path_alias: knative.dev/eventing-kafka-broker
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-kafka-broker"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      securityContext:
        privileged: true
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: docker-graph
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-sandbox-eventing-kafka-broker-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-sandbox-eventing-kafka-broker-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka-broker
    path_alias: knative.dev/eventing-kafka-broker
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "53 7 * * *"
  name: ci-knative-sandbox-eventing-kafka-broker-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-sandbox-eventing-kafka-broker-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka-broker
    path_alias: knative.dev/eventing-kafka-broker
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "35 9 * * *"
  name: ci-knative-sandbox-eventing-rabbitmq-nightly-release
  agent: kubernetes
  decorate: true
  reporter_config:
    slack:
      channel: eventing
      report_template: "The nightly release job for eventing-rabbitmq failed, check the log: <{{.Status.URL}}|View logs>"
      job_states_to_report:
      - "failure"
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-rabbitmq
    path_alias: knative.dev/eventing-rabbitmq
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "51 9 * * 2"
  name: ci-knative-sandbox-eventing-rabbitmq-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-rabbitmq
    path_alias: knative.dev/eventing-rabbitmq
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-rabbitmq"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "9 */2 * * *"
  name: ci-knative-sandbox-eventing-rabbitmq-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-rabbitmq
    path_alias: knative.dev/eventing-rabbitmq
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-rabbitmq"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "54 9 * * *"
  name: ci-knative-sandbox-eventing-natss-nightly-release
  agent: kubernetes
  decorate: true
  reporter_config:
    slack:
      channel: eventing
      report_template: "The nightly release job for eventing-natss failed, check the log: <{{.Status.URL}}|View logs>"
      job_states_to_report:
      - "failure"
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-natss
    path_alias: knative.dev/eventing-natss
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "34 9 * * 2"
  name: ci-knative-sandbox-eventing-natss-dot-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-natss
    path_alias: knative.dev/eventing-natss
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-natss"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "2 */2 * * *"
  name: ci-knative-sandbox-eventing-natss-auto-release
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-natss
    path_alias: knative.dev/eventing-natss
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-natss"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "30 07 * * *"
  name: ci-knative-serving-recreate-clusters
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-recreate-clusters
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/performance/performance-tests.sh"
      - "--recreate-clusters"
      volumeMounts:
      - name: performance-test
        mountPath: /etc/performance-test
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/performance-test/service-account.json
      - name: GITHUB_TOKEN
        value: /etc/performance-test/github-token
      - name: SLACK_READ_TOKEN
        value: /etc/performance-test/slack-read-token
      - name: SLACK_WRITE_TOKEN
        value: /etc/performance-test/slack-write-token
    volumes:
    - name: performance-test
      secret:
        secretName: performance-test
- cron: "5 * * * *"
  name: ci-knative-serving-update-clusters
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-update-clusters
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    path_alias: knative.dev/serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/performance/performance-tests.sh"
      - "--update-clusters"
      volumeMounts:
      - name: performance-test
        mountPath: /etc/performance-test
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/performance-test/service-account.json
      - name: GITHUB_TOKEN
        value: /etc/performance-test/github-token
      - name: SLACK_READ_TOKEN
        value: /etc/performance-test/slack-read-token
      - name: SLACK_WRITE_TOKEN
        value: /etc/performance-test/slack-write-token
    volumes:
    - name: performance-test
      secret:
        secretName: performance-test
- cron: "30 07 * * *"
  name: ci-knative-eventing-recreate-clusters
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-recreate-clusters
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/performance/performance-tests.sh"
      - "--recreate-clusters"
      volumeMounts:
      - name: performance-test
        mountPath: /etc/performance-test
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/performance-test/service-account.json
      - name: GITHUB_TOKEN
        value: /etc/performance-test/github-token
      - name: SLACK_READ_TOKEN
        value: /etc/performance-test/slack-read-token
      - name: SLACK_WRITE_TOKEN
        value: /etc/performance-test/slack-write-token
    volumes:
    - name: performance-test
      secret:
        secretName: performance-test
- cron: "5 * * * *"
  name: ci-knative-eventing-update-clusters
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-update-clusters
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    path_alias: knative.dev/eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/performance/performance-tests.sh"
      - "--update-clusters"
      volumeMounts:
      - name: performance-test
        mountPath: /etc/performance-test
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/performance-test/service-account.json
      - name: GITHUB_TOKEN
        value: /etc/performance-test/github-token
      - name: SLACK_READ_TOKEN
        value: /etc/performance-test/slack-read-token
      - name: SLACK_WRITE_TOKEN
        value: /etc/performance-test/slack-write-token
    volumes:
    - name: performance-test
      secret:
        secretName: performance-test
- cron: "30 07 * * *"
  name: ci-google-knative-gcp-recreate-clusters
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-recreate-clusters
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/performance/performance-tests.sh"
      - "--recreate-clusters"
      volumeMounts:
      - name: performance-test
        mountPath: /etc/performance-test
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/performance-test/service-account.json
      - name: GITHUB_TOKEN
        value: /etc/performance-test/github-token
      - name: SLACK_READ_TOKEN
        value: /etc/performance-test/slack-read-token
      - name: SLACK_WRITE_TOKEN
        value: /etc/performance-test/slack-write-token
    volumes:
    - name: performance-test
      secret:
        secretName: performance-test
- cron: "5 * * * *"
  name: ci-google-knative-gcp-update-clusters
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-update-clusters
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/performance/performance-tests.sh"
      - "--update-clusters"
      volumeMounts:
      - name: performance-test
        mountPath: /etc/performance-test
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/performance-test/service-account.json
      - name: GITHUB_TOKEN
        value: /etc/performance-test/github-token
      - name: SLACK_READ_TOKEN
        value: /etc/performance-test/slack-read-token
      - name: SLACK_WRITE_TOKEN
        value: /etc/performance-test/slack-write-token
    volumes:
    - name: performance-test
      secret:
        secretName: performance-test
postsubmits:
  knative/serving:
  - name: post-knative-serving-reconcile-clusters
    branches:
    - master
    agent: kubernetes
    decorate: true
    max_concurrency: 1
    cluster: "build-knative"
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: post-knative-serving-reconcile-clusters
    path_alias: knative.dev/serving
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/performance/performance-tests.sh"
        - "--reconcile-benchmark-clusters"
        volumeMounts:
        - name: performance-test
          mountPath: /etc/performance-test
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/performance-test/service-account.json
        - name: GITHUB_TOKEN
          value: /etc/performance-test/github-token
        - name: SLACK_READ_TOKEN
          value: /etc/performance-test/slack-read-token
        - name: SLACK_WRITE_TOKEN
          value: /etc/performance-test/slack-write-token
      volumes:
      - name: performance-test
        secret:
          secretName: performance-test
  knative/client:
  - name: post-knative-client-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/client
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative/eventing:
  - name: post-knative-eventing-reconcile-clusters
    branches:
    - master
    agent: kubernetes
    decorate: true
    max_concurrency: 1
    cluster: "build-knative"
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: post-knative-eventing-reconcile-clusters
    path_alias: knative.dev/eventing
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/performance/performance-tests.sh"
        - "--reconcile-benchmark-clusters"
        volumeMounts:
        - name: performance-test
          mountPath: /etc/performance-test
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/performance-test/service-account.json
        - name: GITHUB_TOKEN
          value: /etc/performance-test/github-token
        - name: SLACK_READ_TOKEN
          value: /etc/performance-test/slack-read-token
        - name: SLACK_WRITE_TOKEN
          value: /etc/performance-test/slack-write-token
      volumes:
      - name: performance-test
        secret:
          secretName: performance-test
  - name: post-knative-eventing-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/eventing
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative/eventing-contrib:
  - name: post-knative-eventing-contrib-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/eventing-contrib
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative/docs:
  - name: post-knative-docs-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative/test-infra:
  - name: post-knative-test-infra-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/test-infra
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  google/knative-gcp:
  - name: post-google-knative-gcp-reconcile-clusters
    branches:
    - master
    agent: kubernetes
    decorate: true
    max_concurrency: 1
    cluster: "build-knative"
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: post-google-knative-gcp-reconcile-clusters
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/performance/performance-tests.sh"
        - "--reconcile-benchmark-clusters"
        volumeMounts:
        - name: performance-test
          mountPath: /etc/performance-test
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/performance-test/service-account.json
        - name: GITHUB_TOKEN
          value: /etc/performance-test/github-token
        - name: SLACK_READ_TOKEN
          value: /etc/performance-test/slack-read-token
        - name: SLACK_WRITE_TOKEN
          value: /etc/performance-test/slack-write-token
      volumes:
      - name: performance-test
        secret:
          secretName: performance-test
  - name: post-google-knative-gcp-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative-sandbox/net-certmanager:
  - name: post-knative-sandbox-net-certmanager-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/net-certmanager
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative-sandbox/net-istio:
  - name: post-knative-sandbox-net-istio-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/net-istio
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative-sandbox/net-kourier:
  - name: post-knative-sandbox-net-kourier-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/net-kourier
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative/operator:
  - name: post-knative-operator-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/operator
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative-sandbox/async-component:
  - name: post-knative-sandbox-async-component-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/async-component
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative-sandbox/eventing-kafka:
  - name: post-knative-sandbox-eventing-kafka-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/eventing-kafka
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative-sandbox/eventing-kafka-broker:
  - name: post-knative-sandbox-eventing-kafka-broker-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/eventing-kafka-broker
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
