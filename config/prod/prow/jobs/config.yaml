# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# #######################################################################
# ####                                                               ####
# ####      THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.       ####
# ####   USE "./hack/generate-configs.sh" TO REGENERATE THIS FILE.   ####
# ####                                                               ####
# #######################################################################
presubmits:
  knative/serving:
  - name: pull-knative-serving-build-tests
    agent: kubernetes
    context: pull-knative-serving-build-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-build-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-build-tests
    agent: kubernetes
    context: pull-knative-serving-build-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-build-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-unit-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-unit-tests
    context: pull-knative-serving-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-unit-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-unit-tests
    context: pull-knative-serving-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-integration-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-integration-tests
    context: pull-knative-serving-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-integration-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-integration-tests
    context: pull-knative-serving-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-upgrade-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-upgrade-tests
    context: pull-knative-serving-upgrade-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-upgrade-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-upgrade-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-upgrade-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-upgrade-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-upgrade-tests
    context: pull-knative-serving-upgrade-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-upgrade-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-upgrade-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-upgrade-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-autotls-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-autotls-tests
    context: pull-knative-serving-autotls-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-autotls-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-autotls-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-autotls-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-knative-serving-autotls-tests
    context: pull-knative-serving-autotls-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-autotls-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-autotls-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-go-coverage
    agent: kubernetes
    context: pull-knative-serving-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-serving-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-serving-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-serving-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=80"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-serving-go-coverage
    agent: kubernetes
    context: pull-knative-serving-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-serving-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-serving-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-serving-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=80"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-serving-go-coverage-dev
    agent: kubernetes
    context: pull-knative-serving-go-coverage-dev
    always_run: false
    rerun_command: "/test pull-knative-serving-go-coverage-dev"
    trigger: "(?m)^/test (pull-knative-serving-go-coverage-dev),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:coverage-dev
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-serving-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=80"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-serving-istio-1.5-mesh
    agent: kubernetes
    context: pull-knative-serving-istio-1.5-mesh
    always_run: false
    rerun_command: "/test pull-knative-serving-istio-1.5-mesh"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-1.5-mesh),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --istio-version 1.5-latest --mesh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --istio-version 1.5-latest --mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-istio-1.5-mesh
    agent: kubernetes
    context: pull-knative-serving-istio-1.5-mesh
    always_run: false
    rerun_command: "/test pull-knative-serving-istio-1.5-mesh"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-1.5-mesh),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --istio-version 1.5-latest --mesh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --istio-version 1.5-latest --mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-istio-1.5-no-mesh
    agent: kubernetes
    context: pull-knative-serving-istio-1.5-no-mesh
    always_run: false
    rerun_command: "/test pull-knative-serving-istio-1.5-no-mesh"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-1.5-no-mesh),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --istio-version 1.5-latest --no-mesh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --istio-version 1.5-latest --no-mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-istio-1.5-no-mesh
    agent: kubernetes
    context: pull-knative-serving-istio-1.5-no-mesh
    always_run: false
    rerun_command: "/test pull-knative-serving-istio-1.5-no-mesh"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-1.5-no-mesh),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --istio-version 1.5-latest --no-mesh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --istio-version 1.5-latest --no-mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-istio-1.4-mesh
    agent: kubernetes
    context: pull-knative-serving-istio-1.4-mesh
    always_run: false
    rerun_command: "/test pull-knative-serving-istio-1.4-mesh"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-1.4-mesh),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --istio-version 1.4-latest --mesh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --istio-version 1.4-latest --mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-istio-1.4-mesh
    agent: kubernetes
    context: pull-knative-serving-istio-1.4-mesh
    always_run: false
    rerun_command: "/test pull-knative-serving-istio-1.4-mesh"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-1.4-mesh),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --istio-version 1.4-latest --mesh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --istio-version 1.4-latest --mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-istio-1.4-no-mesh
    agent: kubernetes
    context: pull-knative-serving-istio-1.4-no-mesh
    always_run: false
    rerun_command: "/test pull-knative-serving-istio-1.4-no-mesh"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-1.4-no-mesh),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --istio-version 1.4-latest --no-mesh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --istio-version 1.4-latest --no-mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-istio-1.4-no-mesh
    agent: kubernetes
    context: pull-knative-serving-istio-1.4-no-mesh
    always_run: false
    rerun_command: "/test pull-knative-serving-istio-1.4-no-mesh"
    trigger: "(?m)^/test (all|pull-knative-serving-istio-1.4-no-mesh),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --istio-version 1.4-latest --no-mesh"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --istio-version 1.4-latest --no-mesh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-gloo-0.17.1
    agent: kubernetes
    context: pull-knative-serving-gloo-0.17.1
    always_run: false
    rerun_command: "/test pull-knative-serving-gloo-0.17.1"
    trigger: "(?m)^/test (all|pull-knative-serving-gloo-0.17.1),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --gloo-version 0.17.1"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --gloo-version 0.17.1"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-gloo-0.17.1
    agent: kubernetes
    context: pull-knative-serving-gloo-0.17.1
    always_run: false
    rerun_command: "/test pull-knative-serving-gloo-0.17.1"
    trigger: "(?m)^/test (all|pull-knative-serving-gloo-0.17.1),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --gloo-version 0.17.1"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --gloo-version 0.17.1"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-kourier-stable
    agent: kubernetes
    context: pull-knative-serving-kourier-stable
    always_run: false
    rerun_command: "/test pull-knative-serving-kourier-stable"
    trigger: "(?m)^/test (all|pull-knative-serving-kourier-stable),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --kourier-version stable"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --kourier-version stable"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-kourier-stable
    agent: kubernetes
    context: pull-knative-serving-kourier-stable
    always_run: false
    rerun_command: "/test pull-knative-serving-kourier-stable"
    trigger: "(?m)^/test (all|pull-knative-serving-kourier-stable),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --kourier-version stable"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --kourier-version stable"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-contour-latest
    agent: kubernetes
    context: pull-knative-serving-contour-latest
    always_run: false
    rerun_command: "/test pull-knative-serving-contour-latest"
    trigger: "(?m)^/test (all|pull-knative-serving-contour-latest),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --contour-version latest"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --contour-version latest"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-contour-latest
    agent: kubernetes
    context: pull-knative-serving-contour-latest
    always_run: false
    rerun_command: "/test pull-knative-serving-contour-latest"
    trigger: "(?m)^/test (all|pull-knative-serving-contour-latest),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --contour-version latest"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --contour-version latest"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-ambassador-latest
    agent: kubernetes
    context: pull-knative-serving-ambassador-latest
    always_run: false
    rerun_command: "/test pull-knative-serving-ambassador-latest"
    trigger: "(?m)^/test (all|pull-knative-serving-ambassador-latest),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --ambassador-version latest"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --ambassador-version latest"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-ambassador-latest
    agent: kubernetes
    context: pull-knative-serving-ambassador-latest
    always_run: false
    rerun_command: "/test pull-knative-serving-ambassador-latest"
    trigger: "(?m)^/test (all|pull-knative-serving-ambassador-latest),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --ambassador-version latest"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --ambassador-version latest"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-https
    agent: kubernetes
    context: pull-knative-serving-https
    always_run: false
    rerun_command: "/test pull-knative-serving-https"
    trigger: "(?m)^/test (all|pull-knative-serving-https),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --https"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --https"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-https
    agent: kubernetes
    context: pull-knative-serving-https
    always_run: false
    rerun_command: "/test pull-knative-serving-https"
    trigger: "(?m)^/test (all|pull-knative-serving-https),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/serving
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --https"
        - "--run-test"
        - "./test/e2e-auto-tls-tests.sh --https"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative/client:
  - name: pull-knative-client-build-tests
    agent: kubernetes
    context: pull-knative-client-build-tests
    always_run: true
    rerun_command: "/test pull-knative-client-build-tests"
    trigger: "(?m)^/test (all|pull-knative-client-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-build-tests
    agent: kubernetes
    context: pull-knative-client-build-tests
    always_run: true
    rerun_command: "/test pull-knative-client-build-tests"
    trigger: "(?m)^/test (all|pull-knative-client-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-unit-tests
    agent: kubernetes
    context: pull-knative-client-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-client-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-client-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-unit-tests
    agent: kubernetes
    context: pull-knative-client-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-client-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-client-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-integration-tests
    agent: kubernetes
    context: pull-knative-client-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-client-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-client-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-integration-tests
    agent: kubernetes
    context: pull-knative-client-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-client-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-client-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-go-coverage
    agent: kubernetes
    context: pull-knative-client-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-client-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-client-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/client
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-client-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-client-go-coverage
    agent: kubernetes
    context: pull-knative-client-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-client-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-client-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/client
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-client-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-client-integration-tests-latest-release
    agent: kubernetes
    context: pull-knative-client-integration-tests-latest-release
    always_run: true
    rerun_command: "/test pull-knative-client-integration-tests-latest-release"
    trigger: "(?m)^/test (all|pull-knative-client-integration-tests-latest-release),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-integration-tests-latest-release.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-integration-tests-latest-release
    agent: kubernetes
    context: pull-knative-client-integration-tests-latest-release
    always_run: true
    rerun_command: "/test pull-knative-client-integration-tests-latest-release"
    trigger: "(?m)^/test (all|pull-knative-client-integration-tests-latest-release),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-integration-tests-latest-release.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative/client-contrib:
  - name: pull-knative-client-contrib-build-tests
    agent: kubernetes
    context: pull-knative-client-contrib-build-tests
    always_run: true
    rerun_command: "/test pull-knative-client-contrib-build-tests"
    trigger: "(?m)^/test (all|pull-knative-client-contrib-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client-contrib
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-contrib-unit-tests
    agent: kubernetes
    context: pull-knative-client-contrib-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-client-contrib-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-client-contrib-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client-contrib
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-contrib-integration-tests
    agent: kubernetes
    context: pull-knative-client-contrib-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-client-contrib-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-client-contrib-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/client-contrib
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  knative/eventing:
  - name: pull-knative-eventing-build-tests
    agent: kubernetes
    context: pull-knative-eventing-build-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-build-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-build-tests
    agent: kubernetes
    context: pull-knative-eventing-build-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-build-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-unit-tests
    agent: kubernetes
    context: pull-knative-eventing-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-unit-tests
    agent: kubernetes
    context: pull-knative-eventing-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-integration-tests
    agent: kubernetes
    context: pull-knative-eventing-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-integration-tests
    agent: kubernetes
    context: pull-knative-eventing-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-go-coverage
    agent: kubernetes
    context: pull-knative-eventing-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-eventing-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-eventing-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/eventing
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-eventing-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-eventing-go-coverage
    agent: kubernetes
    context: pull-knative-eventing-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-eventing-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-eventing-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/eventing
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-eventing-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/eventing-contrib:
  - name: pull-knative-eventing-contrib-build-tests
    agent: kubernetes
    context: pull-knative-eventing-contrib-build-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-build-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-contrib
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-contrib-build-tests
    agent: kubernetes
    context: pull-knative-eventing-contrib-build-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-build-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-contrib
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
        resources:
          requests:
            memory: 12Gi
          limits:
            memory: 16Gi
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-contrib-unit-tests
    agent: kubernetes
    context: pull-knative-eventing-contrib-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-contrib
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-contrib-unit-tests
    agent: kubernetes
    context: pull-knative-eventing-contrib-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-contrib
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-contrib-integration-tests
    agent: kubernetes
    context: pull-knative-eventing-contrib-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-contrib
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-contrib-integration-tests
    agent: kubernetes
    context: pull-knative-eventing-contrib-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-contrib
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-contrib-go-coverage
    agent: kubernetes
    context: pull-knative-eventing-contrib-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/eventing-contrib
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-eventing-contrib-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-eventing-contrib-go-coverage
    agent: kubernetes
    context: pull-knative-eventing-contrib-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/eventing-contrib
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-eventing-contrib-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/docs:
  - name: pull-knative-docs-build-tests
    agent: kubernetes
    context: pull-knative-docs-build-tests
    always_run: true
    rerun_command: "/test pull-knative-docs-build-tests"
    trigger: "(?m)^/test (all|pull-knative-docs-build-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-docs-unit-tests
    agent: kubernetes
    context: pull-knative-docs-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-docs-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-docs-unit-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-docs-integration-tests
    agent: kubernetes
    context: pull-knative-docs-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-docs-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-docs-integration-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        securityContext:
          privileged: true
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: docker-graph
          mountPath: /docker-graph
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: docker-graph
        emptyDir: {}
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-docs-go-coverage
    agent: kubernetes
    context: pull-knative-docs-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-docs-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-docs-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-docs-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-docs-markdown-link-check
    agent: kubernetes
    context: pull-knative-docs-markdown-link-check
    always_run: true
    rerun_command: "/test pull-knative-docs-markdown-link-check"
    trigger: "(?m)^/test (all|pull-knative-docs-markdown-link-check),?(\\s+|$)"
    decorate: true
    optional: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-link-check.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative/pkg:
  - name: pull-knative-pkg-build-tests
    agent: kubernetes
    context: pull-knative-pkg-build-tests
    always_run: true
    rerun_command: "/test pull-knative-pkg-build-tests"
    trigger: "(?m)^/test (all|pull-knative-pkg-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/pkg
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-pkg-build-tests
    agent: kubernetes
    context: pull-knative-pkg-build-tests
    always_run: true
    rerun_command: "/test pull-knative-pkg-build-tests"
    trigger: "(?m)^/test (all|pull-knative-pkg-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/pkg
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-pkg-unit-tests
    agent: kubernetes
    context: pull-knative-pkg-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-pkg-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-pkg-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/pkg
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-pkg-unit-tests
    agent: kubernetes
    context: pull-knative-pkg-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-pkg-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-pkg-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/pkg
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-pkg-integration-tests
    agent: kubernetes
    context: pull-knative-pkg-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-pkg-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-pkg-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/pkg
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-pkg-integration-tests
    agent: kubernetes
    context: pull-knative-pkg-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-pkg-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-pkg-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/pkg
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-pkg-go-coverage
    agent: kubernetes
    context: pull-knative-pkg-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-pkg-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-pkg-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/pkg
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-pkg-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-pkg-go-coverage
    agent: kubernetes
    context: pull-knative-pkg-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-pkg-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-pkg-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/pkg
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-pkg-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/test-infra:
  - name: pull-knative-test-infra-build-tests
    agent: kubernetes
    context: pull-knative-test-infra-build-tests
    always_run: true
    rerun_command: "/test pull-knative-test-infra-build-tests"
    trigger: "(?m)^/test (all|pull-knative-test-infra-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/test-infra
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-test-infra-build-tests
    agent: kubernetes
    context: pull-knative-test-infra-build-tests
    always_run: true
    rerun_command: "/test pull-knative-test-infra-build-tests"
    trigger: "(?m)^/test (all|pull-knative-test-infra-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/test-infra
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-test-infra-unit-tests
    agent: kubernetes
    context: pull-knative-test-infra-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-test-infra-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-test-infra-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/test-infra
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-test-infra-unit-tests
    agent: kubernetes
    context: pull-knative-test-infra-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-test-infra-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-test-infra-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/test-infra
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-test-infra-integration-tests
    agent: kubernetes
    context: pull-knative-test-infra-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-test-infra-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-test-infra-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/test-infra
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-test-infra-integration-tests
    agent: kubernetes
    context: pull-knative-test-infra-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-test-infra-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-test-infra-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/test-infra
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-test-infra-go-coverage
    agent: kubernetes
    context: pull-knative-test-infra-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-test-infra-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-test-infra-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/test-infra
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-test-infra-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-test-infra-go-coverage
    agent: kubernetes
    context: pull-knative-test-infra-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-test-infra-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-test-infra-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/test-infra
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-test-infra-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/caching:
  - name: pull-knative-caching-build-tests
    agent: kubernetes
    context: pull-knative-caching-build-tests
    always_run: true
    rerun_command: "/test pull-knative-caching-build-tests"
    trigger: "(?m)^/test (all|pull-knative-caching-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/caching
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-caching-unit-tests
    agent: kubernetes
    context: pull-knative-caching-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-caching-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-caching-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/caching
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-caching-integration-tests
    agent: kubernetes
    context: pull-knative-caching-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-caching-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-caching-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/caching
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-caching-go-coverage
    agent: kubernetes
    context: pull-knative-caching-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-caching-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-caching-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/caching
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-caching-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/sample-controller:
  - name: pull-knative-sample-controller-build-tests
    agent: kubernetes
    context: pull-knative-sample-controller-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sample-controller-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sample-controller-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/sample-controller
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sample-controller-unit-tests
    agent: kubernetes
    context: pull-knative-sample-controller-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sample-controller-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sample-controller-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/sample-controller
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  knative/sample-source:
  - name: pull-knative-sample-source-build-tests
    agent: kubernetes
    context: pull-knative-sample-source-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sample-source-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sample-source-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/sample-source
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sample-source-unit-tests
    agent: kubernetes
    context: pull-knative-sample-source-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sample-source-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sample-source-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/sample-source
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  google/knative-gcp:
  - name: pull-google-knative-gcp-build-tests
    agent: kubernetes
    context: pull-google-knative-gcp-build-tests
    always_run: true
    rerun_command: "/test pull-google-knative-gcp-build-tests"
    trigger: "(?m)^/test (all|pull-google-knative-gcp-build-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-google-knative-gcp-build-tests
    agent: kubernetes
    context: pull-google-knative-gcp-build-tests
    always_run: true
    rerun_command: "/test pull-google-knative-gcp-build-tests"
    trigger: "(?m)^/test (all|pull-google-knative-gcp-build-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-google-knative-gcp-unit-tests
    agent: kubernetes
    context: pull-google-knative-gcp-unit-tests
    always_run: true
    rerun_command: "/test pull-google-knative-gcp-unit-tests"
    trigger: "(?m)^/test (all|pull-google-knative-gcp-unit-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-google-knative-gcp-unit-tests
    agent: kubernetes
    context: pull-google-knative-gcp-unit-tests
    always_run: true
    rerun_command: "/test pull-google-knative-gcp-unit-tests"
    trigger: "(?m)^/test (all|pull-google-knative-gcp-unit-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-google-knative-gcp-integration-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-google-knative-gcp-integration-tests
    context: pull-google-knative-gcp-integration-tests
    always_run: true
    rerun_command: "/test pull-google-knative-gcp-integration-tests"
    trigger: "(?m)^/test (all|pull-google-knative-gcp-integration-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-google-knative-gcp-integration-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-google-knative-gcp-integration-tests
    context: pull-google-knative-gcp-integration-tests
    always_run: true
    rerun_command: "/test pull-google-knative-gcp-integration-tests"
    trigger: "(?m)^/test (all|pull-google-knative-gcp-integration-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-google-knative-gcp-wi-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-google-knative-gcp-wi-tests
    context: pull-google-knative-gcp-wi-tests
    always_run: true
    rerun_command: "/test pull-google-knative-gcp-wi-tests"
    trigger: "(?m)^/test (all|pull-google-knative-gcp-wi-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-wi-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-google-knative-gcp-wi-tests
    agent: kubernetes
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: pull-google-knative-gcp-wi-tests
    context: pull-google-knative-gcp-wi-tests
    always_run: true
    rerun_command: "/test pull-google-knative-gcp-wi-tests"
    trigger: "(?m)^/test (all|pull-google-knative-gcp-wi-tests),?(\\s+|$)"
    decorate: true
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-wi-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-google-knative-gcp-go-coverage
    agent: kubernetes
    context: pull-google-knative-gcp-go-coverage
    always_run: true
    rerun_command: "/test pull-google-knative-gcp-go-coverage"
    trigger: "(?m)^/test (all|pull-google-knative-gcp-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-google-knative-gcp-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-google-knative-gcp-go-coverage
    agent: kubernetes
    context: pull-google-knative-gcp-go-coverage
    always_run: true
    rerun_command: "/test pull-google-knative-gcp-go-coverage"
    trigger: "(?m)^/test (all|pull-google-knative-gcp-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-google-knative-gcp-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/net-certmanager:
  - name: pull-knative-net-certmanager-build-tests
    agent: kubernetes
    context: pull-knative-net-certmanager-build-tests
    always_run: true
    rerun_command: "/test pull-knative-net-certmanager-build-tests"
    trigger: "(?m)^/test (all|pull-knative-net-certmanager-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-certmanager
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-certmanager-build-tests
    agent: kubernetes
    context: pull-knative-net-certmanager-build-tests
    always_run: true
    rerun_command: "/test pull-knative-net-certmanager-build-tests"
    trigger: "(?m)^/test (all|pull-knative-net-certmanager-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-certmanager
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-certmanager-unit-tests
    agent: kubernetes
    context: pull-knative-net-certmanager-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-net-certmanager-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-net-certmanager-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-certmanager
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-certmanager-unit-tests
    agent: kubernetes
    context: pull-knative-net-certmanager-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-net-certmanager-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-net-certmanager-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-certmanager
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-certmanager-integration-tests
    agent: kubernetes
    context: pull-knative-net-certmanager-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-net-certmanager-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-net-certmanager-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-certmanager
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-certmanager-integration-tests
    agent: kubernetes
    context: pull-knative-net-certmanager-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-net-certmanager-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-net-certmanager-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-certmanager
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-certmanager-go-coverage
    agent: kubernetes
    context: pull-knative-net-certmanager-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-net-certmanager-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-net-certmanager-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/net-certmanager
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-net-certmanager-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-net-certmanager-go-coverage
    agent: kubernetes
    context: pull-knative-net-certmanager-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-net-certmanager-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-net-certmanager-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/net-certmanager
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-net-certmanager-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/net-contour:
  - name: pull-knative-net-contour-build-tests
    agent: kubernetes
    context: pull-knative-net-contour-build-tests
    always_run: true
    rerun_command: "/test pull-knative-net-contour-build-tests"
    trigger: "(?m)^/test (all|pull-knative-net-contour-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-contour
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-contour-build-tests
    agent: kubernetes
    context: pull-knative-net-contour-build-tests
    always_run: true
    rerun_command: "/test pull-knative-net-contour-build-tests"
    trigger: "(?m)^/test (all|pull-knative-net-contour-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-contour
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-contour-unit-tests
    agent: kubernetes
    context: pull-knative-net-contour-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-net-contour-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-net-contour-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-contour
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-contour-unit-tests
    agent: kubernetes
    context: pull-knative-net-contour-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-net-contour-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-net-contour-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-contour
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-contour-integration-tests
    agent: kubernetes
    context: pull-knative-net-contour-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-net-contour-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-net-contour-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-contour
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-contour-integration-tests
    agent: kubernetes
    context: pull-knative-net-contour-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-net-contour-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-net-contour-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-contour
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-contour-go-coverage
    agent: kubernetes
    context: pull-knative-net-contour-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-net-contour-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-net-contour-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/net-contour
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-net-contour-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-net-contour-go-coverage
    agent: kubernetes
    context: pull-knative-net-contour-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-net-contour-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-net-contour-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/net-contour
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-net-contour-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/net-http01:
  - name: pull-knative-net-http01-build-tests
    agent: kubernetes
    context: pull-knative-net-http01-build-tests
    always_run: true
    rerun_command: "/test pull-knative-net-http01-build-tests"
    trigger: "(?m)^/test (all|pull-knative-net-http01-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-http01
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-http01-build-tests
    agent: kubernetes
    context: pull-knative-net-http01-build-tests
    always_run: true
    rerun_command: "/test pull-knative-net-http01-build-tests"
    trigger: "(?m)^/test (all|pull-knative-net-http01-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-http01
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-http01-unit-tests
    agent: kubernetes
    context: pull-knative-net-http01-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-net-http01-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-net-http01-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-http01
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-http01-unit-tests
    agent: kubernetes
    context: pull-knative-net-http01-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-net-http01-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-net-http01-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-http01
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-http01-integration-tests
    agent: kubernetes
    context: pull-knative-net-http01-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-net-http01-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-net-http01-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-http01
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-http01-integration-tests
    agent: kubernetes
    context: pull-knative-net-http01-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-net-http01-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-net-http01-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-http01
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-http01-go-coverage
    agent: kubernetes
    context: pull-knative-net-http01-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-net-http01-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-net-http01-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/net-http01
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-net-http01-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-net-http01-go-coverage
    agent: kubernetes
    context: pull-knative-net-http01-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-net-http01-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-net-http01-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/net-http01
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-net-http01-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/net-istio:
  - name: pull-knative-net-istio-build-tests
    agent: kubernetes
    context: pull-knative-net-istio-build-tests
    always_run: true
    rerun_command: "/test pull-knative-net-istio-build-tests"
    trigger: "(?m)^/test (all|pull-knative-net-istio-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-istio
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-istio-build-tests
    agent: kubernetes
    context: pull-knative-net-istio-build-tests
    always_run: true
    rerun_command: "/test pull-knative-net-istio-build-tests"
    trigger: "(?m)^/test (all|pull-knative-net-istio-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-istio
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-istio-unit-tests
    agent: kubernetes
    context: pull-knative-net-istio-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-net-istio-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-net-istio-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-istio
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-istio-unit-tests
    agent: kubernetes
    context: pull-knative-net-istio-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-net-istio-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-net-istio-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-istio
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-istio-integration-tests
    agent: kubernetes
    context: pull-knative-net-istio-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-net-istio-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-net-istio-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-istio
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-istio-integration-tests
    agent: kubernetes
    context: pull-knative-net-istio-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-net-istio-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-net-istio-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-istio
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-istio-go-coverage
    agent: kubernetes
    context: pull-knative-net-istio-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-net-istio-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-net-istio-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/net-istio
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-net-istio-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-net-istio-go-coverage
    agent: kubernetes
    context: pull-knative-net-istio-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-net-istio-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-net-istio-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/net-istio
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-net-istio-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-net-istio-latest
    agent: kubernetes
    context: pull-knative-net-istio-latest
    always_run: true
    rerun_command: "/test pull-knative-net-istio-latest"
    trigger: "(?m)^/test (all|pull-knative-net-istio-latest),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/net-istio
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --istio-version latest"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-istio-latest
    agent: kubernetes
    context: pull-knative-net-istio-latest
    always_run: true
    rerun_command: "/test pull-knative-net-istio-latest"
    trigger: "(?m)^/test (all|pull-knative-net-istio-latest),?(\\s+|$)"
    decorate: true
    optional: true
    path_alias: knative.dev/net-istio
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh --istio-version latest"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative/net-kourier:
  - name: pull-knative-net-kourier-build-tests
    agent: kubernetes
    context: pull-knative-net-kourier-build-tests
    always_run: true
    rerun_command: "/test pull-knative-net-kourier-build-tests"
    trigger: "(?m)^/test (all|pull-knative-net-kourier-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-kourier
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-kourier-build-tests
    agent: kubernetes
    context: pull-knative-net-kourier-build-tests
    always_run: true
    rerun_command: "/test pull-knative-net-kourier-build-tests"
    trigger: "(?m)^/test (all|pull-knative-net-kourier-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-kourier
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-kourier-unit-tests
    agent: kubernetes
    context: pull-knative-net-kourier-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-net-kourier-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-net-kourier-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-kourier
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-kourier-unit-tests
    agent: kubernetes
    context: pull-knative-net-kourier-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-net-kourier-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-net-kourier-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-kourier
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-kourier-integration-tests
    agent: kubernetes
    context: pull-knative-net-kourier-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-net-kourier-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-net-kourier-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-kourier
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-kourier-integration-tests
    agent: kubernetes
    context: pull-knative-net-kourier-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-net-kourier-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-net-kourier-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/net-kourier
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-net-kourier-go-coverage
    agent: kubernetes
    context: pull-knative-net-kourier-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-net-kourier-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-net-kourier-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/net-kourier
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-net-kourier-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-net-kourier-go-coverage
    agent: kubernetes
    context: pull-knative-net-kourier-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-net-kourier-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-net-kourier-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/net-kourier
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-net-kourier-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/serving-operator:
  - name: pull-knative-serving-operator-build-tests
    agent: kubernetes
    context: pull-knative-serving-operator-build-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-operator-build-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-operator-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving-operator
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-operator-build-tests
    agent: kubernetes
    context: pull-knative-serving-operator-build-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-operator-build-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-operator-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving-operator
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-operator-unit-tests
    agent: kubernetes
    context: pull-knative-serving-operator-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-operator-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-operator-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving-operator
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-operator-unit-tests
    agent: kubernetes
    context: pull-knative-serving-operator-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-operator-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-operator-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving-operator
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-operator-integration-tests
    agent: kubernetes
    context: pull-knative-serving-operator-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-operator-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-operator-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving-operator
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-operator-integration-tests
    agent: kubernetes
    context: pull-knative-serving-operator-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-operator-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-operator-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving-operator
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-operator-go-coverage
    agent: kubernetes
    context: pull-knative-serving-operator-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-serving-operator-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-serving-operator-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/serving-operator
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-serving-operator-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-serving-operator-go-coverage
    agent: kubernetes
    context: pull-knative-serving-operator-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-serving-operator-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-serving-operator-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/serving-operator
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-serving-operator-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-serving-operator-upgrade-tests
    agent: kubernetes
    context: pull-knative-serving-operator-upgrade-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-operator-upgrade-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-operator-upgrade-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving-operator
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-upgrade-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-operator-upgrade-tests
    agent: kubernetes
    context: pull-knative-serving-operator-upgrade-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-operator-upgrade-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-operator-upgrade-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/serving-operator
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-upgrade-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative/eventing-operator:
  - name: pull-knative-eventing-operator-build-tests
    agent: kubernetes
    context: pull-knative-eventing-operator-build-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-operator-build-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-operator-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-operator
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-operator-build-tests
    agent: kubernetes
    context: pull-knative-eventing-operator-build-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-operator-build-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-operator-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-operator
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-operator-unit-tests
    agent: kubernetes
    context: pull-knative-eventing-operator-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-operator-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-operator-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-operator
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-operator-unit-tests
    agent: kubernetes
    context: pull-knative-eventing-operator-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-operator-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-operator-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-operator
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-operator-integration-tests
    agent: kubernetes
    context: pull-knative-eventing-operator-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-operator-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-operator-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-operator
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-operator-integration-tests
    agent: kubernetes
    context: pull-knative-eventing-operator-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-operator-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-operator-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-operator
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-operator-go-coverage
    agent: kubernetes
    context: pull-knative-eventing-operator-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-eventing-operator-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-eventing-operator-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/eventing-operator
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-eventing-operator-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-eventing-operator-go-coverage
    agent: kubernetes
    context: pull-knative-eventing-operator-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-eventing-operator-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-eventing-operator-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/eventing-operator
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-eventing-operator-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-eventing-operator-upgrade-tests
    agent: kubernetes
    context: pull-knative-eventing-operator-upgrade-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-operator-upgrade-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-operator-upgrade-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-operator
    cluster: "build-knative"
    branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-upgrade-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-operator-upgrade-tests
    agent: kubernetes
    context: pull-knative-eventing-operator-upgrade-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-operator-upgrade-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-operator-upgrade-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-operator
    cluster: "build-knative"
    skip_branches:
    - "release-0.11"
    - "release-0.12"
    - "release-0.13"
    - "release-0.14"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-upgrade-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GO_VERSION
          value: go1.14
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative/operator:
  - name: pull-knative-operator-build-tests
    agent: kubernetes
    context: pull-knative-operator-build-tests
    always_run: true
    rerun_command: "/test pull-knative-operator-build-tests"
    trigger: "(?m)^/test (all|pull-knative-operator-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/operator
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-operator-unit-tests
    agent: kubernetes
    context: pull-knative-operator-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-operator-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-operator-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/operator
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-operator-integration-tests
    agent: kubernetes
    context: pull-knative-operator-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-operator-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-operator-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/operator
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-operator-go-coverage
    agent: kubernetes
    context: pull-knative-operator-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-operator-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-operator-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/operator
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-operator-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-operator-upgrade-tests
    agent: kubernetes
    context: pull-knative-operator-upgrade-tests
    always_run: true
    rerun_command: "/test pull-knative-operator-upgrade-tests"
    trigger: "(?m)^/test (all|pull-knative-operator-upgrade-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/operator
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-upgrade-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative-sandbox/eventing-kafka:
  - name: pull-knative-sandbox-eventing-kafka-build-tests
    agent: kubernetes
    context: pull-knative-sandbox-eventing-kafka-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-eventing-kafka-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-eventing-kafka-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-kafka
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        securityContext:
          privileged: true
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: docker-graph
          mountPath: /docker-graph
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: docker-graph
        emptyDir: {}
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-eventing-kafka-unit-tests
    agent: kubernetes
    context: pull-knative-sandbox-eventing-kafka-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-eventing-kafka-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-eventing-kafka-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-kafka
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        securityContext:
          privileged: true
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: docker-graph
          mountPath: /docker-graph
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: docker-graph
        emptyDir: {}
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-eventing-kafka-integration-tests
    agent: kubernetes
    context: pull-knative-sandbox-eventing-kafka-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-eventing-kafka-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-eventing-kafka-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-kafka
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        securityContext:
          privileged: true
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: docker-graph
          mountPath: /docker-graph
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: docker-graph
        emptyDir: {}
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-eventing-kafka-go-coverage
    agent: kubernetes
    context: pull-knative-sandbox-eventing-kafka-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-sandbox-eventing-kafka-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-sandbox-eventing-kafka-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/eventing-kafka
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--postsubmit-job-name=post-knative-sandbox-eventing-kafka-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
        - name: docker-graph
          mountPath: /docker-graph
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
      - name: docker-graph
        emptyDir: {}
  knative-sandbox/eventing-rabbitmq:
  - name: pull-knative-sandbox-eventing-rabbitmq-build-tests
    agent: kubernetes
    context: pull-knative-sandbox-eventing-rabbitmq-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-eventing-rabbitmq-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-eventing-rabbitmq-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-rabbitmq
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-eventing-rabbitmq-unit-tests
    agent: kubernetes
    context: pull-knative-sandbox-eventing-rabbitmq-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-eventing-rabbitmq-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-eventing-rabbitmq-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-rabbitmq
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sandbox-eventing-rabbitmq-integration-tests
    agent: kubernetes
    context: pull-knative-sandbox-eventing-rabbitmq-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-sandbox-eventing-rabbitmq-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-sandbox-eventing-rabbitmq-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/eventing-rabbitmq
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: repoview-token
          mountPath: /etc/repoview-token
          readOnly: true
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: repoview-token
        secret:
          secretName: repoview-token
      - name: test-account
        secret:
          secretName: test-account
periodics:
- cron: "0 */2 * * *"
  name: ci-knative-serving-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "4 8,11,22 * * *"
  name: ci-knative-serving-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "59 8 * * *"
  name: ci-knative-serving-0.11-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-0.11-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: release-0.11
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "27 8,11 * * *"
  name: ci-knative-serving-0.11-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-0.11-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: release-0.11
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "20 8 * * *"
  name: ci-knative-serving-0.12-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-0.12-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: release-0.12
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "12 8,11 * * *"
  name: ci-knative-serving-0.12-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-0.12-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: release-0.12
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "45 8 * * *"
  name: ci-knative-serving-0.13-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-0.13-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: release-0.13
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "37 8,11 * * *"
  name: ci-knative-serving-0.13-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-0.13-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: release-0.13
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "42 8 * * *"
  name: ci-knative-serving-0.14-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-0.14-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: release-0.14
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "58 8,11 * * *"
  name: ci-knative-serving-0.14-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-0.14-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: release-0.14
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "38 */2 * * *"
  name: ci-knative-serving-istio-1.5-mesh
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --istio-version 1.5-latest --mesh"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --istio-version 1.5-latest --mesh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "54 */2 * * *"
  name: ci-knative-serving-istio-1.5-no-mesh
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --istio-version 1.5-latest --no-mesh"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --istio-version 1.5-latest --no-mesh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "23 */2 * * *"
  name: ci-knative-serving-istio-1.4-mesh
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --istio-version 1.4-latest --mesh"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --istio-version 1.4-latest --mesh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "53 */2 * * *"
  name: ci-knative-serving-istio-1.4-no-mesh
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --istio-version 1.4-latest --no-mesh"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --istio-version 1.4-latest --no-mesh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "12 */2 * * *"
  name: ci-knative-serving-gloo-0.17.1
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --gloo-version 0.17.1"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --gloo-version 0.17.1"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "24 */2 * * *"
  name: ci-knative-serving-kourier-stable
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --kourier-version stable"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --kourier-version stable"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "43 */2 * * *"
  name: ci-knative-serving-contour-latest
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --contour-version latest"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --contour-version latest"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "44 */2 * * *"
  name: ci-knative-serving-ambassador-latest
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --ambassador-version latest"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --ambassador-version latest"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "42 */2 * * *"
  name: ci-knative-serving-https
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--run-test"
      - "./test/e2e-tests.sh --https"
      - "--run-test"
      - "./test/e2e-auto-tls-tests.sh --https"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "20 9 * * *"
  name: ci-knative-serving-nightly-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-nightly-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "43 9 * * 2"
  name: ci-knative-serving-0.11-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-0.11-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: release-0.11
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/serving"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.11"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "54 9 * * 2"
  name: ci-knative-serving-0.12-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-0.12-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: release-0.12
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/serving"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.12"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "57 9 * * 2"
  name: ci-knative-serving-0.13-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-0.13-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: release-0.13
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/serving"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.13"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "32 9 * * 2"
  name: ci-knative-serving-0.14-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-0.14-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: release-0.14
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/serving"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.14"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "20 */2 * * *"
  name: ci-knative-serving-auto-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-auto-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/serving"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "12 9 * * *"
  name: ci-knative-serving-webhook-apicoverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/apicoverage.sh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: SYSTEM_NAMESPACE
        value: knative-serving
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 1 * * *"
  name: ci-knative-serving-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-serving-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=80"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "44 7 * * *"
  name: ci-knative-serving-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-serving-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=80"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "53 * * * *"
  name: ci-knative-client-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: master
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "13 8,11,22 * * *"
  name: ci-knative-client-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: master
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "20 8 * * *"
  name: ci-knative-client-0.11-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-0.11-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: release-0.11
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "36 8,11 * * *"
  name: ci-knative-client-0.11-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-0.11-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: release-0.11
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "7 8 * * *"
  name: ci-knative-client-0.12-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-0.12-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: release-0.12
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "7 8,11 * * *"
  name: ci-knative-client-0.12-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-0.12-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: release-0.12
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "14 8 * * *"
  name: ci-knative-client-0.13-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-0.13-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: release-0.13
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "42 8,11 * * *"
  name: ci-knative-client-0.13-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-0.13-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: release-0.13
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "49 8 * * *"
  name: ci-knative-client-0.14-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-0.14-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: release-0.14
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "5 8,11 * * *"
  name: ci-knative-client-0.14-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-0.14-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: release-0.14
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "59 9 * * *"
  name: ci-knative-client-nightly-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-nightly-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: master
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "0 13 * * *"
  name: ci-knative-client-tekton
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: master
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/tekton-tests.sh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "10 9 * * 2"
  name: ci-knative-client-0.11-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-0.11-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: release-0.11
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/client"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.11"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "15 9 * * 2"
  name: ci-knative-client-0.12-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-0.12-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: release-0.12
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/client"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.12"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "4 9 * * 2"
  name: ci-knative-client-0.13-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-0.13-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: release-0.13
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/client"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.13"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "5 9 * * 2"
  name: ci-knative-client-0.14-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-0.14-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: release-0.14
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/client"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.14"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "29 */2 * * *"
  name: ci-knative-client-auto-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-auto-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: master
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/client"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-client-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-client-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: master
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "35 7 * * *"
  name: ci-knative-client-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-client-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client
    base_ref: master
    path_alias: knative.dev/client
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "49 * * * *"
  name: ci-knative-client-contrib-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-contrib-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client-contrib
    base_ref: master
    path_alias: knative.dev/client-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "21 8,11,22 * * *"
  name: ci-knative-client-contrib-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-client-contrib-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: client-contrib
    base_ref: master
    path_alias: knative.dev/client-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "45 * * * *"
  name: ci-knative-docs-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-docs-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: docs
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "33 8,11,22 * * *"
  name: ci-knative-docs-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-docs-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: docs
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 1 * * *"
  name: ci-knative-docs-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-docs-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: docs
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "11 7 * * *"
  name: ci-knative-docs-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-docs-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: docs
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "52 */2 * * *"
  name: ci-knative-eventing-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "8 8,11,22 * * *"
  name: ci-knative-eventing-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "59 8 * * *"
  name: ci-knative-eventing-0.11-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-0.11-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: release-0.11
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "47 8,11 * * *"
  name: ci-knative-eventing-0.11-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-0.11-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: release-0.11
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "36 8 * * *"
  name: ci-knative-eventing-0.12-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-0.12-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: release-0.12
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "8 8,11 * * *"
  name: ci-knative-eventing-0.12-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-0.12-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: release-0.12
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "37 8 * * *"
  name: ci-knative-eventing-0.13-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-0.13-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: release-0.13
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "53 8,11 * * *"
  name: ci-knative-eventing-0.13-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-0.13-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: release-0.13
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "14 8 * * *"
  name: ci-knative-eventing-0.14-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-0.14-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: release-0.14
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "30 8,11 * * *"
  name: ci-knative-eventing-0.14-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-0.14-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: release-0.14
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "12 9 * * *"
  name: ci-knative-eventing-nightly-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-nightly-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "39 9 * * 2"
  name: ci-knative-eventing-0.11-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-0.11-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: release-0.11
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.11"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "10 9 * * 2"
  name: ci-knative-eventing-0.12-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-0.12-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: release-0.12
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.12"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "41 9 * * 2"
  name: ci-knative-eventing-0.13-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-0.13-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: release-0.13
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.13"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "36 9 * * 2"
  name: ci-knative-eventing-0.14-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-0.14-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: release-0.14
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.14"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "52 */2 * * *"
  name: ci-knative-eventing-auto-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-auto-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-eventing-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-eventing-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "56 7 * * *"
  name: ci-knative-eventing-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-eventing-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "36 * * * *"
  name: ci-knative-eventing-contrib-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: master
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "52 8,11,22 * * *"
  name: ci-knative-eventing-contrib-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: master
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "39 8 * * *"
  name: ci-knative-eventing-contrib-0.11-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-0.11-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: release-0.11
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "59 8,11 * * *"
  name: ci-knative-eventing-contrib-0.11-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-0.11-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: release-0.11
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "16 8 * * *"
  name: ci-knative-eventing-contrib-0.12-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-0.12-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: release-0.12
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "4 8,11 * * *"
  name: ci-knative-eventing-contrib-0.12-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-0.12-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: release-0.12
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "17 8 * * *"
  name: ci-knative-eventing-contrib-0.13-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-0.13-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: release-0.13
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "49 8,11 * * *"
  name: ci-knative-eventing-contrib-0.13-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-0.13-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: release-0.13
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "54 8 * * *"
  name: ci-knative-eventing-contrib-0.14-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-0.14-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: release-0.14
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "42 8,11 * * *"
  name: ci-knative-eventing-contrib-0.14-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-0.14-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: release-0.14
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "40 9 * * *"
  name: ci-knative-eventing-contrib-nightly-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-nightly-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: master
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "51 9 * * 2"
  name: ci-knative-eventing-contrib-0.11-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-0.11-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: release-0.11
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-contrib"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.11"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "54 9 * * 2"
  name: ci-knative-eventing-contrib-0.12-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-0.12-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: release-0.12
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-contrib"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.12"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "53 9 * * 2"
  name: ci-knative-eventing-contrib-0.13-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-0.13-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: release-0.13
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-contrib"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.13"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "36 9 * * 2"
  name: ci-knative-eventing-contrib-0.14-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-0.14-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: release-0.14
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-contrib"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.14"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "32 */2 * * *"
  name: ci-knative-eventing-contrib-auto-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-auto-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: master
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-contrib"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      resources:
        requests:
          memory: 12Gi
        limits:
          memory: 16Gi
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-eventing-contrib-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: master
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "56 7 * * *"
  name: ci-knative-eventing-contrib-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: master
    path_alias: knative.dev/eventing-contrib
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "2 * * * *"
  name: ci-knative-pkg-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-pkg-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: pkg
    base_ref: master
    path_alias: knative.dev/pkg
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "18 8,11,22 * * *"
  name: ci-knative-pkg-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-pkg-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: pkg
    base_ref: master
    path_alias: knative.dev/pkg
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 1 * * *"
  name: ci-knative-pkg-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-pkg-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: pkg
    base_ref: master
    path_alias: knative.dev/pkg
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "38 7 * * *"
  name: ci-knative-pkg-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-pkg-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: pkg
    base_ref: master
    path_alias: knative.dev/pkg
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "47 * * * *"
  name: ci-knative-caching-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-caching-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: caching
    base_ref: master
    path_alias: knative.dev/caching
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "43 8,11,22 * * *"
  name: ci-knative-caching-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-caching-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: caching
    base_ref: master
    path_alias: knative.dev/caching
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 1 * * *"
  name: ci-knative-caching-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-caching-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: caching
    base_ref: master
    path_alias: knative.dev/caching
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "45 7 * * *"
  name: ci-knative-caching-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-caching-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: caching
    base_ref: master
    path_alias: knative.dev/caching
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "43 * * * *"
  name: ci-knative-sample-controller-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-sample-controller-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: sample-controller
    base_ref: master
    path_alias: knative.dev/sample-controller
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "31 8,11,22 * * *"
  name: ci-knative-sample-controller-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-sample-controller-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: sample-controller
    base_ref: master
    path_alias: knative.dev/sample-controller
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "16 * * * *"
  name: ci-knative-sample-source-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-sample-source-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: sample-source
    base_ref: master
    path_alias: knative.dev/sample-source
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "56 8,11,22 * * *"
  name: ci-knative-sample-source-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-sample-source-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: sample-source
    base_ref: master
    path_alias: knative.dev/sample-source
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "49 * * * *"
  name: ci-knative-test-infra-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-test-infra-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
    path_alias: knative.dev/test-infra
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "57 8,11,22 * * *"
  name: ci-knative-test-infra-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-test-infra-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
    path_alias: knative.dev/test-infra
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 1 * * *"
  name: ci-knative-test-infra-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-test-infra-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
    path_alias: knative.dev/test-infra
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "43 7 * * *"
  name: ci-knative-test-infra-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-test-infra-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
    path_alias: knative.dev/test-infra
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "33 * * * *"
  name: ci-knative-serving-operator-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: master
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "25 8,11,22 * * *"
  name: ci-knative-serving-operator-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: master
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "4 8 * * *"
  name: ci-knative-serving-operator-0.11-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-0.11-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: release-0.11
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "16 8,11 * * *"
  name: ci-knative-serving-operator-0.11-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-0.11-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: release-0.11
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "55 8 * * *"
  name: ci-knative-serving-operator-0.12-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-0.12-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: release-0.12
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "3 8,11 * * *"
  name: ci-knative-serving-operator-0.12-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-0.12-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: release-0.12
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "54 8 * * *"
  name: ci-knative-serving-operator-0.13-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-0.13-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: release-0.13
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "50 8,11 * * *"
  name: ci-knative-serving-operator-0.13-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-0.13-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: release-0.13
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "13 8 * * *"
  name: ci-knative-serving-operator-0.14-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-0.14-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: release-0.14
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "45 8,11 * * *"
  name: ci-knative-serving-operator-0.14-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-0.14-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: release-0.14
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "35 9 * * *"
  name: ci-knative-serving-operator-nightly-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-nightly-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: master
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "30 19 * * 2"
  name: ci-knative-serving-operator-0.11-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-0.11-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: release-0.11
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/serving-operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.11"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "35 19 * * 2"
  name: ci-knative-serving-operator-0.12-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-0.12-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: release-0.12
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/serving-operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.12"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "24 19 * * 2"
  name: ci-knative-serving-operator-0.13-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-0.13-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: release-0.13
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/serving-operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.13"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "25 19 * * 2"
  name: ci-knative-serving-operator-0.14-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-0.14-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: release-0.14
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/serving-operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.14"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "5 */2 * * *"
  name: ci-knative-serving-operator-auto-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-operator-auto-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: master
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/serving-operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-serving-operator-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-serving-operator-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: master
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "31 7 * * *"
  name: ci-knative-serving-operator-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-serving-operator-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: master
    path_alias: knative.dev/serving-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "25 * * * *"
  name: ci-knative-eventing-operator-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: master
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "37 8,11,22 * * *"
  name: ci-knative-eventing-operator-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: master
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "16 8 * * *"
  name: ci-knative-eventing-operator-0.11-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-0.11-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: release-0.11
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "16 8,11 * * *"
  name: ci-knative-eventing-operator-0.11-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-0.11-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: release-0.11
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "51 8 * * *"
  name: ci-knative-eventing-operator-0.12-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-0.12-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: release-0.12
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "43 8,11 * * *"
  name: ci-knative-eventing-operator-0.12-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-0.12-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: release-0.12
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "58 8 * * *"
  name: ci-knative-eventing-operator-0.13-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-0.13-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: release-0.13
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "30 8,11 * * *"
  name: ci-knative-eventing-operator-0.13-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-0.13-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: release-0.13
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "1 8 * * *"
  name: ci-knative-eventing-operator-0.14-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-0.14-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: release-0.14
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "37 8,11 * * *"
  name: ci-knative-eventing-operator-0.14-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-0.14-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: release-0.14
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "7 9 * * *"
  name: ci-knative-eventing-operator-nightly-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-nightly-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: master
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "6 19 * * 2"
  name: ci-knative-eventing-operator-0.11-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-0.11-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: release-0.11
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.11"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.11
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "43 19 * * 2"
  name: ci-knative-eventing-operator-0.12-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-0.12-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: release-0.12
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.12"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "52 19 * * 2"
  name: ci-knative-eventing-operator-0.13-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-0.13-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: release-0.13
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.13"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "25 19 * * 2"
  name: ci-knative-eventing-operator-0.14-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-0.14-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: release-0.14
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.14"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "1 */2 * * *"
  name: ci-knative-eventing-operator-auto-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-auto-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: master
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-eventing-operator-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: master
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "23 7 * * *"
  name: ci-knative-eventing-operator-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-eventing-operator-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing-operator
    base_ref: master
    path_alias: knative.dev/eventing-operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "18 * * * *"
  name: ci-google-knative-gcp-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "14 8,11,22 * * *"
  name: ci-google-knative-gcp-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "50 8 * * *"
  name: ci-google-knative-gcp-0.12-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-0.12-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.12
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "10 8,11 * * *"
  name: ci-google-knative-gcp-0.12-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-0.12-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.12
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "59 8 * * *"
  name: ci-google-knative-gcp-0.13-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-0.13-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.13
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "35 8,11 * * *"
  name: ci-google-knative-gcp-0.13-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-0.13-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.13
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "28 8 * * *"
  name: ci-google-knative-gcp-0.14-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-0.14-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.14
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "36 8,11 * * *"
  name: ci-google-knative-gcp-0.14-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-0.14-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.14
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "34 9 * * *"
  name: ci-google-knative-gcp-nightly-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-nightly-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "20 9 * * 2"
  name: ci-google-knative-gcp-0.12-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-0.12-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.12
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/knative-gcp"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.12"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: google
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.12
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "47 9 * * 2"
  name: ci-google-knative-gcp-0.13-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-0.13-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.13
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/knative-gcp"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.13"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: google
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.13
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "10 9 * * 2"
  name: ci-google-knative-gcp-0.14-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-0.14-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: release-0.14
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/knative-gcp"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      - "--branch release-0.14"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: google
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.14
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "42 */2 * * *"
  name: ci-google-knative-gcp-auto-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-auto-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/knative-gcp"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: google
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-google-knative-gcp-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-google-knative-gcp-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "18 7 * * *"
  name: ci-google-knative-gcp-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-google-knative-gcp-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "17 * * * *"
  name: ci-knative-net-certmanager-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-certmanager-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-certmanager
    base_ref: master
    path_alias: knative.dev/net-certmanager
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "41 8,11,22 * * *"
  name: ci-knative-net-certmanager-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-certmanager-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-certmanager
    base_ref: master
    path_alias: knative.dev/net-certmanager
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "27 9 * * *"
  name: ci-knative-net-certmanager-nightly-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-certmanager-nightly-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-certmanager
    base_ref: master
    path_alias: knative.dev/net-certmanager
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "27 9 * * 2"
  name: ci-knative-net-certmanager-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-certmanager-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-certmanager
    base_ref: master
    path_alias: knative.dev/net-certmanager
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/net-certmanager"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "9 */2 * * *"
  name: ci-knative-net-certmanager-auto-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-certmanager-auto-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-certmanager
    base_ref: master
    path_alias: knative.dev/net-certmanager
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/net-certmanager"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-net-certmanager-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-net-certmanager-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-certmanager
    base_ref: master
    path_alias: knative.dev/net-certmanager
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "31 7 * * *"
  name: ci-knative-net-certmanager-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-net-certmanager-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-certmanager
    base_ref: master
    path_alias: knative.dev/net-certmanager
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "8 * * * *"
  name: ci-knative-net-contour-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-contour-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-contour
    base_ref: master
    path_alias: knative.dev/net-contour
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "4 8,11,22 * * *"
  name: ci-knative-net-contour-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-contour-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-contour
    base_ref: master
    path_alias: knative.dev/net-contour
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "52 9 * * *"
  name: ci-knative-net-contour-nightly-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-contour-nightly-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-contour
    base_ref: master
    path_alias: knative.dev/net-contour
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "16 9 * * 2"
  name: ci-knative-net-contour-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-contour-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-contour
    base_ref: master
    path_alias: knative.dev/net-contour
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/net-contour"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "4 */2 * * *"
  name: ci-knative-net-contour-auto-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-contour-auto-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-contour
    base_ref: master
    path_alias: knative.dev/net-contour
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/net-contour"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-net-contour-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-net-contour-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-contour
    base_ref: master
    path_alias: knative.dev/net-contour
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "40 7 * * *"
  name: ci-knative-net-contour-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-net-contour-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-contour
    base_ref: master
    path_alias: knative.dev/net-contour
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "31 * * * *"
  name: ci-knative-net-http01-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-http01-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-http01
    base_ref: master
    path_alias: knative.dev/net-http01
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "7 8,11,22 * * *"
  name: ci-knative-net-http01-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-http01-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-http01
    base_ref: master
    path_alias: knative.dev/net-http01
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "29 9 * * *"
  name: ci-knative-net-http01-nightly-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-http01-nightly-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-http01
    base_ref: master
    path_alias: knative.dev/net-http01
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "13 9 * * 2"
  name: ci-knative-net-http01-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-http01-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-http01
    base_ref: master
    path_alias: knative.dev/net-http01
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/net-http01"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "7 */2 * * *"
  name: ci-knative-net-http01-auto-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-http01-auto-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-http01
    base_ref: master
    path_alias: knative.dev/net-http01
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/net-http01"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-net-http01-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-net-http01-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-http01
    base_ref: master
    path_alias: knative.dev/net-http01
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "45 7 * * *"
  name: ci-knative-net-http01-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-net-http01-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-http01
    base_ref: master
    path_alias: knative.dev/net-http01
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "18 * * * *"
  name: ci-knative-net-istio-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-istio-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-istio
    base_ref: master
    path_alias: knative.dev/net-istio
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "50 8,11,22 * * *"
  name: ci-knative-net-istio-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-istio-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-istio
    base_ref: master
    path_alias: knative.dev/net-istio
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "58 9 * * *"
  name: ci-knative-net-istio-nightly-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-istio-nightly-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-istio
    base_ref: master
    path_alias: knative.dev/net-istio
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "18 9 * * 2"
  name: ci-knative-net-istio-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-istio-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-istio
    base_ref: master
    path_alias: knative.dev/net-istio
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/net-istio"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "26 */2 * * *"
  name: ci-knative-net-istio-auto-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-istio-auto-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-istio
    base_ref: master
    path_alias: knative.dev/net-istio
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/net-istio"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-net-istio-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-net-istio-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-istio
    base_ref: master
    path_alias: knative.dev/net-istio
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "22 7 * * *"
  name: ci-knative-net-istio-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-net-istio-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-istio
    base_ref: master
    path_alias: knative.dev/net-istio
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "3 * * * *"
  name: ci-knative-net-kourier-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-kourier-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-kourier
    base_ref: master
    path_alias: knative.dev/net-kourier
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "15 8,11,22 * * *"
  name: ci-knative-net-kourier-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-kourier-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-kourier
    base_ref: master
    path_alias: knative.dev/net-kourier
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "49 9 * * *"
  name: ci-knative-net-kourier-nightly-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-kourier-nightly-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-kourier
    base_ref: master
    path_alias: knative.dev/net-kourier
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "37 9 * * 2"
  name: ci-knative-net-kourier-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-kourier-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-kourier
    base_ref: master
    path_alias: knative.dev/net-kourier
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/net-kourier"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "11 */2 * * *"
  name: ci-knative-net-kourier-auto-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-net-kourier-auto-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-kourier
    base_ref: master
    path_alias: knative.dev/net-kourier
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/net-kourier"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-net-kourier-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-net-kourier-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-kourier
    base_ref: master
    path_alias: knative.dev/net-kourier
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "5 7 * * *"
  name: ci-knative-net-kourier-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-net-kourier-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: net-kourier
    base_ref: master
    path_alias: knative.dev/net-kourier
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "0 * * * *"
  name: ci-knative-operator-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-operator-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    base_ref: master
    path_alias: knative.dev/operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "40 8,11,22 * * *"
  name: ci-knative-operator-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-operator-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    base_ref: master
    path_alias: knative.dev/operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "48 9 * * *"
  name: ci-knative-operator-nightly-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-operator-nightly-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    base_ref: master
    path_alias: knative.dev/operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "4 9 * * 2"
  name: ci-knative-operator-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-operator-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    base_ref: master
    path_alias: knative.dev/operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "32 */2 * * *"
  name: ci-knative-operator-auto-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-operator-auto-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    base_ref: master
    path_alias: knative.dev/operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: ORG_NAME
        value: knative-sandbox
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-operator-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-operator-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    base_ref: master
    path_alias: knative.dev/operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "40 7 * * *"
  name: ci-knative-operator-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-operator-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: operator
    base_ref: master
    path_alias: knative.dev/operator
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "31 * * * *"
  name: ci-knative-sandbox-eventing-kafka-continuous
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-sandbox-eventing-kafka-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka
    base_ref: master
    path_alias: knative.dev/eventing-kafka
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "15 8,11,22 * * *"
  name: ci-knative-sandbox-eventing-kafka-continuous-beta-prow-tests
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-sandbox-eventing-kafka-continuous
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka
    base_ref: master
    path_alias: knative.dev/eventing-kafka
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "37 9 * * *"
  name: ci-knative-sandbox-eventing-kafka-nightly-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-sandbox-eventing-kafka-nightly-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka
    base_ref: master
    path_alias: knative.dev/eventing-kafka
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "29 9 * * 2"
  name: ci-knative-sandbox-eventing-kafka-dot-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-sandbox-eventing-kafka-dot-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka
    base_ref: master
    path_alias: knative.dev/eventing-kafka
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-kafka"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      securityContext:
        privileged: true
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: docker-graph
        mountPath: /docker-graph
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: ORG_NAME
        value: knative-sandbox
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: docker-graph
      emptyDir: {}
    - name: release-account
      secret:
        secretName: release-account
- cron: "31 */2 * * *"
  name: ci-knative-sandbox-eventing-kafka-auto-release
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-sandbox-eventing-kafka-auto-release
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka
    base_ref: master
    path_alias: knative.dev/eventing-kafka
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-kafka"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      securityContext:
        privileged: true
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: docker-graph
        mountPath: /docker-graph
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: ORG_NAME
        value: knative-sandbox
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: docker-graph
      emptyDir: {}
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-sandbox-eventing-kafka-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-sandbox-eventing-kafka-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka
    base_ref: master
    path_alias: knative.dev/eventing-kafka
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "25 7 * * *"
  name: ci-knative-sandbox-eventing-kafka-go-coverage-beta-prow-tests
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-sandbox-eventing-kafka-go-coverage
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative-sandbox
    repo: eventing-kafka
    base_ref: master
    path_alias: knative.dev/eventing-kafka
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:beta
      imagePullPolicy: Always
      command:
      - "runner.sh"
      args:
      - "coverage"
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
      env:
      - name: GO_VERSION
        value: go1.14
- cron: "30 07 * * *"
  name: ci-knative-serving-recreate-clusters
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-recreate-clusters
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/performance/performance-tests.sh"
      - "--recreate-clusters"
      volumeMounts:
      - name: performance-test
        mountPath: /etc/performance-test
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/performance-test/service-account.json
      - name: GITHUB_TOKEN
        value: /etc/performance-test/github-token
      - name: SLACK_READ_TOKEN
        value: /etc/performance-test/slack-read-token
      - name: SLACK_WRITE_TOKEN
        value: /etc/performance-test/slack-write-token
    volumes:
    - name: performance-test
      secret:
        secretName: performance-test
- cron: "5 * * * *"
  name: ci-knative-serving-update-clusters
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-serving-update-clusters
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
    path_alias: knative.dev/serving
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/performance/performance-tests.sh"
      - "--update-clusters"
      volumeMounts:
      - name: performance-test
        mountPath: /etc/performance-test
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/performance-test/service-account.json
      - name: GITHUB_TOKEN
        value: /etc/performance-test/github-token
      - name: SLACK_READ_TOKEN
        value: /etc/performance-test/slack-read-token
      - name: SLACK_WRITE_TOKEN
        value: /etc/performance-test/slack-write-token
    volumes:
    - name: performance-test
      secret:
        secretName: performance-test
- cron: "30 07 * * *"
  name: ci-knative-eventing-recreate-clusters
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-recreate-clusters
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/performance/performance-tests.sh"
      - "--recreate-clusters"
      volumeMounts:
      - name: performance-test
        mountPath: /etc/performance-test
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/performance-test/service-account.json
      - name: GITHUB_TOKEN
        value: /etc/performance-test/github-token
      - name: SLACK_READ_TOKEN
        value: /etc/performance-test/slack-read-token
      - name: SLACK_WRITE_TOKEN
        value: /etc/performance-test/slack-write-token
    volumes:
    - name: performance-test
      secret:
        secretName: performance-test
- cron: "5 * * * *"
  name: ci-knative-eventing-update-clusters
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-knative-eventing-update-clusters
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
    path_alias: knative.dev/eventing
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/performance/performance-tests.sh"
      - "--update-clusters"
      volumeMounts:
      - name: performance-test
        mountPath: /etc/performance-test
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/performance-test/service-account.json
      - name: GITHUB_TOKEN
        value: /etc/performance-test/github-token
      - name: SLACK_READ_TOKEN
        value: /etc/performance-test/slack-read-token
      - name: SLACK_WRITE_TOKEN
        value: /etc/performance-test/slack-write-token
    volumes:
    - name: performance-test
      secret:
        secretName: performance-test
- cron: "30 07 * * *"
  name: ci-google-knative-gcp-recreate-clusters
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-recreate-clusters
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/performance/performance-tests.sh"
      - "--recreate-clusters"
      volumeMounts:
      - name: performance-test
        mountPath: /etc/performance-test
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/performance-test/service-account.json
      - name: GITHUB_TOKEN
        value: /etc/performance-test/github-token
      - name: SLACK_READ_TOKEN
        value: /etc/performance-test/slack-read-token
      - name: SLACK_WRITE_TOKEN
        value: /etc/performance-test/slack-write-token
    volumes:
    - name: performance-test
      secret:
        secretName: performance-test
- cron: "5 * * * *"
  name: ci-google-knative-gcp-update-clusters
  agent: kubernetes
  labels:
    prow.k8s.io/pubsub.project: knative-tests
    prow.k8s.io/pubsub.topic: knative-monitoring
    prow.k8s.io/pubsub.runID: ci-google-knative-gcp-update-clusters
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: google
    repo: knative-gcp
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/performance/performance-tests.sh"
      - "--update-clusters"
      volumeMounts:
      - name: performance-test
        mountPath: /etc/performance-test
        readOnly: true
      env:
      - name: GO_VERSION
        value: go1.14
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/performance-test/service-account.json
      - name: GITHUB_TOKEN
        value: /etc/performance-test/github-token
      - name: SLACK_READ_TOKEN
        value: /etc/performance-test/slack-read-token
      - name: SLACK_WRITE_TOKEN
        value: /etc/performance-test/slack-write-token
    volumes:
    - name: performance-test
      secret:
        secretName: performance-test
- cron: "0 */12 * * *"
  name: ci-knative-test-infra-issue-tracker-stale
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/k8s-prow/commenter:v20190731-e3f7b9853
      imagePullPolicy: Always
      command:
      - "/app/robots/commenter/app.binary"
      args:
      - "--query=repo:knative/test-infra
        is:open
        -label:lifecycle/frozen
        -label:lifecycle/stale
        -label:lifecycle/rotten"
      - "--updated=2160h"
      - "--token=/etc/housekeeping-github-token/token"
      - "--comment=Issues go stale after 90 days of inactivity.\nMark the issue as fresh by adding the comment `/remove-lifecycle stale`.\nStale issues rot after an additional 30 days of inactivity and eventually close.\nIf this issue is safe to close now please do so by adding the comment `/close`.\n\nSend feedback to [Knative Productivity Slack channel](https://knative.slack.com/messages/CCSNR4FCH) or file an issue in [knative/test-infra](https://github.com/knative/test-infra/issues/new).\n\n/lifecycle stale"
      - "--template"
      - "--ceiling=10"
      - "--confirm"
      volumeMounts:
      - name: housekeeping-github-token
        mountPath: /etc/housekeeping-github-token
        readOnly: true
    volumes:
    - name: housekeeping-github-token
      secret:
        secretName: housekeeping-github-token
- cron: "0 */12 * * *"
  name: ci-knative-test-infra-issue-tracker-rotten
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/k8s-prow/commenter:v20190731-e3f7b9853
      imagePullPolicy: Always
      command:
      - "/app/robots/commenter/app.binary"
      args:
      - "--query=repo:knative/test-infra
        is:open
        -label:lifecycle/frozen
        label:lifecycle/stale
        -label:lifecycle/rotten"
      - "--updated=720h"
      - "--token=/etc/housekeeping-github-token/token"
      - "--comment=Stale issues rot after 30 days of inactivity.\nMark the issue as fresh by adding the comment `/remove-lifecycle rotten`.\nRotten issues close after an additional 30 days of inactivity.\nIf this issue is safe to close now please do so by adding the comment `/close`.\n\nSend feedback to [Knative Productivity Slack channel](https://knative.slack.com/messages/CCSNR4FCH) or file an issue in [knative/test-infra](https://github.com/knative/test-infra/issues/new).\n\n/lifecycle rotten"
      - "--template"
      - "--ceiling=10"
      - "--confirm"
      volumeMounts:
      - name: housekeeping-github-token
        mountPath: /etc/housekeeping-github-token
        readOnly: true
    volumes:
    - name: housekeeping-github-token
      secret:
        secretName: housekeeping-github-token
- cron: "0 */12 * * *"
  name: ci-knative-test-infra-issue-tracker-close
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/k8s-prow/commenter:v20190731-e3f7b9853
      imagePullPolicy: Always
      command:
      - "/app/robots/commenter/app.binary"
      args:
      - "--query=repo:knative/test-infra
        is:open
        -label:lifecycle/frozen
        -label:lifecycle/stale
        label:lifecycle/rotten"
      - "--updated=720h"
      - "--token=/etc/housekeeping-github-token/token"
      - "--comment=Rotten issues close after 30 days of inactivity.\nReopen the issue with `/reopen`.\nMark the issue as fresh by adding the comment `/remove-lifecycle rotten`.\n\nSend feedback to [Knative Productivity Slack channel](https://knative.slack.com/messages/CCSNR4FCH) or file an issue in [knative/test-infra](https://github.com/knative/test-infra/issues/new).\n\n/close"
      - "--template"
      - "--ceiling=10"
      - "--confirm"
      volumeMounts:
      - name: housekeeping-github-token
        mountPath: /etc/housekeeping-github-token
        readOnly: true
    volumes:
    - name: housekeeping-github-token
      secret:
        secretName: housekeeping-github-token
- cron: "0 */12 * * *"
  name: ci-knative-docs-issue-tracker-stale
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/k8s-prow/commenter:v20190731-e3f7b9853
      imagePullPolicy: Always
      command:
      - "/app/robots/commenter/app.binary"
      args:
      - "--query=repo:knative/docs
        is:open
        -label:lifecycle/frozen
        -label:lifecycle/stale
        -label:lifecycle/rotten"
      - "--updated=2160h"
      - "--token=/etc/housekeeping-github-token/token"
      - "--comment=Issues go stale after 90 days of inactivity.\nMark the issue as fresh by adding the comment `/remove-lifecycle stale`.\nStale issues rot after an additional 30 days of inactivity and eventually close.\nIf this issue is safe to close now please do so by adding the comment `/close`.\n\nSend feedback to [Knative Productivity Slack channel](https://knative.slack.com/messages/CCSNR4FCH) or file an issue in [knative/test-infra](https://github.com/knative/test-infra/issues/new).\n\n/lifecycle stale"
      - "--template"
      - "--ceiling=10"
      - "--confirm"
      volumeMounts:
      - name: housekeeping-github-token
        mountPath: /etc/housekeeping-github-token
        readOnly: true
    volumes:
    - name: housekeeping-github-token
      secret:
        secretName: housekeeping-github-token
- cron: "0 */12 * * *"
  name: ci-knative-docs-issue-tracker-rotten
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/k8s-prow/commenter:v20190731-e3f7b9853
      imagePullPolicy: Always
      command:
      - "/app/robots/commenter/app.binary"
      args:
      - "--query=repo:knative/docs
        is:open
        -label:lifecycle/frozen
        label:lifecycle/stale
        -label:lifecycle/rotten"
      - "--updated=720h"
      - "--token=/etc/housekeeping-github-token/token"
      - "--comment=Stale issues rot after 30 days of inactivity.\nMark the issue as fresh by adding the comment `/remove-lifecycle rotten`.\nRotten issues close after an additional 30 days of inactivity.\nIf this issue is safe to close now please do so by adding the comment `/close`.\n\nSend feedback to [Knative Productivity Slack channel](https://knative.slack.com/messages/CCSNR4FCH) or file an issue in [knative/test-infra](https://github.com/knative/test-infra/issues/new).\n\n/lifecycle rotten"
      - "--template"
      - "--ceiling=10"
      - "--confirm"
      volumeMounts:
      - name: housekeeping-github-token
        mountPath: /etc/housekeeping-github-token
        readOnly: true
    volumes:
    - name: housekeeping-github-token
      secret:
        secretName: housekeeping-github-token
- cron: "0 */12 * * *"
  name: ci-knative-docs-issue-tracker-close
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/k8s-prow/commenter:v20190731-e3f7b9853
      imagePullPolicy: Always
      command:
      - "/app/robots/commenter/app.binary"
      args:
      - "--query=repo:knative/docs
        is:open
        -label:lifecycle/frozen
        -label:lifecycle/stale
        label:lifecycle/rotten"
      - "--updated=720h"
      - "--token=/etc/housekeeping-github-token/token"
      - "--comment=Rotten issues close after 30 days of inactivity.\nReopen the issue with `/reopen`.\nMark the issue as fresh by adding the comment `/remove-lifecycle rotten`.\n\nSend feedback to [Knative Productivity Slack channel](https://knative.slack.com/messages/CCSNR4FCH) or file an issue in [knative/test-infra](https://github.com/knative/test-infra/issues/new).\n\n/close"
      - "--template"
      - "--ceiling=10"
      - "--confirm"
      volumeMounts:
      - name: housekeeping-github-token
        mountPath: /etc/housekeeping-github-token
        readOnly: true
    volumes:
    - name: housekeeping-github-token
      secret:
        secretName: housekeeping-github-token
- cron: "0 */12 * * *"
  name: ci-knative-serving-issue-tracker-stale
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/k8s-prow/commenter:v20190731-e3f7b9853
      imagePullPolicy: Always
      command:
      - "/app/robots/commenter/app.binary"
      args:
      - "--query=repo:knative/serving
        is:open
        -label:lifecycle/frozen
        -label:lifecycle/stale
        -label:lifecycle/rotten"
      - "--updated=2160h"
      - "--token=/etc/housekeeping-github-token/token"
      - "--comment=Issues go stale after 90 days of inactivity.\nMark the issue as fresh by adding the comment `/remove-lifecycle stale`.\nStale issues rot after an additional 30 days of inactivity and eventually close.\nIf this issue is safe to close now please do so by adding the comment `/close`.\n\nSend feedback to [Knative Productivity Slack channel](https://knative.slack.com/messages/CCSNR4FCH) or file an issue in [knative/test-infra](https://github.com/knative/test-infra/issues/new).\n\n/lifecycle stale"
      - "--template"
      - "--ceiling=10"
      - "--confirm"
      volumeMounts:
      - name: housekeeping-github-token
        mountPath: /etc/housekeeping-github-token
        readOnly: true
    volumes:
    - name: housekeeping-github-token
      secret:
        secretName: housekeeping-github-token
- cron: "0 */12 * * *"
  name: ci-knative-serving-issue-tracker-rotten
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/k8s-prow/commenter:v20190731-e3f7b9853
      imagePullPolicy: Always
      command:
      - "/app/robots/commenter/app.binary"
      args:
      - "--query=repo:knative/serving
        is:open
        -label:lifecycle/frozen
        label:lifecycle/stale
        -label:lifecycle/rotten"
      - "--updated=720h"
      - "--token=/etc/housekeeping-github-token/token"
      - "--comment=Stale issues rot after 30 days of inactivity.\nMark the issue as fresh by adding the comment `/remove-lifecycle rotten`.\nRotten issues close after an additional 30 days of inactivity.\nIf this issue is safe to close now please do so by adding the comment `/close`.\n\nSend feedback to [Knative Productivity Slack channel](https://knative.slack.com/messages/CCSNR4FCH) or file an issue in [knative/test-infra](https://github.com/knative/test-infra/issues/new).\n\n/lifecycle rotten"
      - "--template"
      - "--ceiling=10"
      - "--confirm"
      volumeMounts:
      - name: housekeeping-github-token
        mountPath: /etc/housekeeping-github-token
        readOnly: true
    volumes:
    - name: housekeeping-github-token
      secret:
        secretName: housekeeping-github-token
- cron: "0 */12 * * *"
  name: ci-knative-serving-issue-tracker-close
  agent: kubernetes
  decorate: true
  cluster: "build-knative"
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/k8s-prow/commenter:v20190731-e3f7b9853
      imagePullPolicy: Always
      command:
      - "/app/robots/commenter/app.binary"
      args:
      - "--query=repo:knative/serving
        is:open
        -label:lifecycle/frozen
        -label:lifecycle/stale
        label:lifecycle/rotten"
      - "--updated=720h"
      - "--token=/etc/housekeeping-github-token/token"
      - "--comment=Rotten issues close after 30 days of inactivity.\nReopen the issue with `/reopen`.\nMark the issue as fresh by adding the comment `/remove-lifecycle rotten`.\n\nSend feedback to [Knative Productivity Slack channel](https://knative.slack.com/messages/CCSNR4FCH) or file an issue in [knative/test-infra](https://github.com/knative/test-infra/issues/new).\n\n/close"
      - "--template"
      - "--ceiling=10"
      - "--confirm"
      volumeMounts:
      - name: housekeeping-github-token
        mountPath: /etc/housekeeping-github-token
        readOnly: true
    volumes:
    - name: housekeeping-github-token
      secret:
        secretName: housekeeping-github-token
postsubmits:
  knative/serving:
  - name: post-knative-serving-reconcile-clusters
    branches:
    - master
    agent: kubernetes
    decorate: true
    max_concurrency: 1
    cluster: "build-knative"
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: post-knative-serving-reconcile-clusters
    path_alias: knative.dev/serving
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/performance/performance-tests.sh"
        - "--reconcile-benchmark-clusters"
        volumeMounts:
        - name: performance-test
          mountPath: /etc/performance-test
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/performance-test/service-account.json
        - name: GITHUB_TOKEN
          value: /etc/performance-test/github-token
        - name: SLACK_READ_TOKEN
          value: /etc/performance-test/slack-read-token
        - name: SLACK_WRITE_TOKEN
          value: /etc/performance-test/slack-write-token
      volumes:
      - name: performance-test
        secret:
          secretName: performance-test
  - name: post-knative-serving-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/serving
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  - name: post-knative-serving-go-coverage-dev
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/serving
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:coverage-dev
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  knative/client:
  - name: post-knative-client-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/client
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  knative/eventing:
  - name: post-knative-eventing-reconcile-clusters
    branches:
    - master
    agent: kubernetes
    decorate: true
    max_concurrency: 1
    cluster: "build-knative"
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: post-knative-eventing-reconcile-clusters
    path_alias: knative.dev/eventing
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/performance/performance-tests.sh"
        - "--reconcile-benchmark-clusters"
        volumeMounts:
        - name: performance-test
          mountPath: /etc/performance-test
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/performance-test/service-account.json
        - name: GITHUB_TOKEN
          value: /etc/performance-test/github-token
        - name: SLACK_READ_TOKEN
          value: /etc/performance-test/slack-read-token
        - name: SLACK_WRITE_TOKEN
          value: /etc/performance-test/slack-write-token
      volumes:
      - name: performance-test
        secret:
          secretName: performance-test
  - name: post-knative-eventing-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/eventing
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  knative/eventing-contrib:
  - name: post-knative-eventing-contrib-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/eventing-contrib
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  knative/docs:
  - name: post-knative-docs-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative/pkg:
  - name: post-knative-pkg-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/pkg
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  knative/test-infra:
  - name: post-knative-test-infra-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/test-infra
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  knative/caching:
  - name: post-knative-caching-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/caching
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  google/knative-gcp:
  - name: post-google-knative-gcp-reconcile-clusters
    branches:
    - master
    agent: kubernetes
    decorate: true
    max_concurrency: 1
    cluster: "build-knative"
    labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: post-google-knative-gcp-reconcile-clusters
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/performance/performance-tests.sh"
        - "--reconcile-benchmark-clusters"
        volumeMounts:
        - name: performance-test
          mountPath: /etc/performance-test
          readOnly: true
        env:
        - name: GO_VERSION
          value: go1.14
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/performance-test/service-account.json
        - name: GITHUB_TOKEN
          value: /etc/performance-test/github-token
        - name: SLACK_READ_TOKEN
          value: /etc/performance-test/slack-read-token
        - name: SLACK_WRITE_TOKEN
          value: /etc/performance-test/slack-write-token
      volumes:
      - name: performance-test
        secret:
          secretName: performance-test
  - name: post-google-knative-gcp-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  knative/net-certmanager:
  - name: post-knative-net-certmanager-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/net-certmanager
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  knative/net-contour:
  - name: post-knative-net-contour-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/net-contour
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  knative/net-http01:
  - name: post-knative-net-http01-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/net-http01
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  knative/net-istio:
  - name: post-knative-net-istio-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/net-istio
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  knative/net-kourier:
  - name: post-knative-net-kourier-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/net-kourier
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  knative/serving-operator:
  - name: post-knative-serving-operator-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/serving-operator
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  knative/eventing-operator:
  - name: post-knative-eventing-operator-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/eventing-operator
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  knative/operator:
  - name: post-knative-operator-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/operator
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
  knative-sandbox/eventing-kafka:
  - name: post-knative-sandbox-eventing-kafka-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    cluster: "build-knative"
    path_alias: knative.dev/eventing-kafka
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
        env:
        - name: GO_VERSION
          value: go1.14
