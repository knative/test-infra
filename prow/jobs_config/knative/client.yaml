org: knative
repo: client
branches: [main]
image: gcr.io/knative-tests/test-infra/prow-tests:v20230327-f3a12f59
cluster: prow-build

jobs:
  - name: build-tests
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-tests.sh, --build-tests]
    excluded_requirements: [gcp]

  - name: unit-tests
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-tests.sh, --unit-tests]
    excluded_requirements: [gcp]

  - name: integration-tests
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-tests.sh, --integration-tests]

  - name: integration-tests-latest-release
    types: [presubmit]
    command: [runner.sh, ./test/presubmit-integration-tests-latest-release.sh]

  - name: continuous
    types: [periodic]
    command: [runner.sh, ./test/presubmit-tests.sh, --all-tests]

  - name: tekton
    types: [periodic]
    command: [runner.sh, ./test/tekton-tests.sh]

  - name: s390x-e2e-tests
    cron: 20 1 * * *
    types: [periodic]
    requirements: [s390x]
    command: [runner.sh]
    args:
      - bash
      - -c
      - |
        mkdir -p /root/.kube
        cat /opt/cluster/ci-script > connect.sh
        chmod +x connect.sh
        ./connect.sh client-main
        kubectl get cm s390x-config-client -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh
        chmod +x adjust.sh
        ./adjust.sh
        ./test/e2e-tests.sh --run-tests
    env:
      - name: INGRESS_CLASS
        value: contour.ingress.networking.knative.dev

  - name: ppc64le-e2e-tests
    cron: 0 9 * * *
    types: [periodic]
    requirements: [ppc64le]
    command: [runner.sh]
    args:
      - bash
      - -c
      - |
        cat /opt/cluster/ci-script > /tmp/connect.sh
        chmod +x /tmp/connect.sh
        . /tmp/connect.sh ${CI_JOB}
        ./test/e2e-tests.sh --run-tests
    env:
      - name: INGRESS_CLASS
        value: contour.ingress.networking.knative.dev
      - name: CI_JOB
        value: "client-main"

  - name: nightly
    types: [periodic]
    command: [runner.sh, ./hack/release.sh, --publish, --tag-release,
      --apple-codesign-key, /etc/notary/cert.p12,
      --apple-notary-api-key, /etc/notary/key.json,
      --apple-codesign-password-file, /etc/notary/password]
    requirements: [nightly-notary]
    excluded_requirements: [gcp]
    max_concurrency: 1
    reporter_config:
      slack:
        channel: knative-client
        report_template: |
          "The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"
        job_states_to_report:
        - "failure"
  - name: release
    types: [periodic]
    command: [runner.sh, ./hack/release.sh, --auto-release, --release-gcs, knative-releases/client, --release-gcr, gcr.io/knative-releases, --github-token, /etc/hub-token/token,
      --apple-codesign-key, /etc/notary/cert.p12,
      --apple-notary-api-key, /etc/notary/key.json,
      --apple-codesign-password-file, /etc/notary/password]
    requirements: [release-notary]
    excluded_requirements: [gcp]
    max_concurrency: 1
