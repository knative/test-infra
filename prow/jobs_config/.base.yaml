autogen_header: |
  # #######################################################################
  # ####                                                               ####
  # ####      THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.       ####
  # ####   USE "./hack/generate-configs.sh" TO REGENERATE THIS FILE.   ####
  # ####                                                               ####
  # #######################################################################

path_aliases:
  knative: knative.dev
  knative-sandbox: knative.dev

node_selector:
  type: testing

cluster: "build-knative"

requirements: [gcp]
requirement_presets:
  nightly:
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
    volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
    volumes:
      - name: nightly-account
        secret:
          secretName: nightly-account

  release:
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
    volumes:
      - name: hub-token
        secret:
          secretName: hub-token
      - name: release-account
        secret:
          secretName: release-account

  docker:
    env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
    volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: modules
        mountPath: /lib/modules
      - name: cgroup
        mountPath: /sys/fs/cgroup
    volumes:
      - name: docker-graph
        emptyDir: {}
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

  gcp:
    env:
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
    volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
    volumes:
      - name: test-account
        secret:
          secretName: test-account

  s390x:
    env:
      - name: KO_FLAGS
        value: "--platform=linux/s390x"
      - name: PLATFORM
        value: "linux/s390x"
      - name: KO_DOCKER_REPO
        valueFrom:
          secretKeyRef:
            name: s390x-cluster1
            key: ko-docker-repo
      - name: DISABLE_MD_LINTING
        value: "1"
      - name: KUBECONFIG
        value: /root/.kube/config
      - name: DOCKER_CONFIG
        value: /opt/cluster
    volumeMounts:
      - name: s390x-cluster1
        mountPath: /opt/cluster
        readOnly: true
    volumes:
      - name: s390x-cluster1
        secret:
          secretName: s390x-cluster1
          defaultMode: 0600
