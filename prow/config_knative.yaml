presubmits:
  knative/serving:
  - repo-settings: null
  - build-tests: true
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - unit-tests: true
    needs-monitor: true
  - integration-tests: false
  - custom-test: upgrade-tests
    needs-monitor: true
    args:
    - --run-test
    - ./test/e2e-upgrade-tests.sh
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - go-coverage: false
  - custom-test: performance-tests-kperf
    needs-monitor: true
    always-run: false
    optional: true
    args:
    - --run-test
    - ./test/performance/performance-tests.sh
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - custom-test: istio-latest-mesh
    needs-monitor: true
    always-run: false
    optional: true
    args:
    - --run-test
    - ./test/e2e-tests.sh --istio-version latest --mesh
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - custom-test: istio-latest-mesh-short
    needs-monitor: true
    always-run: false
    optional: true
    args:
    - --run-test
    - ./test/e2e-tests.sh --istio-version latest --mesh --short
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - custom-test: istio-latest-mesh-tls
    needs-monitor: true
    always-run: false
    optional: true
    args:
    - --run-test
    - ./test/e2e-auto-tls-tests.sh --istio-version latest --mesh
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - custom-test: istio-latest-no-mesh
    needs-monitor: true
    always-run: true
    optional: false
    args:
    - --run-test
    - ./test/e2e-tests.sh --istio-version latest --no-mesh
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - custom-test: istio-latest-no-mesh-tls
    needs-monitor: true
    always-run: true
    optional: false
    args:
    - --run-test
    - ./test/e2e-auto-tls-tests.sh --istio-version latest --no-mesh
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - custom-test: kourier-stable
    needs-monitor: true
    always-run: false
    run-if-changed: ^third_party/kourier-latest/*
    optional: false
    args:
    - --run-test
    - ./test/e2e-tests.sh --kourier-version stable
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - custom-test: kourier-stable-tls
    needs-monitor: true
    always-run: false
    run-if-changed: ^third_party/kourier-latest/*
    optional: false
    args:
    - --run-test
    - ./test/e2e-auto-tls-tests.sh --kourier-version stable
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - custom-test: contour-latest
    needs-monitor: true
    always-run: false
    run-if-changed: ^third_party/contour-latest/*
    args:
    - --run-test
    - ./test/e2e-tests.sh --contour-version latest
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - custom-test: contour-tls
    needs-monitor: true
    always-run: false
    run-if-changed: ^third_party/contour-latest/*
    args:
    - --run-test
    - ./test/e2e-auto-tls-tests.sh --contour-version latest
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - custom-test: gateway-api-latest
    needs-monitor: true
    always-run: false
    run-if-changed: ^third_party/gateway-api-latest/*
    args:
    - --run-test
    - ./test/e2e-tests.sh --gateway-api-version latest
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - custom-test: https
    always-run: false
    run-if-changed: ^third_party/cert-manager-latest/*
    optional: true
    args:
    - --run-test
    - ./test/e2e-tests.sh --https
    - --run-test
    - ./test/e2e-auto-tls-tests.sh --https
  knative/client:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: false
  - custom-test: integration-tests-latest-release
    always-run: true
    command:
    - ./test/presubmit-integration-tests-latest-release.sh
  knative/client-pkg:
  - build-tests: true
  - unit-tests: true
  - go-coverage: false
  knative/client-contrib:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  knative-sandbox/reconciler-test:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  knative-sandbox/kn-plugin-diag:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  knative-sandbox/kn-plugin-event:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  knative-sandbox/kn-plugin-migration:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  knative-sandbox/kn-plugin-operator:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  knative-sandbox/kn-plugin-sample:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  knative-sandbox/kn-plugin-service-log:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  knative-sandbox/kn-plugin-source-kafka:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: false
  knative-sandbox/kn-plugin-source-kamelet:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  knative-sandbox/kn-plugin-admin:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: false
  knative-sandbox/kn-plugin-quickstart:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: false
  knative/eventing:
  - repo-settings: null
  - build-tests: true
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - unit-tests: true
  - integration-tests: true
    needs-monitor: true
    args:
    - --run-test
    - ./test/e2e-tests.sh
  - custom-test: reconciler-tests
    needs-monitor: true
    optional: true
    args:
    - --run-test
    - ./test/e2e-rekt-tests.sh
  - custom-test: conformance-tests
    needs-monitor: true
    args:
    - --run-test
    - ./test/e2e-conformance-tests.sh
  - custom-test: upgrade-tests
    needs-monitor: true
    args:
    - --run-test
    - ./test/e2e-upgrade-tests.sh
  - go-coverage: true
  knative/docs:
  - build-tests: true
  - unit-tests: true
  - go-coverage: true
  knative/pkg:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: false
  knative/test-infra:
  - build-tests: true
  - unit-tests: true
  - go-coverage: true
  knative/hack:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
    args:
    - --run-test
    - ./test/e2e-tests.sh
  - custom-test: kind-tests
    always-run: true
    needs-dind: true
    args:
    - --run-test
    - ./test/e2e-kind.sh
  knative/caching:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: false
  knative-sandbox/sample-controller:
  - build-tests: true
  - unit-tests: true
  knative-sandbox/sample-source:
  - build-tests: true
  - unit-tests: true
  google/knative-gcp:
  - repo-settings: null
  - build-tests: true
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - unit-tests: true
  - integration-tests: true
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
    needs-monitor: true
    args:
    - --run-test
    - ./test/e2e-tests.sh
    env-vars:
    - ENABLE_AUTH_CHECK_TEST="true"
  - custom-test: wi-tests
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
    needs-monitor: true
    args:
    - --run-test
    - ./test/e2e-wi-tests.sh
    env-vars:
    - ENABLE_AUTH_CHECK_TEST="true"
  - custom-test: upgrade-tests
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
    needs-monitor: true
    optional: false
    args:
    - --run-test
    - ./test/e2e-upgrade-tests.sh
  - custom-test: conformance-tests
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
    needs-monitor: true
    args:
    - --run-test
    - ./test/e2e-conformance-tests.sh
  - go-coverage: true
  knative/networking:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: false
  knative-sandbox/net-certmanager:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: true
  knative-sandbox/net-contour:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: false
  knative-sandbox/net-http01:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: false
  knative-sandbox/net-gateway-api:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: false
  knative-sandbox/net-istio:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: true
  - custom-test: latest
    optional: true
    args:
    - --run-test
    - ./test/e2e-tests.sh --istio-version latest
  - custom-test: latest-mesh
    optional: true
    args:
    - --run-test
    - ./test/e2e-tests.sh --istio-version latest --mesh
  knative-sandbox/net-kourier:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: true
  knative/website:
  - build-tests: false
  - unit-tests: false
  - integration-tests: false
  - go-coverage: false
  knative/community:
  - build-tests: false
  - unit-tests: false
  - integration-tests: false
  - go-coverage: false
  knative/specs:
  - build-tests: false
  - unit-tests: false
  - integration-tests: false
  - go-coverage: false
  knative/operator:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: false
  - custom-test: upgrade-tests
    args:
    - --run-test
    - ./test/e2e-upgrade-tests.sh
  - custom-test: serving-upgrade-tests
    args:
    - --run-test
    - ./test/e2e-serving-upgrade-tests.sh
  - custom-test: eventing-upgrade-tests
    args:
    - --run-test
    - ./test/e2e-eventing-upgrade-tests.sh
  knative-sandbox/async-component:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: true
  knative-sandbox/eventing-autoscaler-keda:
  - custom-test: integration-test-kafka-source
    args:
    - --run-test
    - ./test/e2e-tests.sh --kafka-source
    optional: true
  - custom-test: integration-test-kafka-mt-source
    args:
    - --run-test
    - ./test/e2e-tests.sh --kafka-mt-source
    optional: true
  - build-tests: false
  - unit-tests: false
  - integration-tests: false
  - go-coverage: false
  knative-sandbox/discovery:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  knative-sandbox/eventing-camel:
  - build-tests: false
  - unit-tests: false
  - integration-tests: false
  knative-sandbox/eventing-kafka:
  - custom-test: integration-test-channel-consolidated
    args:
    - --run-test
    - ./test/e2e-tests.sh --consolidated
  - custom-test: integration-test-channel-consolidated-tls
    args:
    - --run-test
    - ./test/e2e-tests.sh --consolidated-tls
  - custom-test: integration-test-channel-consolidated-sasl
    args:
    - --run-test
    - ./test/e2e-tests.sh --consolidated-sasl
  - custom-test: integration-test-channel-distributed
    args:
    - --run-test
    - ./test/e2e-tests.sh --distributed
  - custom-test: integration-test-mt-source
    args:
    - --run-test
    - ./test/e2e-tests.sh --mt-source
    optional: true
  - custom-test: upgrade-tests
    args:
    - --run-test
    - ./test/e2e-upgrade-tests.sh
  - integration-tests: false
  - build-tests: true
    needs-dind: true
  - unit-tests: true
    needs-dind: true
  - go-coverage: true
    needs-dind: true
  knative-sandbox/eventing-kafka-broker:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
    needs-dind: true
  - custom-test: upgrade-tests
    needs-dind: true
    args:
    - --run-test
    - ./test/upgrade-tests.sh
  - custom-test: reconciler-tests
    needs-dind: true
    args:
    - --run-test
    - ./test/reconciler-tests.sh
  - go-coverage: true
  - custom-test: channel-integration-tests-ssl
    needs-dind: true
    env-vars:
    - EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO="SSL"
    args:
    - --run-test
    - ./test/e2e-tests.sh
  - custom-test: channel-integration-tests-sasl-ssl
    needs-dind: true
    env-vars:
    - EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO="SASL_SSL"
    args:
    - --run-test
    - ./test/e2e-tests.sh
  - custom-test: channel-integration-tests-sasl-plain
    needs-dind: true
    env-vars:
    - EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO="SASL_PLAIN"
    args:
    - --run-test
    - ./test/e2e-tests.sh
  - custom-test: channel-reconciler-tests-ssl
    needs-dind: true
    env-vars:
    - EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO="SSL"
    args:
    - --run-test
    - ./test/reconciler-tests.sh
  - custom-test: channel-reconciler-tests-sasl-ssl
    needs-dind: true
    env-vars:
    - EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO="SASL_SSL"
    args:
    - --run-test
    - ./test/reconciler-tests.sh
  - custom-test: channel-reconciler-tests-sasl-plain
    needs-dind: true
    env-vars:
    - EVENTING_KAFKA_BROKER_CHANNEL_AUTH_SCENARIO="SASL_PLAIN"
    args:
    - --run-test
    - ./test/reconciler-tests.sh
  knative-sandbox/eventing-rabbitmq:
  - build-tests: false
  - unit-tests: false
  - integration-tests: false
  knative-sandbox/eventing-natss:
  - build-tests: false
  - unit-tests: false
  - integration-tests: false
  knative-sandbox/kperf:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  knative-sandbox/monitoring:
  - build-tests: false
  - unit-tests: false
  - integration-tests: false
  knative-sandbox/eventing-kogito:
  - build-tests: true
  - unit-tests: true
  - integration-tests: false
  knative-sandbox/container-freezer:
  - build-tests: true
  - unit-tests: true
  - integration-tests: true
  - go-coverage: false
periodics:
  knative/serving:
  - continuous: true
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - branch-ci: true
    release: "0.26"
  - branch-ci: true
    release: "1.0"
  - branch-ci: true
    release: "1.1"
  - branch-ci: true
    release: "1.2"
  - custom-job: istio-latest-mesh
    command:
    - ./test/presubmit-tests.sh
    args:
    - --run-test
    - ./test/e2e-tests.sh --istio-version latest --mesh
    - --run-test
    - ./test/e2e-auto-tls-tests.sh --istio-version latest --mesh
  - custom-job: istio-latest-no-mesh
    command:
    - ./test/presubmit-tests.sh
    args:
    - --run-test
    - ./test/e2e-tests.sh --istio-version latest --no-mesh
    - --run-test
    - ./test/e2e-auto-tls-tests.sh --istio-version latest --no-mesh --run-http01-auto-tls-tests
  - custom-job: istio-head-mesh
    command:
    - ./test/presubmit-tests.sh
    args:
    - --run-test
    - ./test/e2e-tests.sh --istio-version head --mesh
    - --run-test
    - ./test/e2e-auto-tls-tests.sh --istio-version head --mesh
  - custom-job: istio-head-no-mesh
    command:
    - ./test/presubmit-tests.sh
    args:
    - --run-test
    - ./test/e2e-tests.sh --istio-version head --no-mesh
    - --run-test
    - ./test/e2e-auto-tls-tests.sh --istio-version head --no-mesh
  - custom-job: kourier-stable
    command:
    - ./test/presubmit-tests.sh
    args:
    - --run-test
    - ./test/e2e-tests.sh --kourier-version stable
    - --run-test
    - ./test/e2e-auto-tls-tests.sh --kourier-version stable --run-http01-auto-tls-tests
  - custom-job: contour-latest
    command:
    - ./test/presubmit-tests.sh
    args:
    - --run-test
    - ./test/e2e-tests.sh --contour-version latest
    - --run-test
    - ./test/e2e-auto-tls-tests.sh --contour-version latest --run-http01-auto-tls-tests
  - custom-job: gateway-api-latest
    command:
    - ./test/presubmit-tests.sh
    args:
    - --run-test
    - ./test/e2e-tests.sh --gateway-api-version latest
  - custom-job: https
    command:
    - ./test/presubmit-tests.sh
    args:
    - --run-test
    - ./test/e2e-tests.sh --https
    - --run-test
    - ./test/e2e-auto-tls-tests.sh --https
  - custom-job: s390x-kourier-tests
    cron: 0 3 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh kourier-main && kubectl get cm s390x-config-serving -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && export TEST_OPTIONS=$TEST_OPTIONS' --ingressendpoint '${server_addr} && ./test/e2e-tests.sh --run-tests --kourier-version latest
    env-vars:
    - GO111MODULE="on"
    - TEST_OPTIONS="--enable-alpha --enable-beta --resolvabledomain=false"
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - SYSTEM_NAMESPACE="knative-serving"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-kourier-tests
    release: "1.0"
    cron: 10 7 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh kourier-10 && kubectl get cm s390x-config-serving -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && export TEST_OPTIONS=$TEST_OPTIONS' --ingressendpoint '${server_addr} && ./test/e2e-tests.sh --run-tests --kourier-version latest
    env-vars:
    - GO111MODULE="on"
    - TEST_OPTIONS="--enable-alpha --enable-beta --resolvabledomain=false"
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - SYSTEM_NAMESPACE="knative-serving"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-kourier-tests
    release: "1.1"
    cron: 20 11 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh kourier-11 && kubectl get cm s390x-config-serving -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && export TEST_OPTIONS=$TEST_OPTIONS' --ingressendpoint '${server_addr} && ./test/e2e-tests.sh --run-tests --kourier-version latest
    env-vars:
    - GO111MODULE="on"
    - TEST_OPTIONS="--enable-alpha --enable-beta --resolvabledomain=false"
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - SYSTEM_NAMESPACE="knative-serving"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-kourier-tests
    release: "1.2"
    cron: 30 15 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh kourier-12 && kubectl get cm s390x-config-serving -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && export TEST_OPTIONS=$TEST_OPTIONS' --ingressendpoint '${server_addr} && ./test/e2e-tests.sh --run-tests --kourier-version latest
    env-vars:
    - GO111MODULE="on"
    - TEST_OPTIONS="--enable-alpha --enable-beta --resolvabledomain=false"
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - SYSTEM_NAMESPACE="knative-serving"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-kourier-tests
    release: "1.3"
    cron: 40 19 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh kourier-13 && kubectl get cm s390x-config-serving -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && export TEST_OPTIONS=$TEST_OPTIONS' --ingressendpoint '${server_addr} && ./test/e2e-tests.sh --run-tests --kourier-version latest
    env-vars:
    - GO111MODULE="on"
    - TEST_OPTIONS="--enable-alpha --enable-beta --resolvabledomain=false"
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - SYSTEM_NAMESPACE="knative-serving"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-contour-tests
    cron: 0 5 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh contour-main && kubectl get cm s390x-config-serving -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && export TEST_OPTIONS=$TEST_OPTIONS' --ingressendpoint '${server_addr} && ./test/e2e-tests.sh --run-tests --contour-version latest
    env-vars:
    - GO111MODULE="on"
    - TEST_OPTIONS="--enable-alpha --enable-beta --resolvabledomain=false"
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - SYSTEM_NAMESPACE="knative-serving"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-contour-tests
    release: "1.0"
    cron: 10 9 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh contour-10 && kubectl get cm s390x-config-serving -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && export TEST_OPTIONS=$TEST_OPTIONS' --ingressendpoint '${server_addr} && ./test/e2e-tests.sh --run-tests --contour-version latest
    env-vars:
    - GO111MODULE="on"
    - TEST_OPTIONS="--enable-alpha --enable-beta --resolvabledomain=false"
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - SYSTEM_NAMESPACE="knative-serving"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-contour-tests
    release: "1.1"
    cron: 20 13 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh contour-11 && kubectl get cm s390x-config-serving -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && export TEST_OPTIONS=$TEST_OPTIONS' --ingressendpoint '${server_addr} && ./test/e2e-tests.sh --run-tests --contour-version latest
    env-vars:
    - GO111MODULE="on"
    - TEST_OPTIONS="--enable-alpha --enable-beta --resolvabledomain=false"
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - SYSTEM_NAMESPACE="knative-serving"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-contour-tests
    release: "1.2"
    cron: 30 17 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh contour-12 && kubectl get cm s390x-config-serving -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && export TEST_OPTIONS=$TEST_OPTIONS' --ingressendpoint '${server_addr} && ./test/e2e-tests.sh --run-tests --contour-version latest
    env-vars:
    - GO111MODULE="on"
    - TEST_OPTIONS="--enable-alpha --enable-beta --resolvabledomain=false"
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - SYSTEM_NAMESPACE="knative-serving"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-contour-tests
    release: "1.3"
    cron: 40 21 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh contour-13 && kubectl get cm s390x-config-serving -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && export TEST_OPTIONS=$TEST_OPTIONS' --ingressendpoint '${server_addr} && ./test/e2e-tests.sh --run-tests --contour-version latest
    env-vars:
    - GO111MODULE="on"
    - TEST_OPTIONS="--enable-alpha --enable-beta --resolvabledomain=false"
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - SYSTEM_NAMESPACE="knative-serving"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    external_cluster:
      secret: s390x-cluster1
  - nightly: true
    reporter_config:
      slack:
        channel: serving-api
        job_states_to_report:
        - failure
        report_template: '"The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"'
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - dot-release: true
    release: "0.26"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - dot-release: true
    release: "1.0"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - dot-release: true
    release: "1.1"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - dot-release: true
    release: "1.2"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - auto-release: true
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  knative/client:
  - continuous: true
  - branch-ci: true
    release: "1.0"
  - branch-ci: true
    release: "1.1"
  - branch-ci: true
    release: "1.2"
  - branch-ci: true
    release: "1.3"
  - nightly: true
  - custom-job: tekton
    cron: 0 13 * * *
    command: ./test/tekton-tests.sh
  - dot-release: true
    release: "1.0"
  - dot-release: true
    release: "1.1"
  - dot-release: true
    release: "1.2"
  - dot-release: true
    release: "1.3"
  - auto-release: true
  - custom-job: s390x-e2e-tests
    cron: 0 14 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh client-main && kubectl get cm s390x-config-client -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && ./test/e2e-tests.sh --run-tests
    env-vars:
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    - INGRESS_CLASS="contour.ingress.networking.knative.dev"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-e2e-tests
    release: "1.0"
    cron: 10 18 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh client-10 && kubectl get cm s390x-config-client -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && ./test/e2e-tests.sh --run-tests
    env-vars:
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    - INGRESS_CLASS="contour.ingress.networking.knative.dev"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-e2e-tests
    release: "1.1"
    cron: 20 22 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh client-11 && kubectl get cm s390x-config-client -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && ./test/e2e-tests.sh --run-tests
    env-vars:
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    - INGRESS_CLASS="contour.ingress.networking.knative.dev"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-e2e-tests
    release: "1.2"
    cron: 30 2 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh client-12 && kubectl get cm s390x-config-client -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && ./test/e2e-tests.sh --run-tests
    env-vars:
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    - INGRESS_CLASS="contour.ingress.networking.knative.dev"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-e2e-tests
    release: "1.3"
    cron: 40 6 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh client-13 && kubectl get cm s390x-config-client -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && ./test/e2e-tests.sh --run-tests
    env-vars:
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    - INGRESS_CLASS="contour.ingress.networking.knative.dev"
    external_cluster:
      secret: s390x-cluster1
  knative/client-pkg:
  - continuous: true
  - auto-release: true
  - nightly: true
  knative-sandbox/kn-plugin-diag:
  - continuous: true
  knative-sandbox/kn-plugin-event:
  - continuous: true
  - auto-release: true
  - nightly: true
  - dot-release: true
  knative-sandbox/kn-plugin-func:
  - auto-release: true
    needs-dind: true
  - nightly: true
    needs-dind: true
  - dot-release: true
    needs-dind: true
  knative-sandbox/kn-plugin-migration:
  - continuous: true
  knative-sandbox/kn-plugin-operator:
  - continuous: true
  knative-sandbox/kn-plugin-sample:
  - continuous: true
  knative-sandbox/kn-plugin-service-log:
  - continuous: true
  - auto-release: true
  - nightly: true
  - dot-release: true
  knative-sandbox/kn-plugin-source-kafka:
  - continuous: true
  - auto-release: true
  - nightly: true
  - dot-release: true
    release: "1.0"
  - dot-release: true
    release: "1.1"
  - dot-release: true
    release: "1.2"
  - dot-release: true
    release: "1.3"
  knative-sandbox/kn-plugin-source-kamelet:
  - continuous: true
  - auto-release: true
  - nightly: true
  - dot-release: true
  knative-sandbox/kn-plugin-admin:
  - continuous: true
  - auto-release: true
  - nightly: true
  - dot-release: true
  knative-sandbox/kn-plugin-quickstart:
  - continuous: true
  - auto-release: true
  - nightly: true
  - dot-release: true
  knative/docs:
  - continuous: true
    needs-dind: true
  knative/eventing:
  - continuous: true
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - branch-ci: true
    release: "0.26"
  - branch-ci: true
    release: "1.0"
  - branch-ci: true
    release: "1.1"
  - branch-ci: true
    release: "1.3"
  - nightly: true
    reporter_config:
      slack:
        channel: eventing
        job_states_to_report:
        - failure
        report_template: '"The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"'
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - dot-release: true
    release: "0.26"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - dot-release: true
    release: "1.0"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - dot-release: true
    release: "1.1"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - dot-release: true
    release: "1.3"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - auto-release: true
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - custom-job: s390x-e2e-tests
    cron: 0 7 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh eventing-main && kubectl get cm s390x-config-eventing -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && ./test/e2e-tests.sh --run-tests
    env-vars:
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - SYSTEM_NAMESPACE="knative-eventing"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - SCALE_CHAOSDUCK_TO_ZERO="1"
    - DOCKER_CONFIG="/opt/cluster"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-e2e-tests
    release: "1.0"
    cron: 10 11 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh eventing-10 && kubectl get cm s390x-config-eventing -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && ./test/e2e-tests.sh --run-tests
    env-vars:
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - SYSTEM_NAMESPACE="knative-eventing"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - SCALE_CHAOSDUCK_TO_ZERO="1"
    - DOCKER_CONFIG="/opt/cluster"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-e2e-tests
    release: "1.1"
    cron: 20 15 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh eventing-11 && kubectl get cm s390x-config-eventing -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && ./test/e2e-tests.sh --run-tests
    env-vars:
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - SYSTEM_NAMESPACE="knative-eventing"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - SCALE_CHAOSDUCK_TO_ZERO="1"
    - DOCKER_CONFIG="/opt/cluster"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-e2e-tests
    release: "1.2"
    cron: 30 19 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh eventing-12 && kubectl get cm s390x-config-eventing -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && ./test/e2e-tests.sh --run-tests
    env-vars:
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - SYSTEM_NAMESPACE="knative-eventing"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - SCALE_CHAOSDUCK_TO_ZERO="1"
    - DOCKER_CONFIG="/opt/cluster"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-e2e-tests
    release: "1.3"
    cron: 40 23 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh eventing-13 && kubectl get cm s390x-config-eventing -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && ./test/e2e-tests.sh --run-tests
    env-vars:
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - SYSTEM_NAMESPACE="knative-eventing"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - SCALE_CHAOSDUCK_TO_ZERO="1"
    - DOCKER_CONFIG="/opt/cluster"
    external_cluster:
      secret: s390x-cluster1
  knative-sandbox/eventing-awssqs:
  - continuous: true
  - nightly: true
  - auto-release: true
  - dot-release: true
    release: "0.26"
  - dot-release: true
    release: "1.0"
  - dot-release: true
    release: "1.1"
  - dot-release: true
    release: "1.2"
  knative-sandbox/eventing-ceph:
  - continuous: true
  - nightly: true
  - auto-release: true
  - dot-release: true
    release: "1.0"
  - dot-release: true
    release: "1.1"
  - dot-release: true
    release: "1.2"
  - dot-release: true
    release: "1.3"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
    needs-dind: true
  knative-sandbox/eventing-couchdb:
  - continuous: true
  - nightly: true
  - auto-release: true
  - dot-release: true
    release: "0.25"
  - dot-release: true
    release: "0.26"
  - dot-release: true
    release: "1.0"
  - dot-release: true
    release: "1.1"
  knative-sandbox/eventing-github:
  - continuous: true
  - nightly: true
  - auto-release: true
  - dot-release: true
    release: "1.0"
  - dot-release: true
    release: "1.1"
  - dot-release: true
    release: "1.2"
  - dot-release: true
    release: "1.3"
  knative-sandbox/eventing-gitlab:
  - continuous: true
  - nightly: true
  - dot-release: true
    release: "1.0"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - dot-release: true
    release: "1.1"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - dot-release: true
    release: "1.2"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - dot-release: true
    release: "1.3"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - auto-release: true
  knative-sandbox/eventing-prometheus:
  - continuous: true
  - nightly: true
  - auto-release: true
  - dot-release: true
    release: "0.25"
  - dot-release: true
    release: "0.26"
  - dot-release: true
    release: "1.0"
  - dot-release: true
    release: "1.1"
  knative-sandbox/eventing-redis:
  - continuous: true
  - nightly: true
  - auto-release: true
  - dot-release: true
    release: "1.0"
  - dot-release: true
    release: "1.1"
  - dot-release: true
    release: "1.2"
  - dot-release: true
    release: "1.3"
  knative-sandbox/kperf:
  - continuous: true
  knative/pkg:
  - continuous: true
  knative/caching:
  - continuous: true
  knative-sandbox/sample-controller:
  - continuous: true
  - nightly: true
  - auto-release: true
  knative-sandbox/sample-source:
  - continuous: true
  - nightly: true
  - auto-release: true
  knative/test-infra:
  - continuous: true
    needs-dind: true
  google/knative-gcp:
  - nightly: true
    args:
    - --publish
    - --tag-release
    - --release-gcs
    - knative-gcp-nightly
    - --release-gcr
    - gcr.io/knative-gcp-nightly
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - auto-release: true
    args:
    - --auto-release
    - --release-gcs
    - knative-gcp
    - --release-gcr
    - gcr.io/knative-gcp
    - --github-token
    - /etc/hub-token/token
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  knative-sandbox/net-certmanager:
  - continuous: true
  - nightly: true
    reporter_config:
      slack:
        channel: net-certmanager
        job_states_to_report:
        - failure
        report_template: '"The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"'
  - dot-release: true
    release: "1.0"
  - dot-release: true
    release: "1.1"
  - dot-release: true
    release: "1.2"
  - dot-release: true
    release: "1.3"
  - auto-release: true
  knative-sandbox/net-contour:
  - continuous: true
  - nightly: true
    reporter_config:
      slack:
        channel: net-contour
        job_states_to_report:
        - failure
        report_template: '"The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"'
  - dot-release: true
    release: "1.0"
  - dot-release: true
    release: "1.1"
  - dot-release: true
    release: "1.2"
  - dot-release: true
    release: "1.3"
  - auto-release: true
  knative-sandbox/net-gateway-api:
  - continuous: true
  - nightly: true
    reporter_config:
      slack:
        channel: net-gateway-api
        job_states_to_report:
        - failure
        report_template: '"The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"'
  - auto-release: true
  knative-sandbox/net-http01:
  - continuous: true
  - nightly: true
    reporter_config:
      slack:
        channel: net-http01
        job_states_to_report:
        - failure
        report_template: '"The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"'
  - dot-release: true
  - auto-release: true
  knative-sandbox/net-istio:
  - continuous: true
  - nightly: true
    reporter_config:
      slack:
        channel: net-istio
        job_states_to_report:
        - failure
        report_template: '"The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"'
  - custom-job: latest
    command:
    - ./test/presubmit-tests.sh
    args:
    - --run-test
    - ./test/e2e-tests.sh --istio-version latest
  - dot-release: true
    release: "1.0"
  - dot-release: true
    release: "1.1"
  - dot-release: true
    release: "1.2"
  - dot-release: true
    release: "1.3"
  - auto-release: true
  knative-sandbox/net-kourier:
  - continuous: true
  - nightly: true
    reporter_config:
      slack:
        channel: net-kourier
        job_states_to_report:
        - failure
        report_template: '"The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"'
  - dot-release: true
  - auto-release: true
  knative/operator:
  - continuous: true
  - branch-ci: true
    release: "1.0"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - branch-ci: true
    release: "1.1"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - branch-ci: true
    release: "1.2"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - branch-ci: true
    release: "1.3"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - nightly: true
  - dot-release: true
    release: "1.0"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - dot-release: true
    release: "1.1"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - dot-release: true
    release: "1.2"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - dot-release: true
    release: "1.3"
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
  - auto-release: true
  - custom-job: s390x-e2e-tests
    cron: 0 16 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh operator-main && kubectl get cm s390x-config-operator -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && ./test/e2e-tests.sh --run-tests
    env-vars:
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    - INGRESS_CLASS="contour.ingress.networking.knative.dev"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-e2e-tests
    release: "1.0"
    cron: 10 20 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh operator-10 && kubectl get cm s390x-config-operator -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && ./test/e2e-tests.sh --run-tests
    env-vars:
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    - INGRESS_CLASS="contour.ingress.networking.knative.dev"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-e2e-tests
    release: "1.1"
    cron: 20 0 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh operator-11 && kubectl get cm s390x-config-operator -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && ./test/e2e-tests.sh --run-tests
    env-vars:
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    - INGRESS_CLASS="contour.ingress.networking.knative.dev"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-e2e-tests
    release: "1.2"
    cron: 30 4 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh operator-12 && kubectl get cm s390x-config-operator -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && ./test/e2e-tests.sh --run-tests
    env-vars:
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    - INGRESS_CLASS="contour.ingress.networking.knative.dev"
    external_cluster:
      secret: s390x-cluster1
  - custom-job: s390x-e2e-tests
    release: "1.3"
    cron: 40 8 * * *
    command:
    - bash
    args:
    - -c
    - mkdir -p /root/.kube && cat /opt/cluster/ci-script > connect.sh && chmod +x connect.sh && ./connect.sh operator-13 && kubectl get cm s390x-config-operator -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh && chmod +x adjust.sh && ./adjust.sh && ./test/e2e-tests.sh --run-tests
    env-vars:
    - DISABLE_MD_LINTING="1"
    - KO_FLAGS="--platform=linux/s390x"
    - PLATFORM="linux/s390x"
    - KUBECONFIG="/root/.kube/config"
    - DOCKER_CONFIG="/opt/cluster"
    - INGRESS_CLASS="contour.ingress.networking.knative.dev"
    external_cluster:
      secret: s390x-cluster1
  knative-sandbox/async-component:
  - continuous: true
  - nightly: true
  - dot-release: true
  - auto-release: true
  knative-sandbox/discovery:
  - continuous: true
  - nightly: true
    reporter_config:
      slack:
        channel: eventing-sources
        job_states_to_report:
        - failure
        report_template: '"The nightly release job for discovery failed, check the log: <{{.Status.URL}}|View logs>"'
  - dot-release: true
  - auto-release: true
  knative-sandbox/eventing-camel:
  - continuous: true
  - nightly: true
    reporter_config:
      slack:
        channel: eventing-sources
        job_states_to_report:
        - failure
        report_template: '"The nightly release job for camel failed, check the log: <{{.Status.URL}}|View logs>"'
  - dot-release: true
  - auto-release: true
  knative-sandbox/eventing-kafka:
  - continuous: true
    needs-dind: true
  - nightly: true
    needs-dind: true
    reporter_config:
      slack:
        channel: eventing-kafka
        job_states_to_report:
        - failure
        report_template: '"The nightly release job for eventing-kafka failed, check the log: <{{.Status.URL}}|View logs>"'
  - dot-release: true
    release: "1.0"
    needs-dind: true
  - dot-release: true
    release: "1.1"
    needs-dind: true
  - dot-release: true
    release: "1.2"
    needs-dind: true
  - dot-release: true
    release: "1.3"
    needs-dind: true
  - auto-release: true
    resources:
      requests:
        memory: 12Gi
      limits:
        memory: 16Gi
    needs-dind: true
  knative-sandbox/eventing-kafka-broker:
  - continuous: true
    needs-dind: true
  - nightly: true
    reporter_config:
      slack:
        channel: eventing-kafka
        job_states_to_report:
        - failure
        report_template: '"The nightly release job for eventing-kafka-broker failed, check the log: <{{.Status.URL}}|View logs>"'
    needs-dind: true
  - dot-release: true
    release: "1.0"
    needs-dind: true
  - dot-release: true
    release: "1.1"
    needs-dind: true
  - dot-release: true
    release: "1.2"
    needs-dind: true
  - dot-release: true
    release: "1.3"
    needs-dind: true
  - auto-release: true
    needs-dind: true
  knative-sandbox/eventing-rabbitmq:
  - nightly: true
    reporter_config:
      slack:
        channel: eventing-rabbitmq
        job_states_to_report:
        - failure
        report_template: '"The nightly release job for eventing-rabbitmq failed, check the log: <{{.Status.URL}}|View logs>"'
  - auto-release: true
  - dot-release: true
    release: "1.0"
  - dot-release: true
    release: "1.1"
  - dot-release: true
    release: "1.2"
  - dot-release: true
    release: "1.3"
  knative-sandbox/eventing-natss:
  - nightly: true
    reporter_config:
      slack:
        channel: eventing
        job_states_to_report:
        - failure
        report_template: '"The nightly release job for eventing-natss failed, check the log: <{{.Status.URL}}|View logs>"'
  - dot-release: true
    release: "1.0"
  - dot-release: true
    release: "1.1"
  - dot-release: true
    release: "1.2"
  - dot-release: true
    release: "1.3"
  - auto-release: true
  knative-sandbox/eventing-autoscaler-keda:
  - continuous: true
  - nightly: true
  - dot-release: true
  - auto-release: true
  knative-sandbox/eventing-kogito:
  - continuous: true
  - nightly: true
    reporter_config:
      slack:
        channel: eventing-sources
        job_states_to_report:
        - failure
        report_template: '"The nightly release job for Kogito failed, check the log: <{{.Status.URL}}|View logs>"'
  - dot-release: true
  - auto-release: true
  knative-sandbox/container-freezer:
  - continuous: true
  - nightly: true
  - dot-release: true
  - auto-release: true
