# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

plank:
  job_url_template: 'https://prow.knative.dev/view/gcs/knative-prow/{{if or (eq .Spec.Type "presubmit") (eq .Spec.Type "batch")}}pr-logs/pull{{with .Spec.Refs}}/{{.Org}}_{{.Repo}}{{end}}{{else}}logs{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_templates:
    '*': '[Your PR dashboard](https://prow.knative.dev/pr).'
  job_url_prefix_config:
    '*': https://prow.knative.dev/view/
  pod_pending_timeout: 60m
  default_decoration_config_entries:
    - config:
        timeout: 2h
        grace_period: 15s
        utility_images:
          # Update these versions when updating plank version in cluster.yaml
          clonerefs: "gcr.io/k8s-prow/clonerefs:v20230209-f319bbff04"
          initupload: "gcr.io/k8s-prow/initupload:v20230209-f319bbff04"
          entrypoint: "gcr.io/k8s-prow/entrypoint:v20230209-f319bbff04"
          sidecar: "gcr.io/k8s-prow/sidecar:v20230209-f319bbff04"
        gcs_configuration:
          bucket: "knative-prow"
          path_strategy: "explicit"
        gcs_credentials_secret: ""
        resources:
          sidecar:
            requests:
              cpu: 100m
              memory: 20Mi
    - cluster: prow-build
      config:
        timeout: 2h
        grace_period: 15s
        utility_images:
          # Update these versions when updating plank version in cluster.yaml
          clonerefs: "gcr.io/k8s-prow/clonerefs:v20230209-f319bbff04"
          initupload: "gcr.io/k8s-prow/initupload:v20230209-f319bbff04"
          entrypoint: "gcr.io/k8s-prow/entrypoint:v20230209-f319bbff04"
          sidecar: "gcr.io/k8s-prow/sidecar:v20230209-f319bbff04"
        gcs_configuration:
          bucket: "knative-prow"
          path_strategy: "explicit"
        gcs_credentials_secret: gcs-upload
        resources:
          sidecar:
            requests:
              cpu: 100m
              memory: 20Mi

slack_reporter_configs:
  "*":
    # Do not report any job types by default.
    job_types_to_report:
    # Do not report any job states by default.
    job_states_to_report:
    # By default reporting to the test channel, it is required so it has to be set here.
    channel: test
    report_template: "Job `{{.Spec.Job}}` ended with state *{{.Status.State}}*: <{{.Status.URL}}|View logs>"

deck:
  google_analytics: G-Z5SCKHSFYJ
  spyglass:
    size_limit: 500000000 # 500MB
    gcs_browser_prefix: https://gcsweb.knative.dev/gcs/
    testgrid_config: gs://knative-testgrid/config
    testgrid_root: https://testgrid.knative.dev/
    announcement: "Please reach out on the #productivity slack channel to report issues with Knative Test Infrastructure."
    lenses:
    - lens:
        name: metadata
      required_files:
      - started.json|finished.json
      optional_files:
      - podinfo.json
    - lens:
        name: buildlog
        config:
          highlight_regexes:
          # timed out error in waiting for Kubernetes resources
          - 'timed out waiting for the condition'
          # go test timeout
          - 'panic: test timed out after.*$'
          # test case failure
          - 'FAIL:'
          # data race errors
          - 'WARNING: DATA RACE'
          # step failed
          - 'Step failed:'
          # boskos error
          - 'boskos failed to acquire project'
          # cluster creation error
          - 'failed creating test cluster'
          # Knative setup errors
          - 'Knative setup failed'
          - 'timeout waiting for pods to come up'
          # Prow job killed
          - 'Entrypoint received interrupt: terminated'
          # Go build failure due to OOM
          - '"go build": signal: killed'
          # Code is outdated
          # TODO(chizhg): this error message should be defined by the common test infrastructure
          - 'Please run .*hack/update-codegen.sh'
          # Metrics are logged only for Pods in a failed test.
          - 'Metrics logs'
          # Compile error - unused import.
          - 'imported and not used:'
          # Compile error - unused variable.
          - 'declared but not used'
          # Compile error - undefined variable.
          - 'undefined:'
          # Compile error - not enough arguments.
          - 'not enough arguments in call to '
          # Compile error - too many arguments.
          - 'too many arguments in call to '
          # Compile error - incorrect argument type.
          - 'cannot use .* \\(type .*\\) as type .* in argument to'
      required_files:
      - build-log.txt
    - lens:
        name: junit
      required_files:
      # Nested folders is a valid use case
      - artifacts(/.*/|/)junit.*\.xml
    - lens:
        name: podinfo
      required_files:
      - podinfo.json
  tide_update_period: 1s
  rerun_auth_configs:
    '*':
      github_team_slugs:
        - org: 'knative'
          slug: 'productivity-writers'
        - org: 'knative'
          slug: 'technical-oversight-committee'
        - org: 'knative'
          slug: 'knative-release-leads'
        - org: 'knative'
          slug: 'client-wg-leads'
        - org: 'knative'
          slug: 'docs-wg-leads'
        - org: 'knative'
          slug: 'eventing-wg-leads'
        - org: 'knative'
          slug: 'operations-wg-leads'
        - org: 'knative'
          slug: 'security-wg-leads'
        - org: 'knative'
          slug: 'serving-wg-leads'
        - org: 'knative'
          slug: 'ux-wg-leads'

prowjob_namespace: default
pod_namespace: test-pods
log_level: debug

sinker:
  resync_period: 1m
  max_prowjob_age: 240h
  max_pod_age: 30m
  terminated_pod_ttl: 30m

tide:
  queries:
  - orgs:
    - "knative"
    - "knative-sandbox"
    excludedRepos: &knative_excluded_repos
    - knative/build
    - knative/build-templates
    - knative/eventing-operator
    - knative/serving-operator
    - knative/observability
    labels:
    - lgtm
    - approved
    missingLabels: &knative_tide_missing_labels
    - do-not-merge/hold
    - do-not-merge/work-in-progress
    - do-not-merge/invalid-owners-file
    - needs-rebase
  - orgs:
    - "knative"
    - "knative-sandbox"
    excludedRepos: *knative_excluded_repos
    labels:
    - "skip-review"
    missingLabels: *knative_tide_missing_labels
    author: knative-automation
    reviewApprovedRequired: false
  - repos:
    # Allow PRs for test-infra to be automatically merged without manual approval
    - "knative/test-infra"
    labels:
    - "skip-review"
    missingLabels: *knative_tide_missing_labels
    author: knative-prow-updater-robot
    reviewApprovedRequired: false
  merge_method:
    knative: squash
    knative-sandbox: squash
  target_url: https://prow.knative.dev/tide
  pr_status_base_urls:
    '*': https://prow.knative.dev/pr
  blocker_label: tide/merge-blocker
  squash_label: tide/merge-method-squash
  rebase_label: tide/merge-method-rebase
  merge_label: tide/merge-method-merge
  # https://github.com/kubernetes/test-infra/blob/master/prow/cmd/tide/config.md#context-policy-options
  context_options:
    # Treat unknown contexts as optional
    skip-unknown-contexts: false
    orgs:
      knative:
        repos:
          pkg:
            skip-unknown-contexts: true
          eventing:
            skip-unknown-contexts: true
          docs:
            skip-unknown-contexts: true
      knative-sandbox:
        repos:
          async-component:
            skip-unknown-contexts: true
          eventing-kafka-broker:
            skip-unknown-contexts: true
          reconciler-test:
            skip-unknown-contexts: true
#     orgs:
#       org:
#         required-contexts:
#         - "check-required-for-all-repos"
#         repos:
#           repo:
#             required-contexts:
#              - "check-required-for-all-branches"
#             branches:
#               branch:
#                 from-branch-protection: false
#                 required-contexts:
#                 - "required_test"
#                 optional-contexts:
#                 - "optional_test"

# Configure GitHub branch protection rules according to the specified policy.
branch-protection:
  # Allows a child to disable all protection even if the branch has inherited protection options from a parent.
  allow_disabled_policies: true
  orgs:
    knative-sandbox:
      # Protect all branches in knative-sandbox
      protect: true
      required_status_checks:
        contexts:
        - EasyCLA
        - tide
      exclude:
      - "^dependabot/" # don't protect branches created by dependabot
      - "^knative-*/" # don't protect branches created by Knative automation
      include:
      - "^main$"
      - "^master$"
      - "^release-"
      # Enforce all configured restrictions above for administrators.
      enforce_admins: true

    knative:
      # Protect all branches in knative
      protect: true
      required_status_checks:
        contexts:
        - EasyCLA
        - tide
      exclude:
      - "^dependabot/" # don't protect branches created by dependabot
      - "^knative-*/" # don't protect branches created by Knative automation
      include:
      - "^main$"
      - "^master$"
      - "^release-"
      - "^gh-pages$"
      # Enforce all configured restrictions above for administrators.
      enforce_admins: true
      repos:
        .github:
          protect: false
