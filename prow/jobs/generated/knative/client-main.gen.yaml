# #######################################################################
# ####                                                               ####
# ####      THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.       ####
# ####   USE "./hack/generate-configs.sh" TO REGENERATE THIS FILE.   ####
# ####                                                               ####
# #######################################################################

periodics:
- annotations:
    testgrid-dashboards: client
    testgrid-tab-name: continuous
  cluster: prow-build
  cron: 4 */9 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: knative
    path_alias: knative.dev/client
    repo: client
  name: continuous_client_main_periodic
  spec:
    containers:
    - command:
      - runner.sh
      - ./test/presubmit-tests.sh
      - --all-tests
      env:
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      image: gcr.io/knative-tests/test-infra/prow-tests:v20230524-d6a12e8c
      name: ""
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /etc/test-account
        name: test-account
        readOnly: true
    nodeSelector:
      kubernetes.io/arch: amd64
      type: testing
    volumes:
    - name: test-account
      secret:
        items:
        - key: service-account-key.json
          path: service-account.json
        secretName: prow-google-credentials
- annotations:
    testgrid-dashboards: client
    testgrid-tab-name: tekton
  cluster: prow-build
  cron: 50 21 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: knative
    path_alias: knative.dev/client
    repo: client
  name: tekton_client_main_periodic
  spec:
    containers:
    - command:
      - runner.sh
      - ./test/tekton-tests.sh
      env:
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      image: gcr.io/knative-tests/test-infra/prow-tests:v20230524-d6a12e8c
      name: ""
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /etc/test-account
        name: test-account
        readOnly: true
    nodeSelector:
      kubernetes.io/arch: amd64
      type: testing
    volumes:
    - name: test-account
      secret:
        items:
        - key: service-account-key.json
          path: service-account.json
        secretName: prow-google-credentials
- annotations:
    testgrid-dashboards: client
    testgrid-tab-name: s390x-e2e-tests
  cluster: prow-build
  cron: 20 1 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: knative
    path_alias: knative.dev/client
    repo: client
  name: s390x-e2e-tests_client_main_periodic
  spec:
    containers:
    - args:
      - bash
      - -c
      - |
        mkdir -p /root/.kube
        cat /opt/cluster/ci-script > connect.sh
        chmod +x connect.sh
        ./connect.sh client-main
        kubectl get cm s390x-config-client -n default -o jsonpath='{.data.adjustment-script}' > adjust.sh
        chmod +x adjust.sh
        ./adjust.sh
        ./test/e2e-tests.sh --run-tests
      command:
      - runner.sh
      env:
      - name: INGRESS_CLASS
        value: contour.ingress.networking.knative.dev
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: KO_FLAGS
        value: --platform=linux/s390x --insecure-registry
      - name: PLATFORM
        value: linux/s390x
      - name: KO_DOCKER_REPO
        valueFrom:
          secretKeyRef:
            key: ko-docker-repo
            name: s390x-cluster1
      - name: KUBECONFIG
        value: /root/.kube/config
      - name: DOCKER_CONFIG
        value: /opt/cluster
      image: gcr.io/knative-tests/test-infra/prow-tests:v20230524-d6a12e8c
      name: ""
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /etc/test-account
        name: test-account
        readOnly: true
      - mountPath: /opt/cluster
        name: s390x-cluster1
        readOnly: true
    nodeSelector:
      kubernetes.io/arch: amd64
      type: testing
    volumes:
    - name: test-account
      secret:
        items:
        - key: service-account-key.json
          path: service-account.json
        secretName: prow-google-credentials
    - name: s390x-cluster1
      secret:
        defaultMode: 384
        secretName: s390x-cluster1
- annotations:
    testgrid-dashboards: client
    testgrid-tab-name: ppc64le-e2e-tests
  cluster: prow-build
  cron: 45 9 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: knative
    path_alias: knative.dev/client
    repo: client
  name: ppc64le-e2e-tests_client_main_periodic
  spec:
    containers:
    - args:
      - bash
      - -c
      - |
        cat /opt/cluster/ci-script > /tmp/connect.sh
        chmod +x /tmp/connect.sh
        . /tmp/connect.sh ${CI_JOB}
        ./test/e2e-tests.sh --run-tests
      command:
      - runner.sh
      env:
      - name: CI_JOB
        value: client-main
      - name: INGRESS_CLASS
        value: contour.ingress.networking.knative.dev
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: KO_FLAGS
        value: --platform=linux/ppc64le
      - name: PLATFORM
        value: linux/ppc64le
      - name: KO_DOCKER_REPO
        value: registry.ppc64le
      - name: KUBECONFIG
        value: /root/.kube/config
      image: gcr.io/knative-tests/test-infra/prow-tests:v20230524-d6a12e8c
      name: ""
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /etc/test-account
        name: test-account
        readOnly: true
      - mountPath: /opt/cluster
        name: ppc64le-cluster
        readOnly: true
    nodeSelector:
      kubernetes.io/arch: amd64
      type: testing
    volumes:
    - name: test-account
      secret:
        items:
        - key: service-account-key.json
          path: service-account.json
        secretName: prow-google-credentials
    - name: ppc64le-cluster
      secret:
        defaultMode: 384
        secretName: ppc64le-cluster
- annotations:
    testgrid-dashboards: client
    testgrid-tab-name: nightly
  cluster: prow-build
  cron: 12 9 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: knative
    path_alias: knative.dev/client
    repo: client
  max_concurrency: 1
  name: nightly_client_main_periodic
  reporter_config:
    slack:
      channel: knative-client
      job_states_to_report:
      - failure
      report_template: |
        "The nightly release job fails, check the log: <{{.Status.URL}}|View logs>"
  spec:
    containers:
    - command:
      - runner.sh
      - ./hack/release.sh
      - --publish
      - --tag-release
      - --apple-codesign-key
      - /etc/notary/cert.p12
      - --apple-notary-api-key
      - /etc/notary/key.json
      - --apple-codesign-password-file
      - /etc/notary/password
      env:
      - name: SIGN_IMAGES
        value: "true"
      - name: ATTEST_IMAGES
        value: "true"
      image: gcr.io/knative-tests/test-infra/prow-tests:v20230524-d6a12e8c
      name: ""
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /etc/notary
        name: apple-notary-creds
        readOnly: true
    nodeSelector:
      kubernetes.io/arch: amd64
      type: testing
    serviceAccountName: nightly
    volumes:
    - name: apple-notary-creds
      secret:
        items:
        - key: notary-api-key
          path: key.json
        - key: signing-certificate
          path: cert.p12
        - key: signing-certificate-password
          path: password
        secretName: apple-notary-creds
- annotations:
    testgrid-dashboards: client
    testgrid-tab-name: release
  cluster: prow-build
  cron: 4 */9 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: knative
    path_alias: knative.dev/client
    repo: client
  max_concurrency: 1
  name: release_client_main_periodic
  spec:
    containers:
    - command:
      - runner.sh
      - ./hack/release.sh
      - --auto-release
      - --release-gcs
      - knative-releases/client
      - --release-gcr
      - gcr.io/knative-releases
      - --github-token
      - /etc/hub-token/token
      - --apple-codesign-key
      - /etc/notary/cert.p12
      - --apple-notary-api-key
      - /etc/notary/key.json
      - --apple-codesign-password-file
      - /etc/notary/password
      env:
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: SIGN_IMAGES
        value: "true"
      - name: ATTEST_IMAGES
        value: "true"
      image: gcr.io/knative-tests/test-infra/prow-tests:v20230524-d6a12e8c
      name: ""
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /etc/hub-token
        name: hub-token
        readOnly: true
      - mountPath: /etc/notary
        name: apple-notary-creds
        readOnly: true
    nodeSelector:
      kubernetes.io/arch: amd64
      type: testing
    serviceAccountName: release
    volumes:
    - name: hub-token
      secret:
        items:
        - key: hub_token
          path: token
        secretName: github-credentials
    - name: apple-notary-creds
      secret:
        items:
        - key: notary-api-key
          path: key.json
        - key: signing-certificate
          path: cert.p12
        - key: signing-certificate-password
          path: password
        secretName: apple-notary-creds
presubmits:
  knative/client:
  - always_run: true
    branches:
    - ^main$
    cluster: prow-build
    decorate: true
    name: build-tests_client_main
    path_alias: knative.dev/client
    rerun_command: /test build-tests
    spec:
      containers:
      - command:
        - runner.sh
        - ./test/presubmit-tests.sh
        - --build-tests
        image: gcr.io/knative-tests/test-infra/prow-tests:v20230524-d6a12e8c
        name: ""
        resources: {}
        securityContext:
          privileged: true
      nodeSelector:
        kubernetes.io/arch: amd64
        type: testing
    trigger: ((?m)^/test( | .* )build-tests,?($|\s.*))|((?m)^/test( | .* )build-tests_client_main,?($|\s.*))
  - always_run: true
    branches:
    - ^main$
    cluster: prow-build
    decorate: true
    name: unit-tests_client_main
    path_alias: knative.dev/client
    rerun_command: /test unit-tests
    spec:
      containers:
      - command:
        - runner.sh
        - ./test/presubmit-tests.sh
        - --unit-tests
        image: gcr.io/knative-tests/test-infra/prow-tests:v20230524-d6a12e8c
        name: ""
        resources: {}
        securityContext:
          privileged: true
      nodeSelector:
        kubernetes.io/arch: amd64
        type: testing
    trigger: ((?m)^/test( | .* )unit-tests,?($|\s.*))|((?m)^/test( | .* )unit-tests_client_main,?($|\s.*))
  - always_run: true
    branches:
    - ^main$
    cluster: prow-build
    decorate: true
    name: integration-tests_client_main
    path_alias: knative.dev/client
    rerun_command: /test integration-tests
    spec:
      containers:
      - command:
        - runner.sh
        - ./test/presubmit-tests.sh
        - --integration-tests
        env:
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        image: gcr.io/knative-tests/test-infra/prow-tests:v20230524-d6a12e8c
        name: ""
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/test-account
          name: test-account
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        type: testing
      volumes:
      - name: test-account
        secret:
          items:
          - key: service-account-key.json
            path: service-account.json
          secretName: prow-google-credentials
    trigger: ((?m)^/test( | .* )integration-tests,?($|\s.*))|((?m)^/test( | .* )integration-tests_client_main,?($|\s.*))
  - always_run: true
    branches:
    - ^main$
    cluster: prow-build
    decorate: true
    name: integration-tests-latest-release_client_main
    path_alias: knative.dev/client
    rerun_command: /test integration-tests-latest-release
    spec:
      containers:
      - command:
        - runner.sh
        - ./test/presubmit-integration-tests-latest-release.sh
        env:
        - name: E2E_CLUSTER_REGION
          value: us-central1
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        image: gcr.io/knative-tests/test-infra/prow-tests:v20230524-d6a12e8c
        name: ""
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/test-account
          name: test-account
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        type: testing
      volumes:
      - name: test-account
        secret:
          items:
          - key: service-account-key.json
            path: service-account.json
          secretName: prow-google-credentials
    trigger: ((?m)^/test( | .* )integration-tests-latest-release,?($|\s.*))|((?m)^/test(
      | .* )integration-tests-latest-release_client_main,?($|\s.*))
