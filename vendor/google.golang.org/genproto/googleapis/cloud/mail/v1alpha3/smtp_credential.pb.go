// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/mail/v1alpha3/smtp_credential.proto

package mail

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A credential for sending mail via the Cloud Mail SMTP relay service.  Each
// sender may have up to five SMTP credentials.
type SmtpCredential struct {
	// The resource name for the SMTP credential, like
	// "projects/1234/regions/us-east1/senders/abc/smtpCredentials/xyz".
	// Read-only.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The user id for SMTP authentication.  Read-only.
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The password for SMTP authentication.  Read-only, and only returned on
	// Create. The caller must store the password returned by Create, since there
	// is no way to recover it later. If the password is lost, a new
	// SmtpCredential should be created.
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// The creation timestamp.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last modified timestamp, set during create or update.
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// google.iam.admin.v1.ServiceAccount.name
	ServiceAccountName string `protobuf:"bytes,6,opt,name=service_account_name,json=serviceAccountName,proto3" json:"service_account_name,omitempty"`
	// google.iam.admin.v1.ServiceAccount.email
	ServiceAccountEmail string `protobuf:"bytes,7,opt,name=service_account_email,json=serviceAccountEmail,proto3" json:"service_account_email,omitempty"`
	// Cloud user labels for this resource.
	// http://go/label-developers-guide
	Labels               map[string]string `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SmtpCredential) Reset()         { *m = SmtpCredential{} }
func (m *SmtpCredential) String() string { return proto.CompactTextString(m) }
func (*SmtpCredential) ProtoMessage()    {}
func (*SmtpCredential) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fe524cfc1fe14a, []int{0}
}

func (m *SmtpCredential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SmtpCredential.Unmarshal(m, b)
}
func (m *SmtpCredential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SmtpCredential.Marshal(b, m, deterministic)
}
func (m *SmtpCredential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmtpCredential.Merge(m, src)
}
func (m *SmtpCredential) XXX_Size() int {
	return xxx_messageInfo_SmtpCredential.Size(m)
}
func (m *SmtpCredential) XXX_DiscardUnknown() {
	xxx_messageInfo_SmtpCredential.DiscardUnknown(m)
}

var xxx_messageInfo_SmtpCredential proto.InternalMessageInfo

func (m *SmtpCredential) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SmtpCredential) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SmtpCredential) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *SmtpCredential) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *SmtpCredential) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *SmtpCredential) GetServiceAccountName() string {
	if m != nil {
		return m.ServiceAccountName
	}
	return ""
}

func (m *SmtpCredential) GetServiceAccountEmail() string {
	if m != nil {
		return m.ServiceAccountEmail
	}
	return ""
}

func (m *SmtpCredential) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// Request for CloudMail.ListSmtpCredentials.
type ListSmtpCredentialsRequest struct {
	// Name of the sender whose SMTP credentials are to be retrieved, like
	// "projects/1234/regions/us-east1/senders/abc".
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Optional. Specifies subset of smtp credentials to retrieve.
	// Case-sensitive and has the following syntax:
	//
	// field = value [AND [field = value]]...
	//
	// where **field** is 'labels.[KEY]' and '[KEY]' is a label key.
	// **value** can be '*' to match all values.
	//
	// Example: labels.env = staging AND labels.starred = *
	Filter               string   `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSmtpCredentialsRequest) Reset()         { *m = ListSmtpCredentialsRequest{} }
func (m *ListSmtpCredentialsRequest) String() string { return proto.CompactTextString(m) }
func (*ListSmtpCredentialsRequest) ProtoMessage()    {}
func (*ListSmtpCredentialsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fe524cfc1fe14a, []int{1}
}

func (m *ListSmtpCredentialsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSmtpCredentialsRequest.Unmarshal(m, b)
}
func (m *ListSmtpCredentialsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSmtpCredentialsRequest.Marshal(b, m, deterministic)
}
func (m *ListSmtpCredentialsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSmtpCredentialsRequest.Merge(m, src)
}
func (m *ListSmtpCredentialsRequest) XXX_Size() int {
	return xxx_messageInfo_ListSmtpCredentialsRequest.Size(m)
}
func (m *ListSmtpCredentialsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSmtpCredentialsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSmtpCredentialsRequest proto.InternalMessageInfo

func (m *ListSmtpCredentialsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListSmtpCredentialsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

// Response for CloudMail.ListSmtpCredentials.
type ListSmtpCredentialsResponse struct {
	// The SMTP credentials retrieved. The password field is not populated.
	SmtpCredentials      []*SmtpCredential `protobuf:"bytes,1,rep,name=smtp_credentials,json=smtpCredentials,proto3" json:"smtp_credentials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListSmtpCredentialsResponse) Reset()         { *m = ListSmtpCredentialsResponse{} }
func (m *ListSmtpCredentialsResponse) String() string { return proto.CompactTextString(m) }
func (*ListSmtpCredentialsResponse) ProtoMessage()    {}
func (*ListSmtpCredentialsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fe524cfc1fe14a, []int{2}
}

func (m *ListSmtpCredentialsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSmtpCredentialsResponse.Unmarshal(m, b)
}
func (m *ListSmtpCredentialsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSmtpCredentialsResponse.Marshal(b, m, deterministic)
}
func (m *ListSmtpCredentialsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSmtpCredentialsResponse.Merge(m, src)
}
func (m *ListSmtpCredentialsResponse) XXX_Size() int {
	return xxx_messageInfo_ListSmtpCredentialsResponse.Size(m)
}
func (m *ListSmtpCredentialsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSmtpCredentialsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSmtpCredentialsResponse proto.InternalMessageInfo

func (m *ListSmtpCredentialsResponse) GetSmtpCredentials() []*SmtpCredential {
	if m != nil {
		return m.SmtpCredentials
	}
	return nil
}

// Request for CloudMail.GetSmtpCredential.
type GetSmtpCredentialRequest struct {
	// Name of the SMTP credential to retrieve, like
	// "projects/1234/regions/us-east1/senders/abc/smtpCredentials/xyz".
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSmtpCredentialRequest) Reset()         { *m = GetSmtpCredentialRequest{} }
func (m *GetSmtpCredentialRequest) String() string { return proto.CompactTextString(m) }
func (*GetSmtpCredentialRequest) ProtoMessage()    {}
func (*GetSmtpCredentialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fe524cfc1fe14a, []int{3}
}

func (m *GetSmtpCredentialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSmtpCredentialRequest.Unmarshal(m, b)
}
func (m *GetSmtpCredentialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSmtpCredentialRequest.Marshal(b, m, deterministic)
}
func (m *GetSmtpCredentialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSmtpCredentialRequest.Merge(m, src)
}
func (m *GetSmtpCredentialRequest) XXX_Size() int {
	return xxx_messageInfo_GetSmtpCredentialRequest.Size(m)
}
func (m *GetSmtpCredentialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSmtpCredentialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSmtpCredentialRequest proto.InternalMessageInfo

func (m *GetSmtpCredentialRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request for CloudMail.CreateSmtpCredential.
type CreateSmtpCredentialRequest struct {
	// Name of the sender to register the SMTP credential under, like
	// "projects/1234/regions/us-east1/senders/abc".
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The client-assigned name for the credential. The ID must be an ASCII string
	// consisting only of uppercase and lowercase letters, digits, and hyphens.
	// The maximum length is 128 bytes.
	SmtpCredentialId string `protobuf:"bytes,2,opt,name=smtp_credential_id,json=smtpCredentialId,proto3" json:"smtp_credential_id,omitempty"`
	// The SMTP credential to create.
	SmtpCredential       *SmtpCredential `protobuf:"bytes,3,opt,name=smtp_credential,json=smtpCredential,proto3" json:"smtp_credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateSmtpCredentialRequest) Reset()         { *m = CreateSmtpCredentialRequest{} }
func (m *CreateSmtpCredentialRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSmtpCredentialRequest) ProtoMessage()    {}
func (*CreateSmtpCredentialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fe524cfc1fe14a, []int{4}
}

func (m *CreateSmtpCredentialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSmtpCredentialRequest.Unmarshal(m, b)
}
func (m *CreateSmtpCredentialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSmtpCredentialRequest.Marshal(b, m, deterministic)
}
func (m *CreateSmtpCredentialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSmtpCredentialRequest.Merge(m, src)
}
func (m *CreateSmtpCredentialRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSmtpCredentialRequest.Size(m)
}
func (m *CreateSmtpCredentialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSmtpCredentialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSmtpCredentialRequest proto.InternalMessageInfo

func (m *CreateSmtpCredentialRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateSmtpCredentialRequest) GetSmtpCredentialId() string {
	if m != nil {
		return m.SmtpCredentialId
	}
	return ""
}

func (m *CreateSmtpCredentialRequest) GetSmtpCredential() *SmtpCredential {
	if m != nil {
		return m.SmtpCredential
	}
	return nil
}

// Request for CloudMail.UpdateSmtpCredential.
type UpdateSmtpCredentialRequest struct {
	// The SMTP credential to update.
	SmtpCredential *SmtpCredential `protobuf:"bytes,1,opt,name=smtp_credential,json=smtpCredential,proto3" json:"smtp_credential,omitempty"`
	// The fields to update. Required.
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateSmtpCredentialRequest) Reset()         { *m = UpdateSmtpCredentialRequest{} }
func (m *UpdateSmtpCredentialRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSmtpCredentialRequest) ProtoMessage()    {}
func (*UpdateSmtpCredentialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fe524cfc1fe14a, []int{5}
}

func (m *UpdateSmtpCredentialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSmtpCredentialRequest.Unmarshal(m, b)
}
func (m *UpdateSmtpCredentialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSmtpCredentialRequest.Marshal(b, m, deterministic)
}
func (m *UpdateSmtpCredentialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSmtpCredentialRequest.Merge(m, src)
}
func (m *UpdateSmtpCredentialRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateSmtpCredentialRequest.Size(m)
}
func (m *UpdateSmtpCredentialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSmtpCredentialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSmtpCredentialRequest proto.InternalMessageInfo

func (m *UpdateSmtpCredentialRequest) GetSmtpCredential() *SmtpCredential {
	if m != nil {
		return m.SmtpCredential
	}
	return nil
}

func (m *UpdateSmtpCredentialRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

// Request for CloudMail.DeleteSmtpCredential.
type DeleteSmtpCredentialRequest struct {
	// Name of the SMTP credential to delete, like
	// "projects/1234/regions/us-east1/senders/abc/smtpCredentials/xyz".
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSmtpCredentialRequest) Reset()         { *m = DeleteSmtpCredentialRequest{} }
func (m *DeleteSmtpCredentialRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSmtpCredentialRequest) ProtoMessage()    {}
func (*DeleteSmtpCredentialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fe524cfc1fe14a, []int{6}
}

func (m *DeleteSmtpCredentialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSmtpCredentialRequest.Unmarshal(m, b)
}
func (m *DeleteSmtpCredentialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSmtpCredentialRequest.Marshal(b, m, deterministic)
}
func (m *DeleteSmtpCredentialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSmtpCredentialRequest.Merge(m, src)
}
func (m *DeleteSmtpCredentialRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSmtpCredentialRequest.Size(m)
}
func (m *DeleteSmtpCredentialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSmtpCredentialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSmtpCredentialRequest proto.InternalMessageInfo

func (m *DeleteSmtpCredentialRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*SmtpCredential)(nil), "google.cloud.mail.v1alpha3.SmtpCredential")
	proto.RegisterMapType((map[string]string)(nil), "google.cloud.mail.v1alpha3.SmtpCredential.LabelsEntry")
	proto.RegisterType((*ListSmtpCredentialsRequest)(nil), "google.cloud.mail.v1alpha3.ListSmtpCredentialsRequest")
	proto.RegisterType((*ListSmtpCredentialsResponse)(nil), "google.cloud.mail.v1alpha3.ListSmtpCredentialsResponse")
	proto.RegisterType((*GetSmtpCredentialRequest)(nil), "google.cloud.mail.v1alpha3.GetSmtpCredentialRequest")
	proto.RegisterType((*CreateSmtpCredentialRequest)(nil), "google.cloud.mail.v1alpha3.CreateSmtpCredentialRequest")
	proto.RegisterType((*UpdateSmtpCredentialRequest)(nil), "google.cloud.mail.v1alpha3.UpdateSmtpCredentialRequest")
	proto.RegisterType((*DeleteSmtpCredentialRequest)(nil), "google.cloud.mail.v1alpha3.DeleteSmtpCredentialRequest")
}

func init() {
	proto.RegisterFile("google/cloud/mail/v1alpha3/smtp_credential.proto", fileDescriptor_f0fe524cfc1fe14a)
}

var fileDescriptor_f0fe524cfc1fe14a = []byte{
	// 576 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xb5, 0x4d, 0x9b, 0xd2, 0x89, 0xd4, 0x56, 0xdb, 0x02, 0x96, 0x23, 0x41, 0xe4, 0x53,
	0x85, 0x90, 0xdd, 0x0f, 0x09, 0x01, 0x95, 0x90, 0x68, 0x28, 0x55, 0xa5, 0xb4, 0xaa, 0x52, 0x7a,
	0xe1, 0x62, 0x6d, 0xec, 0x89, 0xb1, 0xb2, 0xfe, 0xc0, 0xbb, 0x0e, 0xea, 0x8d, 0x67, 0xe1, 0x05,
	0xb8, 0xf2, 0x00, 0x3c, 0x14, 0x47, 0xb4, 0x6b, 0x3b, 0xd4, 0x96, 0xc3, 0x87, 0xb8, 0xed, 0xec,
	0xce, 0x6f, 0xe6, 0x3f, 0x3b, 0xb3, 0x0b, 0xfb, 0x41, 0x92, 0x04, 0x1c, 0x1d, 0x8f, 0x27, 0xb9,
	0xef, 0x44, 0x2c, 0xe4, 0xce, 0xfc, 0x80, 0xf1, 0xf4, 0x03, 0x3b, 0x72, 0x44, 0x24, 0x53, 0xd7,
	0xcb, 0xd0, 0xc7, 0x58, 0x86, 0x8c, 0xdb, 0x69, 0x96, 0xc8, 0x84, 0x9a, 0x05, 0x61, 0x6b, 0xc2,
	0x56, 0x84, 0x5d, 0x11, 0xe6, 0xa0, 0x8c, 0xa6, 0x3d, 0x27, 0xf9, 0xd4, 0x99, 0x86, 0xc8, 0x7d,
	0x37, 0x62, 0x62, 0x56, 0xd0, 0xe6, 0xe3, 0xa6, 0x87, 0x0c, 0x23, 0x14, 0x92, 0x45, 0x69, 0xe1,
	0x60, 0x7d, 0xef, 0xc0, 0xe6, 0x75, 0x24, 0xd3, 0xe1, 0x22, 0x2f, 0xa5, 0xb0, 0x1a, 0xb3, 0x08,
	0x0d, 0x32, 0x20, 0x7b, 0x1b, 0x63, 0xbd, 0xa6, 0x0f, 0x61, 0x3d, 0x17, 0x98, 0xb9, 0xa1, 0x6f,
	0xac, 0xe8, 0xed, 0xae, 0x32, 0xcf, 0x7d, 0x6a, 0xc2, 0xbd, 0x94, 0x09, 0xf1, 0x29, 0xc9, 0x7c,
	0xa3, 0xa3, 0x4f, 0x16, 0x36, 0x3d, 0x86, 0x9e, 0x97, 0x21, 0x93, 0xe8, 0xaa, 0xac, 0xc6, 0xea,
	0x80, 0xec, 0xf5, 0x0e, 0x4d, 0xbb, 0x2c, 0xa8, 0x92, 0x64, 0xbf, 0xab, 0x24, 0x8d, 0xa1, 0x70,
	0x57, 0x1b, 0x0a, 0xce, 0x53, 0x7f, 0x01, 0xaf, 0xfd, 0x19, 0x2e, 0xdc, 0x35, 0xbc, 0x0f, 0xbb,
	0x02, 0xb3, 0x79, 0xe8, 0xa1, 0xcb, 0x3c, 0x2f, 0xc9, 0x63, 0xe9, 0xea, 0x92, 0xba, 0x5a, 0x21,
	0x2d, 0xcf, 0x5e, 0x17, 0x47, 0x97, 0xaa, 0xc0, 0x43, 0xb8, 0xdf, 0x24, 0x50, 0x5d, 0xb6, 0xb1,
	0xae, 0x91, 0x9d, 0x3a, 0x72, 0xaa, 0x8e, 0xe8, 0x25, 0x74, 0x39, 0x9b, 0x20, 0x17, 0xc6, 0xc6,
	0xa0, 0xb3, 0xd7, 0x3b, 0x7c, 0x66, 0x2f, 0xef, 0x95, 0x5d, 0xbf, 0x64, 0x7b, 0xa4, 0xc1, 0xd3,
	0x58, 0x66, 0xb7, 0xe3, 0x32, 0x8a, 0xf9, 0x02, 0x7a, 0x77, 0xb6, 0xe9, 0x36, 0x74, 0x66, 0x78,
	0x5b, 0xb6, 0x41, 0x2d, 0xe9, 0x2e, 0xac, 0xcd, 0x19, 0xcf, 0xb1, 0xec, 0x41, 0x61, 0xbc, 0x5c,
	0x79, 0x4e, 0xac, 0x11, 0x98, 0xa3, 0x50, 0xc8, 0x7a, 0x12, 0x31, 0xc6, 0x8f, 0x39, 0x0a, 0x49,
	0x1f, 0x40, 0x37, 0x65, 0x19, 0xc6, 0xb2, 0x0c, 0x56, 0x5a, 0x6a, 0x7f, 0x1a, 0x72, 0x89, 0x59,
	0xd5, 0xd4, 0xc2, 0xb2, 0x24, 0xf4, 0x5b, 0xa3, 0x89, 0x34, 0x89, 0x05, 0xd2, 0x1b, 0xd8, 0x6e,
	0xcc, 0xaa, 0x30, 0x88, 0xbe, 0x81, 0x27, 0x7f, 0x7f, 0x03, 0xe3, 0x2d, 0x51, 0x0f, 0x6f, 0xd9,
	0x60, 0x9c, 0x61, 0x23, 0x69, 0x55, 0x41, 0xcb, 0x4c, 0x5a, 0xdf, 0x08, 0xf4, 0x87, 0x7a, 0x60,
	0xda, 0x99, 0x65, 0x55, 0x3f, 0x05, 0xda, 0x90, 0xff, 0x6b, 0xac, 0xb7, 0xeb, 0xa2, 0xce, 0x7d,
	0x7a, 0x0d, 0x5b, 0x0d, 0x6f, 0x3d, 0xe7, 0xff, 0x56, 0xeb, 0x66, 0x3d, 0xac, 0xf5, 0x95, 0x40,
	0xff, 0x46, 0x8f, 0x6b, 0xbb, 0xf4, 0x96, 0xa4, 0xe4, 0x7f, 0x93, 0xde, 0x79, 0x51, 0xea, 0x83,
	0xd0, 0x05, 0xb7, 0xbd, 0xa8, 0xb7, 0xea, 0x0f, 0xb9, 0x60, 0x62, 0x56, 0xbd, 0x28, 0xb5, 0xb6,
	0x0e, 0xa0, 0xff, 0x06, 0x39, 0x2e, 0x13, 0xdc, 0xd2, 0x9f, 0x93, 0xcf, 0x04, 0x1e, 0x79, 0x49,
	0xf4, 0x1b, 0xc5, 0x27, 0x3b, 0xf5, 0x68, 0x57, 0x4a, 0xc3, 0x15, 0x79, 0xff, 0xaa, 0x44, 0x82,
	0x84, 0xb3, 0x38, 0xb0, 0x93, 0x2c, 0x70, 0x02, 0x8c, 0xb5, 0x42, 0xa7, 0x38, 0x62, 0x69, 0x28,
	0xda, 0x3e, 0xd1, 0x63, 0x65, 0xfd, 0x20, 0xe4, 0xcb, 0x4a, 0xe7, 0x6c, 0x78, 0x31, 0xe9, 0x6a,
	0xe6, 0xe8, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x35, 0x44, 0x27, 0x41, 0x77, 0x05, 0x00, 0x00,
}
