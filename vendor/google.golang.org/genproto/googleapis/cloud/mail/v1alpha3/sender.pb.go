// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/mail/v1alpha3/sender.proto

package mail

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A role for sending outgoing mail.
type Sender struct {
	// The sender's resource name, like
	// "projects/prj-1234/regions/us-east1/senders/abc".
	// Read-only and ignored on CreateSenderRequest which uses the
	// parent/sender_id instead.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Cloud user labels for this resource.
	// http://go/label-developers-guide
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// True if the resource has been deleted.
	Deleted bool `protobuf:"varint,3,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// The URL of an AddressSet that authorizes the SMTP envelope from address,
	// to be specified in SendMessageRequest.envelope_from_address. This field is
	// optional and is only used for SMTP-relayed mail, or when
	// SendMessageRequest.envelope_from_authority is empty.
	DefaultEnvelopeFromAuthority string `protobuf:"bytes,4,opt,name=default_envelope_from_authority,json=defaultEnvelopeFromAuthority,proto3" json:"default_envelope_from_authority,omitempty"`
	// The URL of an EmailVerifiedAddress or AddressSet that authorizes the
	// Email address portion of the Internet Message From header field.
	// This field is optional and is only used for SMTP-relayed mail, or
	// when SendMessageRequest.header_from_authority is empty.
	DefaultHeaderFromAuthority string `protobuf:"bytes,9,opt,name=default_header_from_authority,json=defaultHeaderFromAuthority,proto3" json:"default_header_from_authority,omitempty"`
	// The creation timestamp.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last modified timestamp, set during create, update, delete, or
	// undelete.
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// The time the resource was marked deleted.
	DeleteTime           *timestamp.Timestamp `protobuf:"bytes,7,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Sender) Reset()         { *m = Sender{} }
func (m *Sender) String() string { return proto.CompactTextString(m) }
func (*Sender) ProtoMessage()    {}
func (*Sender) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d696989db64f33e, []int{0}
}

func (m *Sender) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sender.Unmarshal(m, b)
}
func (m *Sender) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sender.Marshal(b, m, deterministic)
}
func (m *Sender) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sender.Merge(m, src)
}
func (m *Sender) XXX_Size() int {
	return xxx_messageInfo_Sender.Size(m)
}
func (m *Sender) XXX_DiscardUnknown() {
	xxx_messageInfo_Sender.DiscardUnknown(m)
}

var xxx_messageInfo_Sender proto.InternalMessageInfo

func (m *Sender) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Sender) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Sender) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *Sender) GetDefaultEnvelopeFromAuthority() string {
	if m != nil {
		return m.DefaultEnvelopeFromAuthority
	}
	return ""
}

func (m *Sender) GetDefaultHeaderFromAuthority() string {
	if m != nil {
		return m.DefaultHeaderFromAuthority
	}
	return ""
}

func (m *Sender) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Sender) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *Sender) GetDeleteTime() *timestamp.Timestamp {
	if m != nil {
		return m.DeleteTime
	}
	return nil
}

// Represents an email address used in a message header. This is an RFC 5322 or
// RFC 6532 "mailbox".  It consists of an email address and an optional
// display name.
type Address struct {
	// The email address itself, such as "user@example.com". This is the RFC 5322
	// 'addr-spec' as extended by RFC 6532 for internationalized addresses.
	// Required.
	AddressSpec string `protobuf:"bytes,1,opt,name=address_spec,json=addressSpec,proto3" json:"address_spec,omitempty"`
	// An optional UTF-8 display name, such as "John Smith". This is the RFC 5322
	// 'display-name'.
	DisplayName          string   `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d696989db64f33e, []int{1}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetAddressSpec() string {
	if m != nil {
		return m.AddressSpec
	}
	return ""
}

func (m *Address) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

// A representation of an email message with common header fields and body types
// broken out into fields.  At least one of tos, ccs, and bccs must be
// non-empty.
type SimpleMessage struct {
	// "From" header field.  Required.
	From *Address `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// "To" recipients.  Will be used for the To header field and added to
	// the list of recipients for the message.
	To []*Address `protobuf:"bytes,2,rep,name=to,proto3" json:"to,omitempty"`
	// "Cc" recipients.  Will be used for the Cc header field and added to
	// the list of recipients for the message.
	Cc []*Address `protobuf:"bytes,3,rep,name=cc,proto3" json:"cc,omitempty"`
	// "Bcc" recipients.  Will not be added to the message, but will be
	// added to the list of recipients for the message.
	Bcc []*Address `protobuf:"bytes,4,rep,name=bcc,proto3" json:"bcc,omitempty"`
	// "Reply-To" header field.
	ReplyTo []*Address `protobuf:"bytes,5,rep,name=reply_to,json=replyTo,proto3" json:"reply_to,omitempty"`
	// "Subject" header field in UTF-8.
	Subject string `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject,omitempty"`
	// Value to use for the "Date" header field.  If not specified, the
	// system will populate the "Date" header field with the current time.
	Date *timestamp.Timestamp `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	// Message body in text/plain format.
	TextBody string `protobuf:"bytes,8,opt,name=text_body,json=textBody,proto3" json:"text_body,omitempty"`
	// Message body in text/html format.
	HtmlBody string `protobuf:"bytes,9,opt,name=html_body,json=htmlBody,proto3" json:"html_body,omitempty"`
	// Message attachments.  Using this will promote the message type to
	// multipart/mixed with the attachments after the body section.
	Attachments []*SimpleMessage_Attachment `protobuf:"bytes,10,rep,name=attachments,proto3" json:"attachments,omitempty"`
	// Related attachments, typically used for in-line images to be added to
	// the multipart/related portion of the message which contains the
	// body of message.  See RFC 2387.
	RelatedAttachments   []*SimpleMessage_Attachment `protobuf:"bytes,11,rep,name=related_attachments,json=relatedAttachments,proto3" json:"related_attachments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SimpleMessage) Reset()         { *m = SimpleMessage{} }
func (m *SimpleMessage) String() string { return proto.CompactTextString(m) }
func (*SimpleMessage) ProtoMessage()    {}
func (*SimpleMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d696989db64f33e, []int{2}
}

func (m *SimpleMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleMessage.Unmarshal(m, b)
}
func (m *SimpleMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleMessage.Marshal(b, m, deterministic)
}
func (m *SimpleMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleMessage.Merge(m, src)
}
func (m *SimpleMessage) XXX_Size() int {
	return xxx_messageInfo_SimpleMessage.Size(m)
}
func (m *SimpleMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleMessage proto.InternalMessageInfo

func (m *SimpleMessage) GetFrom() *Address {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *SimpleMessage) GetTo() []*Address {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *SimpleMessage) GetCc() []*Address {
	if m != nil {
		return m.Cc
	}
	return nil
}

func (m *SimpleMessage) GetBcc() []*Address {
	if m != nil {
		return m.Bcc
	}
	return nil
}

func (m *SimpleMessage) GetReplyTo() []*Address {
	if m != nil {
		return m.ReplyTo
	}
	return nil
}

func (m *SimpleMessage) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *SimpleMessage) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *SimpleMessage) GetTextBody() string {
	if m != nil {
		return m.TextBody
	}
	return ""
}

func (m *SimpleMessage) GetHtmlBody() string {
	if m != nil {
		return m.HtmlBody
	}
	return ""
}

func (m *SimpleMessage) GetAttachments() []*SimpleMessage_Attachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *SimpleMessage) GetRelatedAttachments() []*SimpleMessage_Attachment {
	if m != nil {
		return m.RelatedAttachments
	}
	return nil
}

// A message attachment.
type SimpleMessage_Attachment struct {
	// MIME media type.
	ContentType string `protobuf:"bytes,1,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// Optional value for "filename" parameter.
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	// The Content-ID header field from RFC 2387, only for related_attachments.
	// This value can be used in the html_body for in-line images.
	ContentId string `protobuf:"bytes,4,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
	// Attachment content.
	Content              []byte   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleMessage_Attachment) Reset()         { *m = SimpleMessage_Attachment{} }
func (m *SimpleMessage_Attachment) String() string { return proto.CompactTextString(m) }
func (*SimpleMessage_Attachment) ProtoMessage()    {}
func (*SimpleMessage_Attachment) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d696989db64f33e, []int{2, 0}
}

func (m *SimpleMessage_Attachment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleMessage_Attachment.Unmarshal(m, b)
}
func (m *SimpleMessage_Attachment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleMessage_Attachment.Marshal(b, m, deterministic)
}
func (m *SimpleMessage_Attachment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleMessage_Attachment.Merge(m, src)
}
func (m *SimpleMessage_Attachment) XXX_Size() int {
	return xxx_messageInfo_SimpleMessage_Attachment.Size(m)
}
func (m *SimpleMessage_Attachment) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleMessage_Attachment.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleMessage_Attachment proto.InternalMessageInfo

func (m *SimpleMessage_Attachment) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *SimpleMessage_Attachment) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *SimpleMessage_Attachment) GetContentId() string {
	if m != nil {
		return m.ContentId
	}
	return ""
}

func (m *SimpleMessage_Attachment) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// Object for sending a message which is already properly formatted in
// RFC 5322 or RFC 6532 format.
type Rfc822Message struct {
	// The list of email addresses to send the message to in RFC 5321 format as
	// extended by RFC 6531.  This should not include the "display name"
	// or other extended parts of addresses from RFC 5322.
	// There must be at least one recipient.
	EnvelopeTos []string `protobuf:"bytes,1,rep,name=envelope_tos,json=envelopeTos,proto3" json:"envelope_tos,omitempty"`
	// An email message in Internet Message Format.  Cloud Mail supports the
	// latest updates to the RFC 822 standard (RFC 5322 and RFC 6532).
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rfc822Message) Reset()         { *m = Rfc822Message{} }
func (m *Rfc822Message) String() string { return proto.CompactTextString(m) }
func (*Rfc822Message) ProtoMessage()    {}
func (*Rfc822Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d696989db64f33e, []int{3}
}

func (m *Rfc822Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rfc822Message.Unmarshal(m, b)
}
func (m *Rfc822Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rfc822Message.Marshal(b, m, deterministic)
}
func (m *Rfc822Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rfc822Message.Merge(m, src)
}
func (m *Rfc822Message) XXX_Size() int {
	return xxx_messageInfo_Rfc822Message.Size(m)
}
func (m *Rfc822Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Rfc822Message.DiscardUnknown(m)
}

var xxx_messageInfo_Rfc822Message proto.InternalMessageInfo

func (m *Rfc822Message) GetEnvelopeTos() []string {
	if m != nil {
		return m.EnvelopeTos
	}
	return nil
}

func (m *Rfc822Message) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

// Request for CloudMail.ListSenders.
type ListSendersRequest struct {
	// Name of the parent whose senders are to be retrieved, like
	// "projects/1234".
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The region whose Senders should be listed. For example, "us-east1".
	Region string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	// A token returned in ListSendersResponse.next_page_token for a previous
	// invocation of ListSenders.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Indicates if user wants to list deleted senders. If false, deleted senders
	// will be omitted from the returned list.
	ShowDeleted bool `protobuf:"varint,4,opt,name=show_deleted,json=showDeleted,proto3" json:"show_deleted,omitempty"`
	// Optional. Specifies subset of senders to retrieve.
	// Case-sensitive and has the following syntax:
	//
	// field = value [AND [field = value]]...
	//
	// where **field** is 'labels.[KEY]' and '[KEY]' is a label key.
	// **value** can be '*' to match all values.
	//
	// Example: labels.env = staging AND labels.starred = *
	Filter               string   `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSendersRequest) Reset()         { *m = ListSendersRequest{} }
func (m *ListSendersRequest) String() string { return proto.CompactTextString(m) }
func (*ListSendersRequest) ProtoMessage()    {}
func (*ListSendersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d696989db64f33e, []int{4}
}

func (m *ListSendersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSendersRequest.Unmarshal(m, b)
}
func (m *ListSendersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSendersRequest.Marshal(b, m, deterministic)
}
func (m *ListSendersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSendersRequest.Merge(m, src)
}
func (m *ListSendersRequest) XXX_Size() int {
	return xxx_messageInfo_ListSendersRequest.Size(m)
}
func (m *ListSendersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSendersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSendersRequest proto.InternalMessageInfo

func (m *ListSendersRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListSendersRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ListSendersRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListSendersRequest) GetShowDeleted() bool {
	if m != nil {
		return m.ShowDeleted
	}
	return false
}

func (m *ListSendersRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

// Response for CloudMail.ListSenders.
type ListSendersResponse struct {
	// The senders retrieved.
	Senders []*Sender `protobuf:"bytes,1,rep,name=senders,proto3" json:"senders,omitempty"`
	// A pagination token that should be passed as
	// ListSendersRequest.page_token to get the next page of results. If
	// empty, no futher results are available.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSendersResponse) Reset()         { *m = ListSendersResponse{} }
func (m *ListSendersResponse) String() string { return proto.CompactTextString(m) }
func (*ListSendersResponse) ProtoMessage()    {}
func (*ListSendersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d696989db64f33e, []int{5}
}

func (m *ListSendersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSendersResponse.Unmarshal(m, b)
}
func (m *ListSendersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSendersResponse.Marshal(b, m, deterministic)
}
func (m *ListSendersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSendersResponse.Merge(m, src)
}
func (m *ListSendersResponse) XXX_Size() int {
	return xxx_messageInfo_ListSendersResponse.Size(m)
}
func (m *ListSendersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSendersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSendersResponse proto.InternalMessageInfo

func (m *ListSendersResponse) GetSenders() []*Sender {
	if m != nil {
		return m.Senders
	}
	return nil
}

func (m *ListSendersResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request for CloudMail.GetSender.
type GetSenderRequest struct {
	// Name of the sender to retrieve, like
	// "projects/1234/regions/us-east1/senders/abc".
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSenderRequest) Reset()         { *m = GetSenderRequest{} }
func (m *GetSenderRequest) String() string { return proto.CompactTextString(m) }
func (*GetSenderRequest) ProtoMessage()    {}
func (*GetSenderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d696989db64f33e, []int{6}
}

func (m *GetSenderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSenderRequest.Unmarshal(m, b)
}
func (m *GetSenderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSenderRequest.Marshal(b, m, deterministic)
}
func (m *GetSenderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSenderRequest.Merge(m, src)
}
func (m *GetSenderRequest) XXX_Size() int {
	return xxx_messageInfo_GetSenderRequest.Size(m)
}
func (m *GetSenderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSenderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSenderRequest proto.InternalMessageInfo

func (m *GetSenderRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request for CloudMail.CreateSender.
type CreateSenderRequest struct {
	// The resource name of the parent; for example, "projects/abc-123".
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The region in which to create the Sender. For example, "us-east1".
	Region string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	// The client-assigned name for the sender. The ID must be an ASCII string
	// consisting only of uppercase and lowercase letters, digits, and hyphens.
	// The maximum length is 128 bytes.
	SenderId string `protobuf:"bytes,3,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	// The sender to create.
	Sender               *Sender  `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSenderRequest) Reset()         { *m = CreateSenderRequest{} }
func (m *CreateSenderRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSenderRequest) ProtoMessage()    {}
func (*CreateSenderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d696989db64f33e, []int{7}
}

func (m *CreateSenderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSenderRequest.Unmarshal(m, b)
}
func (m *CreateSenderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSenderRequest.Marshal(b, m, deterministic)
}
func (m *CreateSenderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSenderRequest.Merge(m, src)
}
func (m *CreateSenderRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSenderRequest.Size(m)
}
func (m *CreateSenderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSenderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSenderRequest proto.InternalMessageInfo

func (m *CreateSenderRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateSenderRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateSenderRequest) GetSenderId() string {
	if m != nil {
		return m.SenderId
	}
	return ""
}

func (m *CreateSenderRequest) GetSender() *Sender {
	if m != nil {
		return m.Sender
	}
	return nil
}

// Request for CloudMail.UpdateSender.
type UpdateSenderRequest struct {
	// The sender to update.
	Sender *Sender `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// The fields to update. Required.
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateSenderRequest) Reset()         { *m = UpdateSenderRequest{} }
func (m *UpdateSenderRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSenderRequest) ProtoMessage()    {}
func (*UpdateSenderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d696989db64f33e, []int{8}
}

func (m *UpdateSenderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSenderRequest.Unmarshal(m, b)
}
func (m *UpdateSenderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSenderRequest.Marshal(b, m, deterministic)
}
func (m *UpdateSenderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSenderRequest.Merge(m, src)
}
func (m *UpdateSenderRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateSenderRequest.Size(m)
}
func (m *UpdateSenderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSenderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSenderRequest proto.InternalMessageInfo

func (m *UpdateSenderRequest) GetSender() *Sender {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *UpdateSenderRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

// Request for CloudMail.DeleteSender.
type DeleteSenderRequest struct {
	// Name of the sender to delete, like
	// "projects/1234/regions/us-east1/senders/abc".
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSenderRequest) Reset()         { *m = DeleteSenderRequest{} }
func (m *DeleteSenderRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSenderRequest) ProtoMessage()    {}
func (*DeleteSenderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d696989db64f33e, []int{9}
}

func (m *DeleteSenderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSenderRequest.Unmarshal(m, b)
}
func (m *DeleteSenderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSenderRequest.Marshal(b, m, deterministic)
}
func (m *DeleteSenderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSenderRequest.Merge(m, src)
}
func (m *DeleteSenderRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSenderRequest.Size(m)
}
func (m *DeleteSenderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSenderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSenderRequest proto.InternalMessageInfo

func (m *DeleteSenderRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request for CloudMail.UndeleteSender.
type UndeleteSenderRequest struct {
	// Name of the sender to undelete, like
	// "projects/1234/regions/us-east1/senders/abc".
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UndeleteSenderRequest) Reset()         { *m = UndeleteSenderRequest{} }
func (m *UndeleteSenderRequest) String() string { return proto.CompactTextString(m) }
func (*UndeleteSenderRequest) ProtoMessage()    {}
func (*UndeleteSenderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d696989db64f33e, []int{10}
}

func (m *UndeleteSenderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UndeleteSenderRequest.Unmarshal(m, b)
}
func (m *UndeleteSenderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UndeleteSenderRequest.Marshal(b, m, deterministic)
}
func (m *UndeleteSenderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UndeleteSenderRequest.Merge(m, src)
}
func (m *UndeleteSenderRequest) XXX_Size() int {
	return xxx_messageInfo_UndeleteSenderRequest.Size(m)
}
func (m *UndeleteSenderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UndeleteSenderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UndeleteSenderRequest proto.InternalMessageInfo

func (m *UndeleteSenderRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request for CloudMail.ExpungeSender.
type ExpungeSenderRequest struct {
	// Name of the sender to expunge, like
	// "projects/1234/regions/us-east1/senders/abc".
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExpungeSenderRequest) Reset()         { *m = ExpungeSenderRequest{} }
func (m *ExpungeSenderRequest) String() string { return proto.CompactTextString(m) }
func (*ExpungeSenderRequest) ProtoMessage()    {}
func (*ExpungeSenderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d696989db64f33e, []int{11}
}

func (m *ExpungeSenderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpungeSenderRequest.Unmarshal(m, b)
}
func (m *ExpungeSenderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpungeSenderRequest.Marshal(b, m, deterministic)
}
func (m *ExpungeSenderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpungeSenderRequest.Merge(m, src)
}
func (m *ExpungeSenderRequest) XXX_Size() int {
	return xxx_messageInfo_ExpungeSenderRequest.Size(m)
}
func (m *ExpungeSenderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpungeSenderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExpungeSenderRequest proto.InternalMessageInfo

func (m *ExpungeSenderRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request for CloudMail.SendMessage.
type SendMessageRequest struct {
	// Name of the sender used to send this message, like
	// "projects/1234/regions/us-east1/senders/abc".
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// The URL of an AddressSet that authorizes the envelope_from_address.
	// If omitted, the sender's default_envelope_from_authority will be used.
	EnvelopeFromAuthority string `protobuf:"bytes,2,opt,name=envelope_from_authority,json=envelopeFromAuthority,proto3" json:"envelope_from_authority,omitempty"`
	// The URL of an EmailVerifiedAddress or AddressSet that authorizes
	// the RFC 822 header from address. If omitted, the sender's
	// default_header_from_authority will be used.
	HeaderFromAuthority string `protobuf:"bytes,6,opt,name=header_from_authority,json=headerFromAuthority,proto3" json:"header_from_authority,omitempty"`
	// SMTP envelope from which to send the message. This must match the
	// AddressSet indicated by the envelope_from_authority (if provided) or the
	// Sender's default_envelope_from_authority.
	EnvelopeFromAddress string `protobuf:"bytes,3,opt,name=envelope_from_address,json=envelopeFromAddress,proto3" json:"envelope_from_address,omitempty"`
	// Cloud Mail provides two different ways to send messages.
	// SimpleMessage is the simpler interface for developers, allowing
	// Cloud Mail to properly format the message and derive the
	// recipients.
	// Rfc822Message is for sending messages which are already properly
	// formatted.  This can be used for more advanced message features not
	// supported by SimpleMessage, or sending messages that were already
	// formatted by other systems.
	// Note: The Internet Message Format looks deceptively simple, but has a lot
	// of nuances, we recommend that you use an existing library to
	// generate your messages or let us do so with SimpleMessage.
	//
	// Types that are valid to be assigned to Message:
	//	*SendMessageRequest_SimpleMessage
	//	*SendMessageRequest_Rfc822Message
	Message              isSendMessageRequest_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SendMessageRequest) Reset()         { *m = SendMessageRequest{} }
func (m *SendMessageRequest) String() string { return proto.CompactTextString(m) }
func (*SendMessageRequest) ProtoMessage()    {}
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d696989db64f33e, []int{12}
}

func (m *SendMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageRequest.Unmarshal(m, b)
}
func (m *SendMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageRequest.Marshal(b, m, deterministic)
}
func (m *SendMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageRequest.Merge(m, src)
}
func (m *SendMessageRequest) XXX_Size() int {
	return xxx_messageInfo_SendMessageRequest.Size(m)
}
func (m *SendMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageRequest proto.InternalMessageInfo

func (m *SendMessageRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *SendMessageRequest) GetEnvelopeFromAuthority() string {
	if m != nil {
		return m.EnvelopeFromAuthority
	}
	return ""
}

func (m *SendMessageRequest) GetHeaderFromAuthority() string {
	if m != nil {
		return m.HeaderFromAuthority
	}
	return ""
}

func (m *SendMessageRequest) GetEnvelopeFromAddress() string {
	if m != nil {
		return m.EnvelopeFromAddress
	}
	return ""
}

type isSendMessageRequest_Message interface {
	isSendMessageRequest_Message()
}

type SendMessageRequest_SimpleMessage struct {
	SimpleMessage *SimpleMessage `protobuf:"bytes,4,opt,name=simple_message,json=simpleMessage,proto3,oneof"`
}

type SendMessageRequest_Rfc822Message struct {
	Rfc822Message *Rfc822Message `protobuf:"bytes,5,opt,name=rfc822_message,json=rfc822Message,proto3,oneof"`
}

func (*SendMessageRequest_SimpleMessage) isSendMessageRequest_Message() {}

func (*SendMessageRequest_Rfc822Message) isSendMessageRequest_Message() {}

func (m *SendMessageRequest) GetMessage() isSendMessageRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SendMessageRequest) GetSimpleMessage() *SimpleMessage {
	if x, ok := m.GetMessage().(*SendMessageRequest_SimpleMessage); ok {
		return x.SimpleMessage
	}
	return nil
}

func (m *SendMessageRequest) GetRfc822Message() *Rfc822Message {
	if x, ok := m.GetMessage().(*SendMessageRequest_Rfc822Message); ok {
		return x.Rfc822Message
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SendMessageRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SendMessageRequest_OneofMarshaler, _SendMessageRequest_OneofUnmarshaler, _SendMessageRequest_OneofSizer, []interface{}{
		(*SendMessageRequest_SimpleMessage)(nil),
		(*SendMessageRequest_Rfc822Message)(nil),
	}
}

func _SendMessageRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SendMessageRequest)
	// message
	switch x := m.Message.(type) {
	case *SendMessageRequest_SimpleMessage:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SimpleMessage); err != nil {
			return err
		}
	case *SendMessageRequest_Rfc822Message:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rfc822Message); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SendMessageRequest.Message has unexpected type %T", x)
	}
	return nil
}

func _SendMessageRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SendMessageRequest)
	switch tag {
	case 4: // message.simple_message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SimpleMessage)
		err := b.DecodeMessage(msg)
		m.Message = &SendMessageRequest_SimpleMessage{msg}
		return true, err
	case 5: // message.rfc822_message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Rfc822Message)
		err := b.DecodeMessage(msg)
		m.Message = &SendMessageRequest_Rfc822Message{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SendMessageRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SendMessageRequest)
	// message
	switch x := m.Message.(type) {
	case *SendMessageRequest_SimpleMessage:
		s := proto.Size(x.SimpleMessage)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SendMessageRequest_Rfc822Message:
		s := proto.Size(x.Rfc822Message)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Response for CloudMail.SendMessage.
type SendMessageResponse struct {
	// RFC 822 message id of the sent message.  This is from the
	// Message-ID header field of the message.  This is either generated
	// by Cloud Mail or parsed out of the Rfc822Message payload, and can
	// be used to trace the message in the Cloud Mail Stackdriver Logs,
	// correlated to bounces, or searched for in user mailboxes.
	Rfc822MessageId      string   `protobuf:"bytes,1,opt,name=rfc822_message_id,json=rfc822MessageId,proto3" json:"rfc822_message_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageResponse) Reset()         { *m = SendMessageResponse{} }
func (m *SendMessageResponse) String() string { return proto.CompactTextString(m) }
func (*SendMessageResponse) ProtoMessage()    {}
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d696989db64f33e, []int{13}
}

func (m *SendMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageResponse.Unmarshal(m, b)
}
func (m *SendMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageResponse.Marshal(b, m, deterministic)
}
func (m *SendMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageResponse.Merge(m, src)
}
func (m *SendMessageResponse) XXX_Size() int {
	return xxx_messageInfo_SendMessageResponse.Size(m)
}
func (m *SendMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageResponse proto.InternalMessageInfo

func (m *SendMessageResponse) GetRfc822MessageId() string {
	if m != nil {
		return m.Rfc822MessageId
	}
	return ""
}

func init() {
	proto.RegisterType((*Sender)(nil), "google.cloud.mail.v1alpha3.Sender")
	proto.RegisterMapType((map[string]string)(nil), "google.cloud.mail.v1alpha3.Sender.LabelsEntry")
	proto.RegisterType((*Address)(nil), "google.cloud.mail.v1alpha3.Address")
	proto.RegisterType((*SimpleMessage)(nil), "google.cloud.mail.v1alpha3.SimpleMessage")
	proto.RegisterType((*SimpleMessage_Attachment)(nil), "google.cloud.mail.v1alpha3.SimpleMessage.Attachment")
	proto.RegisterType((*Rfc822Message)(nil), "google.cloud.mail.v1alpha3.Rfc822Message")
	proto.RegisterType((*ListSendersRequest)(nil), "google.cloud.mail.v1alpha3.ListSendersRequest")
	proto.RegisterType((*ListSendersResponse)(nil), "google.cloud.mail.v1alpha3.ListSendersResponse")
	proto.RegisterType((*GetSenderRequest)(nil), "google.cloud.mail.v1alpha3.GetSenderRequest")
	proto.RegisterType((*CreateSenderRequest)(nil), "google.cloud.mail.v1alpha3.CreateSenderRequest")
	proto.RegisterType((*UpdateSenderRequest)(nil), "google.cloud.mail.v1alpha3.UpdateSenderRequest")
	proto.RegisterType((*DeleteSenderRequest)(nil), "google.cloud.mail.v1alpha3.DeleteSenderRequest")
	proto.RegisterType((*UndeleteSenderRequest)(nil), "google.cloud.mail.v1alpha3.UndeleteSenderRequest")
	proto.RegisterType((*ExpungeSenderRequest)(nil), "google.cloud.mail.v1alpha3.ExpungeSenderRequest")
	proto.RegisterType((*SendMessageRequest)(nil), "google.cloud.mail.v1alpha3.SendMessageRequest")
	proto.RegisterType((*SendMessageResponse)(nil), "google.cloud.mail.v1alpha3.SendMessageResponse")
}

func init() {
	proto.RegisterFile("google/cloud/mail/v1alpha3/sender.proto", fileDescriptor_9d696989db64f33e)
}

var fileDescriptor_9d696989db64f33e = []byte{
	// 1095 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0x4b, 0x6f, 0xdb, 0x46,
	0x10, 0x2e, 0x25, 0x59, 0x8f, 0xa1, 0x9d, 0xa4, 0xab, 0x38, 0x25, 0x94, 0xa6, 0x51, 0x58, 0x20,
	0x75, 0x52, 0x80, 0x42, 0x95, 0x3e, 0xd2, 0xa4, 0x08, 0x60, 0xa7, 0x4e, 0x62, 0xc0, 0x6e, 0x0d,
	0xda, 0xe9, 0xa1, 0x17, 0x62, 0x45, 0x8e, 0x24, 0xd6, 0x24, 0x97, 0xe5, 0xae, 0x5c, 0x0b, 0xbd,
	0xf6, 0xdc, 0x9f, 0xd0, 0x43, 0xff, 0x62, 0x2f, 0x45, 0x2f, 0x2d, 0xf6, 0x41, 0x59, 0x32, 0x14,
	0x5b, 0x46, 0x6f, 0x9c, 0xe1, 0xf7, 0x7d, 0x3b, 0x33, 0x3b, 0x3b, 0xbb, 0xf0, 0xc9, 0x88, 0xb1,
	0x51, 0x82, 0xbd, 0x30, 0x61, 0x93, 0xa8, 0x97, 0xd2, 0x38, 0xe9, 0x9d, 0x7e, 0x46, 0x93, 0x7c,
	0x4c, 0x9f, 0xf4, 0x38, 0x66, 0x11, 0x16, 0x5e, 0x5e, 0x30, 0xc1, 0x48, 0x47, 0x03, 0x3d, 0x05,
	0xf4, 0x24, 0xd0, 0x2b, 0x81, 0x9d, 0xae, 0x11, 0x51, 0xc8, 0xc1, 0x64, 0xd8, 0x1b, 0xc6, 0x98,
	0x44, 0x41, 0x4a, 0xf9, 0x89, 0x66, 0x77, 0xee, 0x5f, 0x44, 0x88, 0x38, 0x45, 0x2e, 0x68, 0x9a,
	0x6b, 0x80, 0xfb, 0x4f, 0x15, 0xea, 0x47, 0x6a, 0x3d, 0x42, 0xa0, 0x96, 0xd1, 0x14, 0x1d, 0xab,
	0x6b, 0x6d, 0xb5, 0x7c, 0xf5, 0x4d, 0x5e, 0x41, 0x3d, 0xa1, 0x03, 0x4c, 0xb8, 0x53, 0xe9, 0x56,
	0xb7, 0xec, 0xbe, 0xe7, 0xbd, 0x3b, 0x1c, 0x4f, 0xeb, 0x78, 0xfb, 0x8a, 0xb0, 0x9b, 0x89, 0x62,
	0xea, 0x1b, 0x36, 0x71, 0xa0, 0x11, 0x61, 0x82, 0x02, 0x23, 0xa7, 0xda, 0xb5, 0xb6, 0x9a, 0x7e,
	0x69, 0x92, 0x5d, 0xb8, 0x1f, 0xe1, 0x90, 0x4e, 0x12, 0x11, 0x60, 0x76, 0x8a, 0x09, 0xcb, 0x31,
	0x18, 0x16, 0x2c, 0x0d, 0xe8, 0x44, 0x8c, 0x59, 0x11, 0x8b, 0xa9, 0x53, 0x53, 0x01, 0x7d, 0x68,
	0x60, 0xbb, 0x06, 0xf5, 0xaa, 0x60, 0xe9, 0x76, 0x89, 0x21, 0xdb, 0x70, 0xaf, 0x94, 0x19, 0x23,
	0x8d, 0xb0, 0xb8, 0x28, 0xd2, 0x52, 0x22, 0x1d, 0x03, 0x7a, 0xa3, 0x30, 0x8b, 0x12, 0xcf, 0xc1,
	0x0e, 0x0b, 0xa4, 0x02, 0x03, 0x59, 0x24, 0x67, 0xad, 0x6b, 0x6d, 0xd9, 0xfd, 0x4e, 0x99, 0x70,
	0x59, 0x41, 0xef, 0xb8, 0xac, 0xa0, 0x0f, 0x1a, 0x2e, 0x1d, 0x92, 0x3c, 0xc9, 0xa3, 0x19, 0xb9,
	0x7e, 0x35, 0x59, 0xc3, 0x4b, 0xb2, 0x2e, 0x87, 0x26, 0x37, 0xae, 0x26, 0x6b, 0xb8, 0x74, 0x74,
	0xbe, 0x06, 0x7b, 0xae, 0xe2, 0xe4, 0x16, 0x54, 0x4f, 0x70, 0x6a, 0x36, 0x51, 0x7e, 0x92, 0xdb,
	0xb0, 0x76, 0x4a, 0x93, 0x09, 0x3a, 0x15, 0xe5, 0xd3, 0xc6, 0xb3, 0xca, 0x53, 0xcb, 0xfd, 0x1e,
	0x1a, 0xdb, 0x51, 0x54, 0x20, 0xe7, 0xe4, 0x01, 0xac, 0x53, 0xfd, 0x19, 0xf0, 0x1c, 0x43, 0xc3,
	0xb7, 0x8d, 0xef, 0x28, 0xc7, 0x50, 0x42, 0xa2, 0x98, 0xe7, 0x09, 0x9d, 0x06, 0xaa, 0x4f, 0xb4,
	0x9c, 0x6d, 0x7c, 0xdf, 0xd1, 0x14, 0xdd, 0xbf, 0xd6, 0x60, 0xe3, 0x28, 0x4e, 0xf3, 0x04, 0x0f,
	0x90, 0x73, 0x3a, 0x42, 0xf2, 0x15, 0xd4, 0xe4, 0x46, 0x28, 0x3d, 0xbb, 0xff, 0xf1, 0x65, 0xed,
	0x63, 0x42, 0xf1, 0x15, 0x81, 0x3c, 0x81, 0x8a, 0x60, 0xa6, 0xeb, 0x56, 0xa2, 0x55, 0x04, 0x93,
	0xa4, 0x30, 0x74, 0xaa, 0xd7, 0x20, 0x85, 0x21, 0xf9, 0x02, 0xaa, 0x83, 0x30, 0x74, 0x6a, 0xab,
	0xb3, 0x24, 0x9e, 0xbc, 0x80, 0x66, 0x81, 0x79, 0x32, 0x0d, 0x04, 0x73, 0xd6, 0x56, 0xe7, 0x36,
	0x14, 0xe9, 0x98, 0xc9, 0x23, 0xc1, 0x27, 0x83, 0x9f, 0x30, 0x14, 0xaa, 0x5b, 0x5a, 0x7e, 0x69,
	0x12, 0x0f, 0x6a, 0xb2, 0x35, 0x56, 0xe8, 0x03, 0x85, 0x23, 0x77, 0xa1, 0x25, 0xf0, 0x4c, 0x04,
	0x03, 0x16, 0x4d, 0x9d, 0xa6, 0xd2, 0x6a, 0x4a, 0xc7, 0x0e, 0x8b, 0xa6, 0xf2, 0xe7, 0x58, 0xa4,
	0x89, 0xfe, 0xa9, 0x0f, 0x41, 0x53, 0x3a, 0xd4, 0xcf, 0x1f, 0xc0, 0xa6, 0x42, 0xd0, 0x70, 0x9c,
	0x62, 0x26, 0xb8, 0x03, 0x2a, 0x8d, 0xcf, 0x2f, 0x3d, 0xe3, 0xf3, 0xbb, 0xeb, 0x6d, 0xcf, 0xc8,
	0xfe, 0xbc, 0x10, 0x41, 0x68, 0x17, 0x98, 0x50, 0x81, 0x51, 0x30, 0xaf, 0x6f, 0xff, 0x0f, 0x7d,
	0x62, 0x04, 0xcf, 0x5d, 0xbc, 0xf3, 0x9b, 0x05, 0x70, 0x6e, 0xcb, 0x06, 0x0d, 0x59, 0x26, 0x30,
	0x13, 0x81, 0x98, 0xe6, 0xe5, 0x20, 0xb3, 0x8d, 0xef, 0x78, 0x9a, 0x23, 0xe9, 0x40, 0x73, 0x18,
	0x27, 0x38, 0xd7, 0xbf, 0x33, 0x9b, 0xdc, 0x03, 0x28, 0xe9, 0x71, 0x64, 0x86, 0x4e, 0xcb, 0x78,
	0xf6, 0x22, 0xb9, 0x5f, 0xc6, 0x50, 0x23, 0x6c, 0xdd, 0x2f, 0x4d, 0x77, 0x1f, 0x36, 0xfc, 0x61,
	0xf8, 0xb4, 0xdf, 0x2f, 0x9b, 0xfe, 0x01, 0xac, 0xcf, 0x66, 0x99, 0x60, 0xdc, 0xb1, 0xba, 0x55,
	0x19, 0x48, 0xe9, 0x3b, 0x66, 0x6a, 0x20, 0xe6, 0x74, 0x9a, 0x30, 0x1a, 0xa9, 0x38, 0xd6, 0xfd,
	0xd2, 0x74, 0xff, 0xb0, 0x80, 0xec, 0xc7, 0x5c, 0xe8, 0x69, 0xca, 0x7d, 0xfc, 0x79, 0x82, 0x5c,
	0x90, 0x3b, 0x50, 0xcf, 0x69, 0x21, 0x57, 0xd7, 0x69, 0x19, 0x4b, 0xfa, 0x0b, 0x1c, 0xc5, 0x2c,
	0x33, 0xf9, 0x18, 0x4b, 0x66, 0x93, 0xd3, 0x91, 0x5c, 0xff, 0x04, 0x33, 0x15, 0x71, 0xcb, 0x6f,
	0x49, 0xcf, 0xb1, 0x74, 0xc8, 0x10, 0xf9, 0x98, 0xfd, 0x12, 0x94, 0x53, 0xb9, 0xa6, 0xa6, 0xb2,
	0x2d, 0x7d, 0xdf, 0x9a, 0xc9, 0x7c, 0x07, 0xea, 0xc3, 0x38, 0x11, 0x58, 0xa8, 0x51, 0xd8, 0xf2,
	0x8d, 0xe5, 0xfe, 0x0a, 0xed, 0x85, 0xf8, 0x78, 0xce, 0x32, 0x8e, 0xe4, 0x1b, 0x68, 0xe8, 0x8b,
	0x4b, 0xe7, 0x6b, 0xf7, 0xdd, 0xab, 0xef, 0x0a, 0xbf, 0xa4, 0x90, 0x87, 0x70, 0x33, 0x93, 0x3d,
	0x3c, 0x17, 0xb3, 0xce, 0x67, 0x43, 0xba, 0x0f, 0xcb, 0xb8, 0xdd, 0x87, 0x70, 0xeb, 0x35, 0x9a,
	0xb5, 0xcb, 0xd2, 0x2c, 0xb9, 0xb8, 0x64, 0x15, 0xdb, 0x2f, 0xd5, 0x78, 0x5e, 0xc4, 0x5e, 0xb7,
	0x8c, 0x77, 0xa1, 0xa5, 0x43, 0x94, 0x3d, 0xa1, 0xab, 0xd8, 0xd4, 0x8e, 0xbd, 0x88, 0x3c, 0x83,
	0xba, 0xfe, 0x56, 0xe5, 0x5b, 0x2d, 0x63, 0xc3, 0x70, 0x7f, 0xb7, 0xa0, 0xfd, 0x56, 0x5d, 0x01,
	0x8b, 0x01, 0x9e, 0x6b, 0x5a, 0xd7, 0xd5, 0x9c, 0xbb, 0x84, 0xe4, 0x13, 0x40, 0x65, 0xb2, 0x6c,
	0x7e, 0xbc, 0x92, 0xaf, 0x84, 0x03, 0xca, 0x4f, 0xca, 0x4b, 0x48, 0x7e, 0xbb, 0x8f, 0xa0, 0xad,
	0x77, 0xfe, 0xea, 0xe2, 0x7e, 0x0a, 0x9b, 0x6f, 0xb3, 0x68, 0x45, 0xf0, 0x63, 0xb8, 0xbd, 0x7b,
	0x96, 0x4f, 0xb2, 0xd1, 0x0a, 0xd8, 0x7f, 0x2b, 0x40, 0x24, 0xca, 0x1c, 0xa4, 0xb9, 0x4d, 0x9b,
	0xab, 0x49, 0x6b, 0x96, 0xef, 0x97, 0xf0, 0xc1, 0xbb, 0xde, 0x0c, 0x7a, 0x17, 0x37, 0x71, 0xe9,
	0x63, 0xa1, 0x0f, 0x9b, 0xcb, 0x1f, 0x09, 0x7a, 0x10, 0xb7, 0xc7, 0x4b, 0x5e, 0x07, 0x7d, 0xd8,
	0xbc, 0xb0, 0x96, 0x1e, 0xe8, 0xa6, 0x29, 0xda, 0x0b, 0x2b, 0x99, 0x4b, 0xd5, 0x87, 0x1b, 0x5c,
	0xcd, 0xb3, 0x20, 0xd5, 0x09, 0x99, 0x3e, 0x79, 0xb4, 0xf2, 0x04, 0x7c, 0xf3, 0x9e, 0xbf, 0xc1,
	0x17, 0x2e, 0x54, 0x1f, 0x6e, 0x14, 0x6a, 0xd8, 0xcc, 0x34, 0xd7, 0xae, 0xd6, 0x5c, 0x18, 0x4f,
	0x52, 0xb3, 0x98, 0x77, 0xec, 0xb4, 0xa0, 0x61, 0xc4, 0xdc, 0x6d, 0x68, 0x2f, 0x6c, 0x80, 0x39,
	0xdc, 0x8f, 0xe1, 0xfd, 0xc5, 0x55, 0xe5, 0x71, 0xd0, 0x9b, 0x71, 0x73, 0x41, 0x6b, 0x2f, 0xda,
	0x39, 0x83, 0x8f, 0x42, 0x96, 0x5e, 0x12, 0xce, 0x8e, 0xad, 0x3b, 0xe1, 0x50, 0x36, 0xe4, 0xa1,
	0xf5, 0xe3, 0x0b, 0x03, 0x1d, 0xb1, 0x84, 0x66, 0x23, 0x8f, 0x15, 0xa3, 0xde, 0x08, 0x33, 0xd5,
	0xae, 0x3d, 0xfd, 0x8b, 0xe6, 0x31, 0x5f, 0xf6, 0x54, 0x7e, 0x2e, 0xad, 0xbf, 0x2d, 0xeb, 0xcf,
	0x4a, 0xf5, 0xf5, 0xcb, 0x83, 0x41, 0x5d, 0x71, 0x9e, 0xfc, 0x17, 0x00, 0x00, 0xff, 0xff, 0xc6,
	0x01, 0x5b, 0x5a, 0x5d, 0x0b, 0x00, 0x00,
}
